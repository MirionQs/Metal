(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    329735,       6570]
NotebookOptionsPosition[    324611,       6467]
NotebookOutlinePosition[    325045,       6484]
CellTagsIndexPosition[    325002,       6481]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["CheckVersion", "Section",
 CellChangeTimes->{3.8812489500300703`*^9, 
  3.889058898547368*^9},ExpressionUUID->"0acdbdfb-68ad-4f8d-93da-\
7584d7bec660"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "CheckVersion", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CheckVersion", "::", "vtl"}], " ", "=", " ", 
    "\"\<Mathematica \:7248\:672c\:8fc7\:4f4e. \:5f53\:524d\:7684\:7248\:672c\
\:4e3a ``, \:8981\:6c42\:7684\:7248\:672c\:4e3a ``.\>\""}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CheckVersion", "[", 
     RowBox[{"v_", "?", "NumericQ"}], "]"}], " ", ":=", "\[IndentingNewLine]",
     " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"TrueQ", "[", 
       RowBox[{"$VersionNumber", " ", "<", " ", "v"}], "]"}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"CheckVersion", "::", "vtl"}], ",", " ", "$VersionNumber", 
        ",", " ", "v"}], "]"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CheckVersion", "[", "10", "]"}], "\[IndentingNewLine]", 
 RowBox[{"CheckVersion", "[", "20", "]"}]}], "Input",
 CellChangeTimes->{{3.881249153968047*^9, 3.8812491653774567`*^9}, {
  3.881254836613456*^9, 3.8812548409438276`*^9}, {3.882200662580675*^9, 
  3.8822006680866556`*^9}, {3.8822009476508985`*^9, 3.8822009555863943`*^9}, {
  3.889058869949606*^9, 3.8890588904645743`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"8802847e-0aa3-4fbe-b871-0e48b98e1472"],

Cell[BoxData[
 TemplateBox[{
  "CheckVersion", "vtl", 
   "\"Mathematica \:7248\:672c\:8fc7\:4f4e. \:5f53\:524d\:7684\:7248\:672c\
\:4e3a \\!\\(\\*RowBox[{\\\"13.2`\\\"}]\\), \:8981\:6c42\:7684\:7248\:672c\
\:4e3a \\!\\(\\*RowBox[{\\\"20\\\"}]\\).\"", 2, 232, 32, 22164631493275300820,
    "Local", "Global`CheckVersion"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.8812491658678274`*^9, 3.8812526572892103`*^9, 3.8812548521047754`*^9, 
   3.881264216757911*^9, 3.8822005344848256`*^9, 3.882200668798619*^9, {
   3.882200948121871*^9, 3.882200956172943*^9}, 3.88905889258403*^9},
 CellLabel->
  "During evaluation of \
In[228]:=",ExpressionUUID->"66cd9868-369a-4aea-942d-e9cb4caebf61"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ExpressionPivot", "Section",
 CellChangeTimes->{
  3.881261571343264*^9},ExpressionUUID->"784fc19c-62f8-4bad-881c-\
fca2328794d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "ExpressionPivot", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "ExpressionPivot", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExpressionPivot", "[", "expr_", "]"}], ":=", 
    RowBox[{"FirstCase", "[", 
     RowBox[{"expr", ",", "_Symbol", ",", "False", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ExpressionPivot", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "x", ",", 
    FractionBox["a", 
     RowBox[{"a", "+", "b"}]]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8812615801230173`*^9, 3.88126167633887*^9}, {
   3.8812617663621626`*^9, 3.8812618238386993`*^9}, {3.8812620068443146`*^9, 
   3.8812620165175595`*^9}, {3.8812620479419527`*^9, 
   3.8812620815899687`*^9}, {3.8812621946866293`*^9, 3.881262209021083*^9}, {
   3.881262315054818*^9, 3.881262438736573*^9}, {3.881262498457862*^9, 
   3.8812625557944126`*^9}, {3.8812626485340843`*^9, 
   3.8812627685465975`*^9}, {3.8812628909450665`*^9, 
   3.8812629314502225`*^9}, {3.881262961971888*^9, 3.8812631580806475`*^9}, {
   3.8812632173477902`*^9, 3.881263309160058*^9}, {3.8822005740689077`*^9, 
   3.882200605935709*^9}, {3.8822006542479105`*^9, 3.882200690746396*^9}, 
   3.8822008109922595`*^9, {3.889057643315501*^9, 3.8890576531716785`*^9}, {
   3.8890577545740843`*^9, 3.889057757051575*^9}, {3.8890577877598405`*^9, 
   3.8890578377002153`*^9}, 3.889057934251857*^9, {3.889057973843111*^9, 
   3.889057992623109*^9}, {3.889058041097636*^9, 3.889058125047696*^9}, {
   3.8890581726753273`*^9, 3.889058185687188*^9}, {3.8890711078797207`*^9, 
   3.8890711545777483`*^9}, {3.889071782661847*^9, 3.889071796142689*^9}, {
   3.889071867712634*^9, 3.8890718895424705`*^9}},
 CellLabel->
  "In[1016]:=",ExpressionUUID->"2cf80ff6-bf72-4d35-b1f5-f03543c34b66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "x", ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{{3.881263029681779*^9, 3.881263158365161*^9}, {
   3.8812632194657574`*^9, 3.8812633097171683`*^9}, 3.881263392397648*^9, 
   3.881265552205414*^9, {3.8822005831546483`*^9, 3.882200609133211*^9}, 
   3.882200656635619*^9, 3.88220069118622*^9, 3.8822008113864794`*^9, {
   3.8890576393829947`*^9, 3.8890576534921494`*^9}, 3.8890577573947535`*^9, 
   3.889057838372447*^9, 3.8890579351322865`*^9, {3.8890579797600126`*^9, 
   3.889057993077814*^9}, {3.889058076797559*^9, 3.8890581384728007`*^9}, {
   3.88905817566448*^9, 3.8890581861029434`*^9}, 3.889059198965727*^9, 
   3.8890711635083895`*^9, 3.8890717966608677`*^9, {3.8890718777454143`*^9, 
   3.8890718899799433`*^9}},
 CellLabel->
  "Out[1019]=",ExpressionUUID->"e149b0d4-3fc0-4f34-8565-f6cb022db2c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CoefficientSeparation", "Section",
 CellChangeTimes->{
  3.8812488993542643`*^9, {3.889059222842462*^9, 3.8890592303488493`*^9}, {
   3.8890593346512423`*^9, 
   3.8890593390963335`*^9}},ExpressionUUID->"f82db896-cd4c-4cc8-84ca-\
4dbb44229ec2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "CoefficientSeparation", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "CoefficientSeparation", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CoefficientSeparation", "[", 
     RowBox[{"expr_", ",", "x_Symbol"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "coef", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FreeQ", "[", 
          RowBox[{"expr", ",", "x"}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"expr", ",", "1"}], "}"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            FractionBox["expr", "#"]}], "}"}], "&"}], "@", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c_.", "_"}], "/;", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"c", ",", "x"}], "]"}]}], "\[Rule]", "c"}], "]"}], "@", 
          RowBox[{"Simplify", "@", "expr"}]}]}], "//", "Simplify"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CoefficientSeparation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"a", "+", "b"}], "2"], ",", 
     FractionBox["2", 
      RowBox[{"a", "+", "b"}]], ",", 
     FractionBox[
      RowBox[{"a", "+", "b"}], 
      RowBox[{"2", "x"}]], ",", "x", ",", 
     RowBox[{"-", "x"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "+", 
      RowBox[{"4", "a", " ", "x"}]}]}], "}"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.881241904847962*^9, 3.881241987198187*^9}, {
   3.8812420312408314`*^9, 3.881242046928899*^9}, {3.8812423871845837`*^9, 
   3.881242405022174*^9}, 3.8812525017519813`*^9, {3.8812633706399508`*^9, 
   3.8812633878811007`*^9}, {3.882200537029644*^9, 3.882200563996333*^9}, {
   3.8822006123689237`*^9, 3.882200614089099*^9}, {3.882200672506434*^9, 
   3.8822006780377517`*^9}, 3.882200806127757*^9, {3.8890537514115505`*^9, 
   3.889053808475528*^9}, {3.8890539727361536`*^9, 3.8890540057319794`*^9}, {
   3.8890540808730783`*^9, 3.889054096899433*^9}, 3.8890545487134547`*^9, {
   3.8890549209593997`*^9, 3.889054935737418*^9}, {3.889054994449294*^9, 
   3.889055019502039*^9}, 3.8890550958059497`*^9, {3.889055129243005*^9, 
   3.889055150173757*^9}, {3.8890553599907513`*^9, 3.889055390612606*^9}, {
   3.8890557736609335`*^9, 3.889055786978454*^9}, {3.8890558981639132`*^9, 
   3.889055938055687*^9}, {3.889058591883483*^9, 3.8890585989581165`*^9}, {
   3.8890586398201203`*^9, 3.8890586412915077`*^9}, {3.8890586847547903`*^9, 
   3.8890586894029675`*^9}, {3.889059226951191*^9, 3.889059228236294*^9}, {
   3.889059331118971*^9, 3.889059331132559*^9}, {3.8890597949101176`*^9, 
   3.889059809706137*^9}, {3.8890598511338387`*^9, 3.889059968589416*^9}, 
   3.889060009495178*^9, {3.889060075719466*^9, 3.8890600981127143`*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"fcfad0f7-8d74-470f-91b3-73e347e63cc7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"a", "+", "b"}], "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", 
      RowBox[{"a", "+", "b"}]], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"a", "+", "b"}], "2"], ",", 
     FractionBox["1", "x"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "a"}], ",", 
     RowBox[{
      RowBox[{"2", " ", "x"}], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8812419481473436`*^9, 3.8812419884716463`*^9}, {
   3.8812420328120494`*^9, 3.8812420472353463`*^9}, 3.8812423676346383`*^9, 
   3.8812424190123997`*^9, 3.881248926754794*^9, 3.881248960524167*^9, 
   3.881249151692752*^9, 3.8812525093492107`*^9, {3.881263383645153*^9, 
   3.8812633883594255`*^9}, 3.8822005691071963`*^9, 3.8822006145621386`*^9, 
   3.882200678540535*^9, 3.882200807769185*^9, 3.882200958946048*^9, {
   3.8890537747634616`*^9, 3.889053787277115*^9}, {3.889053984226675*^9, 
   3.889054006079468*^9}, 3.8890540812591887`*^9, {3.8890549254876714`*^9, 
   3.889054942607421*^9}, {3.8890550000816965`*^9, 3.8890550199950476`*^9}, 
   3.8890550962967024`*^9, 3.889055129915924*^9, {3.8890553611597753`*^9, 
   3.889055390933779*^9}, {3.889055774265524*^9, 3.8890557874416385`*^9}, 
   3.8890558988916054`*^9, 3.8890559598391476`*^9, 3.889059196527463*^9, 
   3.889059342183187*^9, 3.88905981021385*^9, {3.8890598515791397`*^9, 
   3.8890599691147623`*^9}, 3.889060099212435*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"6cdb8a83-e535-4fc4-a454-50154dbff36a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBP", "Section",
 CellChangeTimes->{
  3.881248909154277*^9},ExpressionUUID->"0870485f-1fbb-4531-ade5-\
39dfcfc3ddc3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "IBP", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IBP", "[", 
    RowBox[{"u_", ",", " ", "v_", ",", " ", "x_Symbol"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coef", ",", "rem"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coef", ",", "rem"}], "}"}], "=", 
       RowBox[{"CoefficientSeparation", "[", 
        RowBox[{
         RowBox[{"v", " ", 
          RowBox[{"D", "[", 
           RowBox[{"u", ",", " ", "x"}], "]"}]}], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"u", " ", "v"}], "-", 
        RowBox[{"coef", 
         TemplateBox[{"rem", "x"},
          "InactiveIntegrate",
          DisplayFunction->(RowBox[{
             StyleBox["\[Integral]", "Inactive"], 
             RowBox[{#, 
               RowBox[{
                 StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
          InterpretationFunction->(RowBox[{
             RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
             RowBox[{#, ",", #2}], "]"}]& )]}]}], "//", "Simplify"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBP", "[", 
     RowBox[{"f_", ",", " ", "x_Symbol"}], "]"}], " ", ":=", " ", 
    RowBox[{"IBP", "[", 
     RowBox[{"f", ",", " ", "x", ",", " ", "x"}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IBP", "[", 
    RowBox[{"u_", ",", " ", "v_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x_Symbol", ",", " ", "a_", ",", " ", "b_"}], "}"}]}], "]"}], 
   " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coef", ",", "rem"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coef", ",", "rem"}], "}"}], "=", 
       RowBox[{"CoefficientSeparation", "[", 
        RowBox[{
         RowBox[{"v", " ", 
          RowBox[{"D", "[", 
           RowBox[{"u", ",", " ", "x"}], "]"}]}], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         UnderscriptBox["\[Limit]", 
          RowBox[{"x", "->", "b"}]], 
         RowBox[{"u", " ", "v"}]}], "-", 
        RowBox[{
         UnderscriptBox["\[Limit]", 
          RowBox[{"x", "->", "a"}]], 
         RowBox[{"u", " ", "v"}]}], "-", 
        RowBox[{"coef", 
         TemplateBox[{"rem", "x", "a", "b"},
          "InactiveIntegrate",
          DisplayFunction->(RowBox[{
             SubsuperscriptBox[
              StyleBox["\[Integral]", "Inactive"], #3, #4], 
             RowBox[{#, 
               RowBox[{
                 StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
          InterpretationFunction->(RowBox[{
             RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
             RowBox[{#, ",", 
               RowBox[{"{", 
                 RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}], "//",
        "Simplify"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBP", "[", 
     RowBox[{"f_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x_Symbol", ",", " ", "a_", ",", " ", "b_"}], "}"}]}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"IBP", "[", 
     RowBox[{"f", ",", " ", "x", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "a", ",", " ", "b"}], "}"}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"IBP", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"b", " ", "x"}], "+", "c"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", " ", "x"}], "]"}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"IBP", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8812410834260216`*^9, 3.881241134149821*^9}, {
   3.881241254961246*^9, 3.8812413680035696`*^9}, {3.881241470517207*^9, 
   3.881241501439555*^9}, {3.8812415507977233`*^9, 3.881241693887342*^9}, {
   3.881241853234975*^9, 3.8812418771560845`*^9}, {3.881242492384276*^9, 
   3.881242534238098*^9}, {3.881242579340028*^9, 3.8812426968652234`*^9}, 
   3.8812521964052157`*^9, 3.8812524928397207`*^9, {3.8822006961253505`*^9, 
   3.882200699226946*^9}, {3.8890585045880475`*^9, 3.8890585203069677`*^9}, {
   3.889059226976026*^9, 3.8890592269810314`*^9}, {3.8890593311390696`*^9, 
   3.8890593311430717`*^9}, {3.889060461027707*^9, 3.8890604634711876`*^9}, {
   3.8890605280058117`*^9, 3.8890605765441027`*^9}, {3.8890606839204807`*^9, 
   3.889060695482535*^9}, 3.8890607917205057`*^9},
 CellLabel->
  "In[317]:=",ExpressionUUID->"d98e5719-a905-4c40-ba62-eee6ff6ca634"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"c", "+", 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"b", "+", 
        RowBox[{"a", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "-", 
  TemplateBox[{
    RowBox[{
      RowBox[{"(", 
        RowBox[{"b", "+", 
          RowBox[{"2", " ", "a", " ", "x"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
        RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "x"},
   "InactiveIntegrate",
   DisplayFunction->(RowBox[{
      StyleBox["\[Integral]", "Inactive"], 
      RowBox[{#, 
        RowBox[{
          StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
      RowBox[{#, ",", #2}], "]"}]& )]}]], "Output",
 CellChangeTimes->{{3.881241096158072*^9, 3.881241103671297*^9}, {
   3.88124146574174*^9, 3.881241471108597*^9}, {3.881241689332575*^9, 
   3.8812416945595427`*^9}, {3.881241854792668*^9, 3.881241877430534*^9}, 
   3.881242445668012*^9, 3.8812424950309677`*^9, {3.881242528865363*^9, 
   3.8812425345635405`*^9}, {3.881242579969435*^9, 3.881242697442633*^9}, 
   3.8812489281468043`*^9, 3.881248962661623*^9, 3.881252510543561*^9, 
   3.8822007001348343`*^9, 3.8890584981049194`*^9, 3.8890605895369253`*^9, 
   3.889060713878621*^9, 3.889060794184311*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"890fef5b-bced-4691-8843-8faf04393a5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
  RowBox[{"\[Alpha]", " ", 
   TemplateBox[{
     RowBox[{"Cos", "[", 
       RowBox[{"\[Alpha]", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}], "x"},
    "InactiveIntegrate",
    DisplayFunction->(RowBox[{
       StyleBox["\[Integral]", "Inactive"], 
       RowBox[{#, 
         RowBox[{
           StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}]}]], "Output",
 CellChangeTimes->{{3.881241096158072*^9, 3.881241103671297*^9}, {
   3.88124146574174*^9, 3.881241471108597*^9}, {3.881241689332575*^9, 
   3.8812416945595427`*^9}, {3.881241854792668*^9, 3.881241877430534*^9}, 
   3.881242445668012*^9, 3.8812424950309677`*^9, {3.881242528865363*^9, 
   3.8812425345635405`*^9}, {3.881242579969435*^9, 3.881242697442633*^9}, 
   3.8812489281468043`*^9, 3.881248962661623*^9, 3.881252510543561*^9, 
   3.8822007001348343`*^9, 3.8890584981049194`*^9, 3.8890605895369253`*^9, 
   3.889060713878621*^9, 3.88906079418931*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"1e500dc7-b054-4386-b34d-c9791aaead1f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBS", "Section",
 CellChangeTimes->{{3.881248913047449*^9, 
  3.8812489142694426`*^9}},ExpressionUUID->"23a1a542-50f0-42ff-bd50-\
712fb6e1df74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "IBS", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "IBS", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"Assumptions", "\[Rule]", "$Assumptions"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"ex_", "\[Rule]", "et_"}], ",", "x_Symbol", ",", "t_Symbol", 
      ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"ex", ",", "t"}], "]"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"assum", "=", 
        RowBox[{"OptionValue", "[", "Assumptions", "]"}]}], ",", "u"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CheckVersion", "[", "13.1", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ex", "===", "x"}], ",", "\[IndentingNewLine]", 
            RowBox[{"f", "/.", 
             RowBox[{"x", "->", "et"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"IntegrateChangeVariables", "[", 
               RowBox[{
                TemplateBox[{"f", "x"},
                 "InactiveIntegrate",
                 DisplayFunction->(RowBox[{
                    StyleBox["\[Integral]", "Inactive"], 
                    RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
                 InterpretationFunction->(RowBox[{
                    RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                    RowBox[{#, ",", #2}], "]"}]& )], ",", "u", ",", 
                RowBox[{"u", "\[Equal]", "ex"}], ",", 
                RowBox[{"Assumptions", "->", "assum"}]}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/.", 
             RowBox[{"u", "->", "et"}]}]}], "\[IndentingNewLine]", "]"}], 
          RowBox[{"D", "[", 
           RowBox[{"et", ",", "t"}], "]"}]}], "/.", 
         RowBox[{
          RowBox[{"C", "[", "_", "]"}], "->", "0"}]}], "\[IndentingNewLine]", 
        ",", "assum"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"x_Symbol", "\[Rule]", "et_"}], ",", "t_Symbol", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", 
   RowBox[{"IBS", "[", 
    RowBox[{"f", ",", 
     RowBox[{"x", "->", "et"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"IBS", "[", 
      RowBox[{"f_", ",", 
       RowBox[{"ex_", "\[Rule]", "t_Symbol"}], ",", "x_Symbol", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
     RowBox[{
      RowBox[{"x", "=!=", "t"}], "&&", 
      RowBox[{"FreeQ", "[", 
       RowBox[{"ex", ",", "t"}], "]"}]}]}], ":=", 
    RowBox[{"IBS", "[", 
     RowBox[{"f", ",", 
      RowBox[{"ex", "->", "t"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], ",", 
      RowBox[{"ex_", "\[Rule]", "et_"}], ",", "x_Symbol", ",", "t_Symbol", 
      ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"ex", ",", "t"}], "]"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"assum", "=", 
        RowBox[{"OptionValue", "[", "Assumptions", "]"}]}], ",", "u", ",", 
       "temp"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CheckVersion", "[", "13.1", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ex", "===", "x"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          TemplateBox[{"f", "x", "a", "b"},
           "InactiveIntegrate",
           DisplayFunction->(RowBox[{
              SubsuperscriptBox[
               StyleBox["\[Integral]", "Inactive"], #3, #4], 
              RowBox[{#, 
                RowBox[{
                  StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
           InterpretationFunction->(RowBox[{
              RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
              RowBox[{#, ",", 
                RowBox[{"{", 
                  RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "/.", 
          RowBox[{"x", "->", "u"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"IntegrateChangeVariables", "[", 
          RowBox[{
           TemplateBox[{"f", "x", "a", "b"},
            "InactiveIntegrate",
            DisplayFunction->(RowBox[{
               SubsuperscriptBox[
                StyleBox["\[Integral]", "Inactive"], #3, #4], 
               RowBox[{#, 
                 RowBox[{
                   StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
            InterpretationFunction->(RowBox[{
               RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
               RowBox[{#, ",", 
                 RowBox[{"{", 
                   RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], ",", 
           "u", ",", 
           RowBox[{"u", "\[Equal]", "ex"}], ",", 
           RowBox[{"Assumptions", "->", "assum"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"et", "===", "t"}], ",", "\[IndentingNewLine]", 
          RowBox[{"temp", "/.", 
           RowBox[{"u", "->", "t"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"IntegrateChangeVariables", "[", 
           RowBox[{"temp", ",", "t", ",", 
            RowBox[{"u", "==", "et"}], ",", 
            RowBox[{"Assumptions", "->", "assum"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", "assum"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], ",", 
      RowBox[{"x_Symbol", "\[Rule]", "et_"}], ",", "t_Symbol", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", 
   RowBox[{"IBS", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"x", "->", "et"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"IBS", "[", 
      RowBox[{"f_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_"}], "}"}], ",", 
       RowBox[{"ex_", "\[Rule]", "t_Symbol"}], ",", "x_Symbol", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
     RowBox[{
      RowBox[{"x", "=!=", "t"}], "&&", 
      RowBox[{"FreeQ", "[", 
       RowBox[{"ex", ",", "t"}], "]"}]}]}], ":=", 
    RowBox[{"IBS", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"ex", "->", "t"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"IBS", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{
    SuperscriptBox["E", "x"], "\[Rule]", 
    SuperscriptBox["E", "t"]}], ",", "x", ",", "t", ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"x", ">", "0"}], "&&", 
     RowBox[{"t", ">", "0"}]}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"IBS", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{
    RowBox[{"2", "x"}], "\[Rule]", 
    SuperscriptBox["E", "t"]}], ",", "x", ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8812501185982747`*^9, 3.8812501595253873`*^9}, {
   3.881250441863079*^9, 3.8812504509665236`*^9}, 3.88125049736209*^9, {
   3.8812505361095486`*^9, 3.88125057562376*^9}, {3.8812506367271*^9, 
   3.881250720217284*^9}, {3.881250982739813*^9, 3.8812510539273024`*^9}, {
   3.88125108999737*^9, 3.881251136919894*^9}, {3.8812511747547426`*^9, 
   3.8812511782688627`*^9}, {3.881251237859644*^9, 3.881251242551485*^9}, {
   3.881251291751128*^9, 3.8812514159179325`*^9}, {3.8812517291469507`*^9, 
   3.881251756013675*^9}, {3.8812519373876343`*^9, 3.881252062230215*^9}, {
   3.8812521740826983`*^9, 3.881252246766799*^9}, {3.8812522894637136`*^9, 
   3.8812522916847997`*^9}, {3.8812523308504343`*^9, 3.881252354906809*^9}, {
   3.8812524346601243`*^9, 3.8812524850068884`*^9}, {3.8812525167804737`*^9, 
   3.8812526299537115`*^9}, {3.8812526683656545`*^9, 3.881252707045879*^9}, {
   3.8812527597048073`*^9, 3.881252793251134*^9}, {3.88125283145623*^9, 
   3.881252888075912*^9}, {3.881253001656077*^9, 3.8812530215196753`*^9}, {
   3.881253062374042*^9, 3.881253081762101*^9}, {3.8812532995850477`*^9, 
   3.8812533421694384`*^9}, {3.881253382453553*^9, 3.8812534757402163`*^9}, {
   3.881253553975247*^9, 3.8812535672880754`*^9}, {3.88125361042743*^9, 
   3.881253756248664*^9}, {3.881253794219369*^9, 3.8812538359813766`*^9}, {
   3.8812538716807528`*^9, 3.8812539531971455`*^9}, {3.8812539990572057`*^9, 
   3.881254087631789*^9}, {3.881254127972443*^9, 3.8812541530296288`*^9}, {
   3.8812542721658278`*^9, 3.8812544258280554`*^9}, {3.8812545072004304`*^9, 
   3.881254519974309*^9}, {3.881254655234125*^9, 3.8812546796198215`*^9}, {
   3.881254723708355*^9, 3.8812547386305695`*^9}, {3.88125481230455*^9, 
   3.881254812729741*^9}, {3.8812548850784864`*^9, 3.8812550107871747`*^9}, {
   3.8812551285847874`*^9, 3.881255165137235*^9}, {3.881255195355729*^9, 
   3.8812552068693247`*^9}, {3.8812552442616286`*^9, 
   3.8812552682985454`*^9}, {3.88125530242895*^9, 3.8812553024692345`*^9}, {
   3.8812553354878483`*^9, 3.881255362908206*^9}, {3.8812555215499744`*^9, 
   3.88125552359336*^9}, {3.881255555356881*^9, 3.88125566324966*^9}, {
   3.881255864832225*^9, 3.8812559721619787`*^9}, {3.8812560566197586`*^9, 
   3.8812561051948843`*^9}, {3.8812562057198954`*^9, 
   3.8812562710189867`*^9}, {3.881256631753805*^9, 3.881256655584632*^9}, {
   3.881256686995875*^9, 3.881257196404513*^9}, {3.8812572436486535`*^9, 
   3.8812572681068573`*^9}, {3.881257318711217*^9, 3.881257361327052*^9}, {
   3.881257434474887*^9, 3.8812574358273134`*^9}, {3.8812575497527356`*^9, 
   3.8812576029089355`*^9}, 3.8812579159987116`*^9, {3.882200489881076*^9, 
   3.8822004954928846`*^9}, {3.8822007138779793`*^9, 3.882200739319167*^9}, {
   3.889058870032848*^9, 3.8890588783356028`*^9}, 3.889060789071501*^9, {
   3.889061717177822*^9, 3.8890617910826645`*^9}, {3.889061867179408*^9, 
   3.889061878100355*^9}, {3.8890619675131736`*^9, 3.8890620899489784`*^9}, {
   3.889062164549316*^9, 3.88906216492441*^9}, {3.889062949346699*^9, 
   3.889062960534238*^9}, {3.8890631525855865`*^9, 
   3.889063155083607*^9}},ExpressionUUID->"3a78e23b-afa1-4afd-b071-\
1979d220226b"],

Cell[BoxData[
 SuperscriptBox["t", "2"]], "Output",
 CellChangeTimes->{{3.8812570375264273`*^9, 3.8812570711812725`*^9}, {
   3.881257110046982*^9, 3.8812571158040648`*^9}, {3.8812571883470535`*^9, 
   3.8812571971375866`*^9}, {3.8812572445727463`*^9, 
   3.8812572684852047`*^9}, {3.8812573228156233`*^9, 3.8812573616958375`*^9}, 
   3.881257436343524*^9, {3.8812575507605095`*^9, 3.881257559200346*^9}, 
   3.881257595417079*^9, 3.8812579163155446`*^9, 3.882200718021447*^9, 
   3.889061735760664*^9, 3.889061791669753*^9, 3.8890619291115685`*^9, 
   3.8890620057909803`*^9, 3.889062135615346*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"cd03747e-6abb-4d83-a05d-6823343737e0"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"3", " ", "t"}]], "8"], "t", 
   RowBox[{"-", "\[Infinity]"}], 
   RowBox[{"Log", "[", "2", "]"}]},
  "InactiveIntegrate",
  DisplayFunction->(RowBox[{
     SubsuperscriptBox[
      StyleBox["\[Integral]", "Inactive"], #3, #4], 
     RowBox[{#, 
       RowBox[{
         StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8812570375264273`*^9, 3.8812570711812725`*^9}, {
   3.881257110046982*^9, 3.8812571158040648`*^9}, {3.8812571883470535`*^9, 
   3.8812571971375866`*^9}, {3.8812572445727463`*^9, 
   3.8812572684852047`*^9}, {3.8812573228156233`*^9, 3.8812573616958375`*^9}, 
   3.881257436343524*^9, {3.8812575507605095`*^9, 3.881257559200346*^9}, 
   3.881257595417079*^9, 3.8812579163155446`*^9, 3.882200718021447*^9, 
   3.889061735760664*^9, 3.889061791669753*^9, 3.8890619291115685`*^9, 
   3.8890620057909803`*^9, 3.88906213569696*^9},
 CellLabel->
  "Out[403]=",ExpressionUUID->"85e292da-5e89-43f2-9f41-09bc7235e962"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ApartArcTan", "Section",
 CellChangeTimes->{
  3.8812490891049585`*^9},ExpressionUUID->"87fd259e-20f9-4879-89a8-\
14ec4ecb826d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "ApartArcTan", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "ApartArcTan", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ApartArcTan", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"GenerateConstant", "\[Rule]", "False"}], ",", 
     RowBox[{"SimplifyFunction", "\[Rule]", "Simplify"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ApartArcTan", "[", 
     RowBox[{"expr_", ",", "x_Symbol", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{"RationalExpressionQ", "[", 
     RowBox[{"expr", ",", "x"}], "]"}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simp", "=", 
        RowBox[{"OptionValue", "[", "SimplifyFunction", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"gene", "=", 
        RowBox[{"OptionValue", "[", "GenerateConstant", "]"}]}], ",", 
       "\[IndentingNewLine]", "roots", ",", "result", ",", "zeros", ",", 
       "offset"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roots", "=", 
       RowBox[{"x", "/.", "\[VeryThinSpace]", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"expr", "\[Equal]", "\[ImaginaryI]"}], ",", "x"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ArcTan", "@", 
          RowBox[{"simp", "@", 
           FractionBox[
            RowBox[{"x", "-", 
             RowBox[{"Re", "@", "r"}]}], 
            RowBox[{"Im", "@", "r"}]]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "roots"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "gene"}], ",", 
        RowBox[{"Return", "@", "result"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"zeros", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"DeleteDuplicates", "@", "\[VeryThinSpace]", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Denominator", "@", 
             RowBox[{"Together", "@", "expr"}]}], "\[Equal]", "0"}], ",", 
           "x"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "+=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "zeros"}], "===", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ArcTan", "@", "expr"}], "-", "result"}], "/.", 
          "\[VeryThinSpace]", 
          RowBox[{"x", "\[Rule]", "0"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"offset", "=", 
           RowBox[{"Append", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 UnderscriptBox["\[Limit]", 
                  TagBox[
                   RowBox[{"x", "\[Rule]", 
                    SuperscriptBox["i", "-"]}],
                   "AlternateLimitDirection"]], 
                 RowBox[{"ArcTan", "[", "expr", "]"}]}], "-", 
                RowBox[{"(", 
                 RowBox[{"result", "/.", "\[VeryThinSpace]", 
                  RowBox[{"x", "\[Rule]", "i"}]}], ")"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "zeros"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               UnderscriptBox["\[Limit]", 
                TagBox[
                 RowBox[{"x", "\[Rule]", 
                  SuperscriptBox[
                   RowBox[{"Last", "[", "zeros", "]"}], "+"]}],
                 "AlternateLimitDirection"]], 
               RowBox[{"ArcTan", "[", "expr", "]"}]}], "-", 
              RowBox[{"(", 
               RowBox[{"result", "/.", "\[VeryThinSpace]", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"Last", "@", "zeros"}]}]}], ")"}]}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Piecewise", "[", "\[IndentingNewLine]", 
           RowBox[{"Append", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"offset", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{
                    "zeros", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "<", "x", "<", 
                    RowBox[{"zeros", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}]}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{
                    RowBox[{"Length", "@", "zeros"}], "-", "1"}]}], "}"}]}], 
                "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"First", "[", "offset", "]"}], ",", 
                 RowBox[{"x", "<", 
                  RowBox[{"First", "[", "zeros", "]"}]}]}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Last", "[", "offset", "]"}], ",", 
               RowBox[{"x", ">", 
                RowBox[{"Last", "[", "zeros", "]"}]}]}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"result", "//", "Simplify"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ApartArcTan", "[", 
     RowBox[{"expr_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"ApartArcTan", "[", 
     RowBox[{"expr", ",", 
      RowBox[{"ExpressionPivot", "@", "expr"}], ",", "opts"}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApartArcTan", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["x", "2"], ",", 
      RowBox[{"t", "+", 
       FractionBox["1", "t"]}], ",", 
      RowBox[{"u", "-", 
       FractionBox["1", "u"]}]}], "}"}], ",", 
    RowBox[{"GenerateConstant", "->", "True"}]}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{{3.8812579937599535`*^9, 3.8812580454554296`*^9}, {
   3.881258091123928*^9, 3.8812581000331306`*^9}, {3.881258400107002*^9, 
   3.88125848916411*^9}, 3.881258529716839*^9, {3.8812586543925095`*^9, 
   3.881258656763394*^9}, {3.8812587169615717`*^9, 3.881258751283495*^9}, {
   3.881258915069893*^9, 3.881259002964484*^9}, {3.8812591023158693`*^9, 
   3.881259106912133*^9}, {3.881259256232505*^9, 3.881259263718057*^9}, {
   3.881260942875499*^9, 3.8812609745674343`*^9}, {3.881261018392753*^9, 
   3.8812610442157116`*^9}, {3.881261083960019*^9, 3.8812612191590977`*^9}, {
   3.881261252393591*^9, 3.881261329037558*^9}, {3.8812613846207304`*^9, 
   3.8812614082953234`*^9}, {3.881261442822*^9, 3.881261442881712*^9}, {
   3.881263409387904*^9, 3.881263469837472*^9}, {3.88126353175771*^9, 
   3.8812635350046625`*^9}, {3.88126358216722*^9, 3.88126371509764*^9}, {
   3.881264007939382*^9, 3.8812640089345365`*^9}, {3.882200625076586*^9, 
   3.882200633522716*^9}, {3.8822008204125423`*^9, 3.882200846872743*^9}, {
   3.8822008821188498`*^9, 3.8822008827757382`*^9}, {3.889062190097275*^9, 
   3.8890622143260984`*^9}, {3.889062410071129*^9, 3.8890624174009476`*^9}, {
   3.8890624944307275`*^9, 3.8890625160054226`*^9}, {3.889062555743532*^9, 
   3.88906268127707*^9}, {3.8890627619787054`*^9, 3.8890627801673503`*^9}, {
   3.889062896028719*^9, 3.889062933833395*^9}, {3.8890631712916107`*^9, 
   3.8890631812766867`*^9}, {3.8890736824513035`*^9, 3.8890736960214252`*^9}},
 CellLabel->
  "In[1149]:=",ExpressionUUID->"c6911c1f-5536-4bac-aab2-4c6f9b5462be"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"1", "-", 
           RowBox[{
            SqrtBox["2"], " ", "x"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"1", "+", 
           RowBox[{
            SqrtBox["2"], " ", "x"}]}], "]"}]}]}], ")"}]}]},
    {
     RowBox[{
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        RowBox[{"1", "-", 
         SqrtBox["5"]}]], "]"}], "+", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        RowBox[{"1", "+", 
         SqrtBox["5"]}]], "]"}], "+", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"-", 
               FractionBox["\[Pi]", "2"]}], 
              RowBox[{"t", "<", "0"}]},
             {
              FractionBox["\[Pi]", "2"], 
              RowBox[{"t", ">", "0"}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}},
            Selectable->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True], ")"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         SqrtBox["3"], "-", 
         RowBox[{"2", " ", "u"}]}], "]"}]}], "+", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        SqrtBox["3"], "+", 
        RowBox[{"2", " ", "u"}]}], "]"}], "+", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              FractionBox["\[Pi]", "2"], 
              RowBox[{"u", "<", "0"}]},
             {
              RowBox[{"-", 
               FractionBox["\[Pi]", "2"]}], 
              RowBox[{"u", ">", "0"}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}},
            Selectable->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True], ")"}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.881261290454566*^9, {3.881261385796606*^9, 3.881261408824586*^9}, 
   3.8812614433943033`*^9, {3.8812634435957384`*^9, 3.881263470177644*^9}, 
   3.881263535313285*^9, {3.8812635835554004`*^9, 3.881263630943241*^9}, 
   3.8812636688401675`*^9, {3.8812637031068983`*^9, 3.881263715439636*^9}, {
   3.882200824540231*^9, 3.8822008472341485`*^9}, 3.8822008837525187`*^9, {
   3.8890621964116263`*^9, 3.8890622169243155`*^9}, 3.889062618282593*^9, 
   3.889062730276738*^9, 3.8890627806631584`*^9, 3.8890631935298014`*^9, 
   3.8890719329844265`*^9, 3.889073698808498*^9},
 CellLabel->
  "Out[1154]=",ExpressionUUID->"cf381d1d-02bf-4545-aa3e-8cf4deadde7c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RealFactor", "Section",
 CellChangeTimes->{
  3.8812491058477163`*^9},ExpressionUUID->"11e84cdc-6ae0-4d8f-ad5f-\
74b77672d2dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "RealFactor", "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "RealFactor", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RealFactor", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"SimplifyFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"RootReduce", "/*", "ToRadicals", "/*", "Simplify"}], ")"}]}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealFactor", "[", 
     RowBox[{"poly_", ",", "x_Symbol", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{"PolynomialQ", "[", 
     RowBox[{"poly", ",", "x"}], "]"}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"simp", "=", 
        RowBox[{"OptionValue", "[", "SimplifyFunction", "]"}]}], ",", "roots",
        ",", 
       RowBox[{"result", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FreeQ", "[", 
         RowBox[{"poly", ",", "x"}], "]"}], ",", 
        RowBox[{"Return", "@", "poly"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{
         RowBox[{"x", "/.", "\[VeryThinSpace]", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"poly", "\[Equal]", "0"}], ",", "x"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"#1", "\[Conjugate]"}], "==", "#2"}], "]"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"poly", ",", "x", ",", 
         RowBox[{"Exponent", "[", 
          RowBox[{"poly", ",", "x"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
       RowBox[{"Times", "@@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"x", "-", "root"}], 
                  RowBox[{"root", "\[Element]", 
                   TemplateBox[{},
                    "Reals"]}]},
                 {
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"Re", "@", "root"}]}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"Im", "@", "root"}], ")"}], "2"]}], "True"}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                Selectable->True]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], "//", "simp"}], ",", 
          RowBox[{"{", 
           RowBox[{"root", ",", "roots"}], "}"}]}], "]"}]}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealFactor", "[", 
     RowBox[{"poly_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"RealFactor", "[", 
     RowBox[{"poly", ",", 
      RowBox[{"ExpressionPivot", "[", "poly", "]"}], ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RealFactor", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "4"], "-", 
      SuperscriptBox["x", "2"], "+", "x", "-", "1"}], ",", 
     RowBox[{
      SuperscriptBox["x", "4"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["x", "5"], "-", "1"}]}], "}"}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{
  3.8812580491683607`*^9, {3.881263966627664*^9, 3.881263969261916*^9}, 
   3.8812640734317923`*^9, {3.881264231738807*^9, 3.8812642858785086`*^9}, {
   3.8812643224956493`*^9, 3.8812643747459936`*^9}, {3.8812645412010183`*^9, 
   3.8812645532896304`*^9}, {3.8812646007263856`*^9, 
   3.8812646645781016`*^9}, {3.8812654068297653`*^9, 
   3.8812654805697947`*^9}, {3.881265515385543*^9, 3.8812656484654913`*^9}, {
   3.881265684440327*^9, 3.8812657084259996`*^9}, {3.8812657541001334`*^9, 
   3.8812658204188547`*^9}, {3.8812658768175325`*^9, 
   3.8812658814140096`*^9}, {3.8812659535759387`*^9, 
   3.8812660192784824`*^9}, {3.8812660870251684`*^9, 3.8812663212734404`*^9}, 
   3.8812663617997694`*^9, {3.8812667388641176`*^9, 3.8812668408070326`*^9}, {
   3.8812669414644504`*^9, 3.881266952569973*^9}, {3.8812670371818304`*^9, 
   3.8812673389672956`*^9}, {3.8812673760999093`*^9, 
   3.8812674060054393`*^9}, {3.8812674786771097`*^9, 3.88126758441547*^9}, {
   3.8813888028648195`*^9, 3.8813888047747216`*^9}, {3.8821882642438083`*^9, 
   3.8821882644274273`*^9}, {3.8822008519990673`*^9, 
   3.8822008755694294`*^9}, {3.8890622700363526`*^9, 
   3.8890622809350915`*^9}, {3.889063406169979*^9, 3.889063556769661*^9}, {
   3.889064390693195*^9, 3.889064440554367*^9}, {3.889067113605857*^9, 
   3.8890671237570047`*^9}, 3.889067172800167*^9, {3.8890672595806823`*^9, 
   3.889067330322604*^9}, {3.889067367207037*^9, 3.889067387381624*^9}, {
   3.8890674420354147`*^9, 3.8890674692047625`*^9}, {3.8890684150220013`*^9, 
   3.889068544281705*^9}, {3.889068587627345*^9, 3.8890686291851873`*^9}, {
   3.8890687802315445`*^9, 3.889068789160838*^9}, {3.889069643192693*^9, 
   3.8890697419813986`*^9}, {3.8890698602418704`*^9, 3.889069867443205*^9}, {
   3.8890700155417075`*^9, 3.8890701923329983`*^9}, {3.8890702260309925`*^9, 
   3.889070267033826*^9}, {3.8890703146105804`*^9, 3.8890703306473455`*^9}, {
   3.8890703747003484`*^9, 3.8890704668172913`*^9}, {3.8890705393665533`*^9, 
   3.8890706275687304`*^9}, {3.889070787525052*^9, 3.8890707959442616`*^9}, {
   3.8890708276563687`*^9, 3.88907086774119*^9}, {3.8890709153327303`*^9, 
   3.889071043488144*^9}, {3.889071284711914*^9, 3.8890715435927467`*^9}, {
   3.889071589413921*^9, 3.889071589563225*^9}, {3.8890719717316427`*^9, 
   3.889072000978933*^9}, {3.889072066333835*^9, 3.889072080233167*^9}, {
   3.889072740583477*^9, 3.889072878573455*^9}, {3.8890729350417075`*^9, 
   3.8890729834793925`*^9}, {3.889073671626507*^9, 3.8890736750053225`*^9}, {
   3.8890740869936304`*^9, 3.8890740970854273`*^9}},
 CellLabel->
  "In[1143]:=",ExpressionUUID->"4c9516ba-7077-4b96-8726-f5628ebd60bf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      FractionBox["1", "72"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"2", "/", "3"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"839", "-", 
               RowBox[{"87", " ", 
                SqrtBox["93"]}]}], ")"}], 
             RowBox[{"1", "/", "3"}]]}], "+", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"2", "/", "3"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"839", "+", 
               RowBox[{"87", " ", 
                SqrtBox["93"]}]}], ")"}], 
             RowBox[{"1", "/", "3"}]]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"29", "-", 
                 RowBox[{"3", " ", 
                  SqrtBox["93"]}]}], ")"}]}], ")"}], 
             RowBox[{"1", "/", "3"}]], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"29", "+", 
                 RowBox[{"3", " ", 
                  SqrtBox["93"]}]}], ")"}]}], ")"}], 
             RowBox[{"1", "/", "3"}]], "-", 
            RowBox[{"6", " ", "x"}]}], ")"}], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"29", "-", 
                RowBox[{"3", " ", 
                 SqrtBox["93"]}]}], ")"}]}], ")"}], 
            RowBox[{"1", "/", "3"}]], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"29", "+", 
                RowBox[{"3", " ", 
                 SqrtBox["93"]}]}], ")"}]}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], ")"}]}], "+", "x"}], ")"}]}]},
    {
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SqrtBox["2"], " ", "x"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SqrtBox["2"], " ", "x"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}]}]},
    {
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "x", "-", 
        RowBox[{
         SqrtBox["5"], " ", "x"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "x", "+", 
        RowBox[{
         SqrtBox["5"], " ", "x"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "2"]}]}], ")"}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.8890706438581524`*^9, 3.8890707975343037`*^9, {3.8890708340388536`*^9, 
   3.889070868233267*^9}, {3.8890709158507566`*^9, 3.8890709648381386`*^9}, {
   3.889070996889553*^9, 3.8890710329881725`*^9}, 3.8890712924997516`*^9, {
   3.889071460363001*^9, 3.8890714864727182`*^9}, {3.8890715226589894`*^9, 
   3.889071543868573*^9}, 3.889071589850163*^9, 3.889071940954754*^9, {
   3.8890719762681513`*^9, 3.8890720014376287`*^9}, {3.889072862923274*^9, 
   3.889072884239982*^9}, {3.8890729383780093`*^9, 3.8890729838492856`*^9}, 
   3.8890736767645307`*^9},
 CellLabel->
  "Out[1148]=",ExpressionUUID->"42ae4c69-ff9e-4437-87a0-0e4ea0a4206e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RealApart", "Section",
 CellChangeTimes->{
  3.881249117933973*^9},ExpressionUUID->"090ecfcf-eec3-4fc4-a926-\
55581966e032"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "RealApart", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "RealApart", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RealApart", "]"}], ":=", 
   RowBox[{"Options", "[", "RealFactor", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealApart", "[", 
     RowBox[{"poly_", ",", "x_Symbol", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{"RationalExpressionQ", "[", 
     RowBox[{"poly", ",", "x"}], "]"}]}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"Numerator", "@", "poly"}], 
     RowBox[{"RealFactor", "[", 
      RowBox[{
       RowBox[{"Denominator", "@", "poly"}], ",", "opts"}], "]"}]], "//", 
    "Apart"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealApart", "[", 
     RowBox[{"poly_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"RealApart", "[", 
     RowBox[{"poly", ",", 
      RowBox[{"ExpressionPivot", "[", "poly", "]"}], ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RealApart", "[", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "4"], "+", "1"}]], ",", 
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", "5"}]], ",", 
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "4"], "+", 
       SuperscriptBox["x", "2"], "-", "1"}]]}], "}"}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{
  3.8812580521312733`*^9, {3.881263971472271*^9, 3.881263973162546*^9}, {
   3.881264076293928*^9, 3.8812640770577106`*^9}, {3.881267635295848*^9, 
   3.881267740411018*^9}, {3.882200901044587*^9, 3.88220091575585*^9}, {
   3.889071592387395*^9, 3.889071593135217*^9}, {3.889071656958829*^9, 
   3.889071659757134*^9}},
 CellLabel->
  "In[1104]:=",ExpressionUUID->"ad4da761-711f-4c1e-b169-b98f33f3076e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         SqrtBox["2"]}], "+", "x"}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SqrtBox["2"], " ", "x"}], "-", 
          SuperscriptBox["x", "2"]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        SqrtBox["2"], "+", "x"}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SqrtBox["2"], " ", "x"}], "+", 
          SuperscriptBox["x", "2"]}], ")"}]}]]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["5"], " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox["5"], "-", "x"}], ")"}]}]]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["5"], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox["5"], "+", "x"}], ")"}]}]]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         FractionBox["2", 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["5"]}], ")"}]}]]], 
        RowBox[{
         SqrtBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["5"]}], ")"}]}]], "-", 
         RowBox[{"2", " ", "x"}]}]]}], "-", 
      FractionBox[
       SqrtBox[
        FractionBox["2", 
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["5"]}], ")"}]}]]], 
       RowBox[{
        SqrtBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["5"]}], ")"}]}]], "+", 
        RowBox[{"2", " ", "x"}]}]], "-", 
      FractionBox["2", 
       RowBox[{
        SqrtBox["5"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.88907299101025*^9},
 CellLabel->
  "Out[1109]=",ExpressionUUID->"e78fd9e1-2801-4fbf-80e5-c346b2513034"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CorrectionTest", "Section",
 CellChangeTimes->{
  3.881249142658318*^9},ExpressionUUID->"bf1f2ecb-cd6e-4229-9641-\
c2b700125777"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "CorrectionTest", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], "=", 
    "\"\<`` \:8ba1\:7b97\:8d85\:65f6\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CorrectionTest", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Skip", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TimeConstraint", "\[Rule]", "\[Infinity]"}], ",", 
     RowBox[{"VerifyDiscontinuities", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "$MinPrecision"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CorrectionTest", "[", 
     RowBox[{"org_", ",", "res_", ",", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"table", "=", GridBox[{
           {
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\:5b9a\:4e49\:57df\>\"", ",", "Bold"}], "]"}], 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\:95f4\:65ad\:70b9\>\"", ",", "Bold"}], "]"}]},
           {
            RowBox[{"Style", "[", 
             RowBox[{"True", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}], 
            RowBox[{"Style", "[", 
             RowBox[{"False", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}]},
           {
            RowBox[{"Style", "[", 
             RowBox[{"True", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}], 
            RowBox[{"Style", "[", 
             RowBox[{"False", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}]},
           {
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\:56fe\:50cf\>\"", ",", "Bold"}], "]"}], 
            "\[SpanFromLeft]"},
           {"Null", "\[SpanFromLeft]"}
          }]}], ",", "\[IndentingNewLine]", 
        RowBox[{"skip", "=", 
         RowBox[{"OptionValue", "[", "Skip", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"cons", "=", 
         RowBox[{"OptionValue", "[", "TimeConstraint", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"veri", "=", 
         RowBox[{"OptionValue", "[", "VerifyDiscontinuities", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"prec", "=", 
         RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"dom", "=", "True"}]}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CheckVersion", "[", "12.2", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "[", "skip", "]"}]}], ",", 
         RowBox[{"skip", "=", 
          RowBox[{"{", "skip", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "[", "veri", "]"}]}], ",", 
         RowBox[{"veri", "=", 
          RowBox[{"{", "veri", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"AssociationQ", "[", "cons", "]"}]}], ",", 
         RowBox[{"cons", "=", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"\"\<\:5b9a\:4e49\:57df\>\"", "\[Rule]", "cons"}], ",", 
            RowBox[{"\"\<\:95f4\:65ad\:70b9\>\"", "\[Rule]", "cons"}], ",", 
            RowBox[{"\"\<\:56fe\:50cf\>\"", "\[Rule]", "cons"}]}], "]"}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"skip", ",", "\"\<\:5b9a\:4e49\:57df\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"dom", "=", 
                   RowBox[{"Reduce", "[", 
                    RowBox[{
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{"org", ",", "x"}], "]"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}]}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Reduce", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{"res", ",", "x"}], "]"}], "&&", "dom"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], 
             ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"cons", "[", "\"\<\:5b9a\:4e49\:57df\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], 
               ",", "\"\<\:5b9a\:4e49\:57df\>\""}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"skip", ",", "\"\<\:95f4\:65ad\:70b9\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Reduce", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FunctionDiscontinuities", "[", 
                    RowBox[{"org", ",", "x"}], "]"}], "&&", "dom"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Reduce", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FunctionDiscontinuities", "[", 
                    RowBox[{"res", ",", "x"}], "]"}], "&&", "dom"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], 
             ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"cons", "[", "\"\<\:95f4\:65ad\:70b9\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], 
               ",", "\"\<\:95f4\:65ad\:70b9\>\""}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"skip", ",", "\"\<\:56fe\:50cf\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"table", "\[LeftDoubleBracket]", 
              RowBox[{"5", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"Plot", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"org", ",", "res", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   SubscriptBox["\[PartialD]", "x"], 
                   RowBox[{"(", 
                    RowBox[{"res", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", "p_", "]"}], "\[Rule]", 
                    TagBox[GridBox[{
                    {"\[Piecewise]", GridBox[{
                    {"p", 
                    RowBox[{"p", ">", "0"}]},
                    {
                    RowBox[{"-", "p"}], 
                    RowBox[{"p", "<", "0"}]}
                    },
                    AllowedDimensions->{2, Automatic},
                    Editable->True,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                    Selectable->True]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
                    "Piecewise",
                    DeleteWithContents->True,
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False,
                    StripWrapperBoxes->True]}], ",", 
                    RowBox[{
                    RowBox[{"Sign", "[", "p_", "]"}], "\[Rule]", 
                    TagBox[GridBox[{
                    {"\[Piecewise]", GridBox[{
                    {"1", 
                    RowBox[{"p", ">", "0"}]},
                    {
                    RowBox[{"-", "1"}], 
                    RowBox[{"p", "<", "0"}]}
                    },
                    AllowedDimensions->{2, Automatic},
                    Editable->True,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                    Selectable->True]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
                    "Piecewise",
                    DeleteWithContents->True,
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False,
                    StripWrapperBoxes->True]}]}], "}"}]}], ")"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", "96"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Black", ",", 
                  RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                  RowBox[{"Point", "[", "\[IndentingNewLine]", 
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$MinPrecision", "=", "prec"}], "}"}], ",", 
                    RowBox[{"N", "@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"res", "/.", "\[VeryThinSpace]", 
                    RowBox[{"x", "\[Rule]", "i"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "veri"}], "}"}]}], "]"}]}]}], "]"}], 
                   "\[IndentingNewLine]", "]"}]}], "}"}]}]}], 
              "\[IndentingNewLine]", "]"}]}], ",", 
            RowBox[{"cons", "[", "\"\<\:56fe\:50cf\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], 
               ",", "\"\<\:56fe\:50cf\>\""}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Grid", "[", 
         RowBox[{"table", ",", 
          RowBox[{"Alignment", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
          RowBox[{"Spacings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", 
          RowBox[{"ItemSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", "0.5", "]"}], ",", "Automatic"}], "}"}]}],
           ",", 
          RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CorrectionTest", "[", 
  RowBox[{"x", ",", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8812580555141573`*^9, 3.8812638517804313`*^9, 3.881264079722681*^9, {
   3.8812678234642253`*^9, 3.8812678299343767`*^9}, 3.8812681404165487`*^9, {
   3.881268229655447*^9, 3.881268398341589*^9}, {3.8812684529980655`*^9, 
   3.881268759114216*^9}, {3.882200925828741*^9, 3.8822009319937315`*^9}, {
   3.889058870052693*^9, 3.889058878347475*^9}},
 CellLabel->
  "In[991]:=",ExpressionUUID->"b0d91778-42e8-4862-8bdb-9a37ac55d0ba"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"\:5b9a\:4e49\:57df\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\:95f4\:65ad\:70b9\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     ItemBox[
      StyleBox[
       RowBox[{"x", "\[Element]", 
        TemplateBox[{},
         "Reals"]}],
       StripOnInput->False,
       LineColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FrontFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       BackFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       GraphicsColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FontWeight->Bold,
       FontColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.]],
      ItemSize->Automatic,
      StripOnInput->False], 
     ItemBox[
      StyleBox["False",
       StripOnInput->False,
       LineColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FrontFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       BackFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       GraphicsColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FontWeight->Bold,
       FontColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.]],
      ItemSize->Automatic,
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox[
       RowBox[{"x", "\[Element]", 
        TemplateBox[{},
         "Reals"]}],
       StripOnInput->False,
       LineColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FrontFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       BackFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       GraphicsColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FontWeight->Bold,
       FontColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.]],
      ItemSize->Automatic,
      StripOnInput->False], 
     ItemBox[
      StyleBox["False",
       StripOnInput->False,
       LineColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FrontFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       BackFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       GraphicsColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FontWeight->Bold,
       FontColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.]],
      ItemSize->Automatic,
      StripOnInput->False]},
    {
     StyleBox["\<\"\:56fe\:50cf\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]"},
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.23780781740448254`, 0.6887454706969063, 1.], 
          AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF1O0vFAAcwPG74xhxL7rO1tku7nba0fQwT3MqTDFjxSHWVbccye6mmTw1
mkZcoZuhOi21PBNJWapDXDqTTrFMGi4x5yHGdWd3nGrrfr8X333+g6/zxZTI
BBKBQAj/2z/j26SrOzvWvWb3GOku3C1UcbKWn76Jukx1DS6voYt2s08m1OiV
ZM/Yjn40l/2tN7EQlVWxyoYpaPV0UUqEjRXoMMI7xaGRQeVpXtAQ2xIM4bDT
WEwL0LeVX6c6SAINtxKpRzhE8Le+puL8fgKoYJZ5dItNPWa55OsdbsItsNzf
2zsgxwDGP4idW6zeBFX1DBuiTAcy7J4d7unUgrZO8ypN0zooiiq419CwBgr6
p4cYZSsg86gp4n2eBmxM6lC/6ZwDkzfa+bdlatA9lxxnxZoEqVljuyqrRsFx
oci1bXYAzMh2LR2saAWb7vj41xx6etxs6eW8r4IbH0B7bRi3JWIUnEkb8EjP
nwR/dYX3ZSjVYF3hY4FQMgeydc3UzCoNOPV8n5ybtAJG350pWpKugQ9ri+Vh
leug5VnxCjlLC34SNNZH5uvAl/b0c3rRJugic16wDjOAhvT87WbeFrhkcKQ0
+JjAR5cKxxxZBH+z0oCPxXvZRJCS0hzYTyOB3UGv5J10C3BbfMErhmIJEq2/
3HfbRr1CUvtCCVag4XvLAm0dDRIppeE6tMQ461NgQJ3ojhItyRoMPiPhjFLR
8s8JyVJP1H2AsWybhWZG+5YH5qDvfkb7ZeehURYlxRoJes3feEApQ5Wvx8UF
b9HdoRs0eS/Kn6B0axXoqv4ERTiMOni+aA2cQgUKVUz2D7SRt2Rqn0f9Upmn
nFfRm8Rj+tgNdEQaVy3Vo3Snq8FKI/r/W+AfYipULQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$77847#1"]& ], 
        TagBox[
         {RGBColor[1., 0.519599248047801, 0.3096774660909407], 
          AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
h/wPW9xgsw==
           "]]},
         Annotation[#, "Charting`Private`Tag$77847#2"]& ], 
        TagBox[
         {RGBColor[0., 0.7904116386138192, 0.7051174262187454], 
          AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF1O0vFAAcwPG74xhxL7rO1tku7nba0fQwT3MqTDFjxSHWVbccye6mmTw1
mkZcoZuhOi21PBNJWapDXDqTTrFMGi4x5yHGdWd3nGrrfr8X333+g6/zxZTI
BBKBQAj/2z/j26SrOzvWvWb3GOku3C1UcbKWn76Jukx1DS6voYt2s08m1OiV
ZM/Yjn40l/2tN7EQlVWxyoYpaPV0UUqEjRXoMMI7xaGRQeVpXtAQ2xIM4bDT
WEwL0LeVX6c6SAINtxKpRzhE8Le+puL8fgKoYJZ5dItNPWa55OsdbsItsNzf
2zsgxwDGP4idW6zeBFX1DBuiTAcy7J4d7unUgrZO8ypN0zooiiq419CwBgr6
p4cYZSsg86gp4n2eBmxM6lC/6ZwDkzfa+bdlatA9lxxnxZoEqVljuyqrRsFx
oci1bXYAzMh2LR2saAWb7vj41xx6etxs6eW8r4IbH0B7bRi3JWIUnEkb8EjP
nwR/dYX3ZSjVYF3hY4FQMgeydc3UzCoNOPV8n5ybtAJG350pWpKugQ9ri+Vh
leug5VnxCjlLC34SNNZH5uvAl/b0c3rRJugic16wDjOAhvT87WbeFrhkcKQ0
+JjAR5cKxxxZBH+z0oCPxXvZRJCS0hzYTyOB3UGv5J10C3BbfMErhmIJEq2/
3HfbRr1CUvtCCVag4XvLAm0dDRIppeE6tMQ461NgQJ3ojhItyRoMPiPhjFLR
8s8JyVJP1H2AsWybhWZG+5YH5qDvfkb7ZeehURYlxRoJes3feEApQ5Wvx8UF
b9HdoRs0eS/Kn6B0axXoqv4ERTiMOni+aA2cQgUKVUz2D7SRt2Rqn0f9Upmn
nFfRm8Rj+tgNdEQaVy3Vo3Snq8FKI/r/W+AfYipULQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$77847#3"]& ]}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        GrayLevel[0], 
        PointSize[Medium], 
        PointBox[{}]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-3, 3}, {-2.9999998775510206`, 4.499999632653069}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], "\[SpanFromLeft]"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.5]}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Print",
 CellChangeTimes->{
  3.881268572352216*^9, {3.8812686075001817`*^9, 3.881268621485462*^9}, 
   3.8812687669116983`*^9, 3.8822009391160803`*^9, 3.8890716299821095`*^9},
 CellLabel->
  "During evaluation of \
In[991]:=",ExpressionUUID->"afb8b7c5-32f9-4f90-914a-909d23f110e4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindIdentities", "Section",
 CellChangeTimes->{{3.888798203493131*^9, 
  3.8887982076011333`*^9}},ExpressionUUID->"6a80edf5-fc8e-4cd2-ba32-\
96d03eb74cf4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "FindIdentities", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindIdentities", "[", 
      RowBox[{"expr1_", ",", "expr2_", ",", "x_Symbol"}], "]"}], "/;", 
     RowBox[{
      RowBox[{"RationalExpressionQ", "[", 
       RowBox[{"expr1", ",", "x"}], "]"}], "&&", 
      RowBox[{"RationalExpressionQ", "[", 
       RowBox[{"expr2", ",", "x"}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "roots", ",", "limit"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p1", "=", 
        RowBox[{
         RowBox[{"Numerator", "@", 
          RowBox[{"Simplify", "@", "expr1"}]}], " ", 
         RowBox[{"Denominator", "@", 
          RowBox[{"Simplify", "@", "expr2"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p2", "=", 
        RowBox[{
         RowBox[{"Numerator", "@", 
          RowBox[{"Simplify", "@", "expr2"}]}], " ", 
         RowBox[{"Denominator", "@", 
          RowBox[{"Simplify", "@", "expr1"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"roots", "=", 
        RowBox[{"x", "/.", " ", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[PartialD]", "x"], 
             FractionBox["p1", "p2"]}], "==", "0"}], ",", "x"}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "@", "roots"}]}], ",", 
         RowBox[{"Return", "@", 
          RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{
          RowBox[{"Reap", "[", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"limit", "=", 
               RowBox[{
                RowBox[{
                 UnderscriptBox["\[Limit]", 
                  RowBox[{"x", "->", "i"}]], 
                 FractionBox["p1", "p2"]}], "//", "Simplify"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"limit", "=!=", "0"}], "&&", 
                 RowBox[{"limit", "\[Element]", 
                  TemplateBox[{},
                   "Rationals"]}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"Sow", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Defer", "@", 
                    RowBox[{"Evaluate", "@", "p1"}]}], "-", 
                   RowBox[{"limit", " ", "p2"}]}], "==", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p1", "-", 
                    RowBox[{"limit", " ", "p2"}]}], "//", "Factor"}], ")"}]}],
                  "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "roots"}], "}"}]}], "\[IndentingNewLine]", 
            "]"}], "\[IndentingNewLine]", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "-", "1"}], ",", 
   RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", "x"}], "+", "5"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "x"}], "+", "3"}], ")"}], "2"], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"3", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"21", "x"}], "-", "25"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", "3"}], ")"}], "3"], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"9", "x"}], "+", "3"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "2"], "-", "3"}], 
      RowBox[{"x", "+", "1"}]], ")"}], "3"], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8887981841090336`*^9, 3.888798223317091*^9}, {
   3.888798570490137*^9, 3.8887985957897587`*^9}, {3.8887986438360105`*^9, 
   3.8887986832512817`*^9}, {3.8887987454163723`*^9, 
   3.8887989180634303`*^9}, {3.8887989769969673`*^9, 3.888799150112078*^9}, 
   3.888799202522771*^9, {3.8887992327924194`*^9, 3.888799254345852*^9}, {
   3.888799290638255*^9, 3.8887994517706633`*^9}, {3.8888382143889923`*^9, 
   3.8888382399266505`*^9}, {3.888838309087253*^9, 3.8888383099609127`*^9}, {
   3.88883835504439*^9, 3.8888384084622993`*^9}, {3.8888384766580877`*^9, 
   3.888838495081313*^9}, {3.888838546855976*^9, 3.888838708369732*^9}, {
   3.889073741170879*^9, 3.8890738298097725`*^9}, {3.8893039813168144`*^9, 
   3.8893040438246555`*^9}, {3.889304075577129*^9, 3.8893040797270985`*^9}, 
   3.8893041765234394`*^9, {3.8893042188123226`*^9, 3.8893042719908457`*^9}, {
   3.889304316898409*^9, 3.8893043636930833`*^9}, {3.8893044267763233`*^9, 
   3.889304505887692*^9}, {3.8893045624883966`*^9, 3.8893045650004816`*^9}, {
   3.8893046184274554`*^9, 3.8893047078716707`*^9}, {3.88930474633215*^9, 
   3.889304802754823*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"14fe0ea8-b87a-4d7c-8dca-4496bba5ab9e"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.88930480310003*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"5720f030-a941-4960-be8c-5fee8b5f4d82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["4", "17"]}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "x"}]}], ")"}], "2"]}], "+", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"2", " ", "x"}], "+", 
      SuperscriptBox["x", "2"]}], ")"}]}], "\[Equal]", 
   RowBox[{
    FractionBox["1", "17"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "7"}], "+", "x"}], ")"}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.889304803106553*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"dacbedb0-7b1c-41b5-b248-a105f5cffcd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"3", "+", "x"}], ")"}], "3"], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "25"}], "-", 
      RowBox[{"21", " ", "x"}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      SuperscriptBox["x", "3"]}], ")"}]}], "\[Equal]", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "3"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.8893048031125603`*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"25012b3c-48fb-45b4-b28a-91a97d6cdb00"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SuperscriptBox["x", "2"]}], ")"}], "3"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"9", " ", "x"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"]}]}], ")"}]}]}], "\[Equal]", 
    RowBox[{
     FractionBox["1", "9"], " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "135"}], "-", 
       RowBox[{"180", " ", "x"}], "+", 
       RowBox[{"18", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"108", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"37", " ", 
        SuperscriptBox["x", "4"]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["8", "3"]}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SuperscriptBox["x", "2"]}], ")"}], "3"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"9", " ", "x"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"]}]}], ")"}]}]}], "\[Equal]", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "15"}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["x", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "3"]}]}], ")"}], "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.8893048031180716`*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"25306060-4b30-41e0-a320-8799a3ddc420"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Li2Transform", "Section",
 CellChangeTimes->{
  3.890209886147686*^9},ExpressionUUID->"c90c1727-4a52-4082-8bb7-\
c975e7ea6866"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "Li2Transform", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"PolynomialQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"ft", ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       RowBox[{"1", "-", "z"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", "z", "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", "1", "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       FractionBox["1", "z"]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}], " ", 
     RowBox[{"Log", "[", "z", "]"}]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", "z", "]"}], "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "3"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      RowBox[{"1", "-", 
       FractionBox["1", "z"]}]}], "]"}], "+", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", "z"]}], "]"}], " ", 
     RowBox[{"Log", "[", 
      FractionBox["1", "z"], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}], " ", 
     RowBox[{"Log", "[", "z", "]"}]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", "z", "]"}], "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", "1", "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      FractionBox["1", 
       RowBox[{"1", "-", "z"}]]}], "]"}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "z"}], "]"}], "2"]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], "-", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       FractionBox["z", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "z"}]]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "z"}], "]"}], "2"]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "z"}], "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "-", "z"}]], "]"}], " ", 
     RowBox[{"Log", "[", 
      FractionBox["z", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "z"}]], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Li2Transform", "[", 
      RowBox[{"z1_", ",", "z2_"}], "]"}], "/;", 
     RowBox[{"PossibleZeroQ", "[", 
      RowBox[{"z1", "+", "z2"}], "]"}]}], ":=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       SuperscriptBox["z1", "2"]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ComplexPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", "z"}], "]"}], "+", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "z"}]}], "]"}], "-", 
     RowBox[{"Li2Transform", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "z"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "10"}], "-", 
      RowBox[{"10", "I"}]}], ",", 
     RowBox[{"10", "+", 
      RowBox[{"10", "I"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8902098971128583`*^9, 3.8902098981641135`*^9}, {
  3.8902099720471773`*^9, 3.890209976902581*^9}, {3.8902100525519133`*^9, 
  3.890210067512229*^9}, {3.890210234874273*^9, 3.8902102495922394`*^9}, {
  3.890210285902672*^9, 3.8902103735788965`*^9}, {3.890223122512968*^9, 
  3.8902231255486574`*^9}},ExpressionUUID->"9a461511-9375-49c5-824c-\
113359620a0c"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nHmUVcW1hxtwjBMITo/3EMThBQQHTBQ8TZcvPgUHNHEIiTyjOGGMwzJL
jZoEjK7gLIrLtFGxI4MQE2jUGKa2bwP2EyFZDTKJooiRhUMcQZKg+LrvOb9d
b3+1jv/0uj83u6p2fWdX3XOrdp/R137vss41NTVjd6qp6dL+t3bz65u//rpv
RX//cuLYyyc1rM5uuuzNa96ddIjp07f85rGb3lmezd64YcsrtX1Mr6n+V8lW
NbduvWjuwYn9sHlLOx257d9hX1Mz//m2vbYd92+JPnDWqoMWXn9A0p/fzVh3
2H2NPZJ2e0x565iRH3VL/Oxdu+TWU0buDX1DtuWYVye+8epuprfNu7huw8Eb
snWHr3/m+rO6wP7lbNzxfx3f7ZHtzRzXGX02/rn2vk+avf2cbPSRa598uttq
05sf6L/7XResyH6S63XSm869pe3ZY9qyEbmfOu9ncfarvF3oK7PX834Grzdm
W/NxBY53nzwOgeMt4hYYtyLOgXEu5iVwXop5TPwU857oBSehhKuk3YLDxL74
nPRHn8Vv7qfNeKYunqXLv3j29jYu07/86JIrB616X3FI/Itn+hfP9C+evV7J
xDN18ez1l41n6bv+fdbl+/yyzXj29o3Gs/Shg/e79/uL2oxnbz/HePb6IuNZ
es5bm/FMXTwzbuKZ4xXPHK94pr14ZpzFM+dFPLM/4pnzLp7pXzzTv3imf/Fc
olfEKXmmrs9et+cOesXyM/2IZ9qLZ+nkmX7EM+3FM+3FM3XxzP6IZ69HnqWL
f/Es/boe536wtVub8Sz98/rnXnl/UszP0if3mDl9/P7LjWfGWTyzn+KZ4xLP
Xl9pPJfEOfEjnmkvnkvmPfEjnmkvnjle8Uw/4rlEr4hH8ixd+Vz/nro+6y/3
G/Qvnr0e9xtet7yR+BfPtBfPXm80nr2+0nhmf8SzdOVJ8UxdPEsnz9LFv3im
H/EsXZyLZ/oRz4yPeOa4xHNJnBM/4pn24pn+xTPnXTzTv3gmV+KZunimf/Es
7vBcmJ63+7bx7O03GM/St/zg4pP7r33DePb2kWfq4tnra41n2otnr0eeOS7x
THvxTHvxTHvx7PW4f/b6OOPZ69ONZ683GM9ebzSeGQfxzH6KZ45LPNNePJfM
S+C8iGfai2fq4pmciGdyJZ7JoXjmuMSz+IIf05mfpcu/ePZ+4v7Z29s6Bfu4
3/B6m/FMe/HMdsUz2xXP3r7ReKZ/8Sz9pPGjW499c4XxTD/iWfqezwx7qrbv
q8az9F1+O2Xmwb1WGM9sVzxzXOKZ8RHP0pW3xTPtxTP9i+eSeUn8iGfai2fG
XzyzXfFMrsQzORTP5FY8iyP1UzxTF8/UxTN18ex1W6cSe332usU58SOepXP/
TP/imX7EM/2IZ/oRz9TFs/T8/cZC49nbzzOepXO/IV18imfq4pnjEs8cl3im
Lp7pRzxzXsRzybwnfsRzCVeJLp6pi+cSvSJeyLN05mfai2evx/xMXTxL17qj
/tFen9mueJZOnulHPHs95mc/3lbj2dvH/Yb0nKuK8eztFxvP0odvviBMfGKx
8Ux78cz+i2fpn782fcqYu1cZzxyXeOa4xDPjJp4ZZ/FcMo+B8yieaS+eqYvn
Eg4DORTPtBfP4kL+xbN07p9pL55pL55pL56pi2evx/2GdMwL7OP+mfbimfbi
mfbi2Y+rxXj2fuL+WfrHew3/9PNBS41n6fn7vYrx7P3E/TPbFc+Mj3jmuMQz
4yyeaS+eGQfxzHbFM/2L5xJOQglXib14pr14pr141vyTZ+riWTrfb1AXz9TF
s/cf989sVzxL5/sN+tFn+hHPtBfPXm80nqmLZ683GM9+vK3Gs7efYDzTv3j2
4408e/uXjWeOSzyzP+KZ9uKZcRbPjKd4ph/xXMJJootn6uKZ7YrnEr2iecY+
3PTcOu6fvR7zs3TyTHvxTHvx7O3j+zrq4tn3P+43vP+Yn+lHPHs/LcYz/Yhn
7yfmZ69PMJ693mg8S9e+RTyzXfFMP+KZcRbPjI94pi6eGR/xTF08l8x70h/x
THvxTHvxTA7FM7kVz5pP2Ytn6dw/e/vIs9fj7ym0F89sVzxLz/eH7xrP0pmf
2a54Zrsav3R9n9Jnbx/zs9dfNp59f2Ybz94+8kx78ezj3Go8sz/i2ftpMZ6p
i+eSuAXGTTzTXjxzXsQz51E8l3CStCueaS+eyaF4ZrviWfMGP6bz/IZ07je8
n/h+w+vx/Qb9iGdvv8F4Zn/Es/fTajx7P/H3FOqKC/3rs/f/gvEsnd8HGU/x
7O1jfvb2cf/s9ZeNZ8ZTPPv+R57pRzwzbuKZcRDPnBfxzHkUz+yneCYn4pl+
xDP7I54ZZ/Gs+VG74lk6vw96+/h+g37Es3Tun6mLZ1vPi+/L4pntimevNxrP
3n/cb3j7BuOZ/Ve8vD7dePbxiflZ+jkXrBsy8oy5lp+9n3rjmX7Es3R9rxTP
0vUciWfz//WTjy57fInxzHGJZ8ZNPDPO4pnzIp45j+KZunhmf8Qz2xXP5FA8
04941jyQZ+laX8SzdOZn+hHPXo+/D1IXz16Pvw96PZ5H8nrkWbrylXj2/W81
nr2fBuPZ63G/4fXFxrP+XnL6+s1vv/G48Sz9o8Pr9p96ykTjmX7Es+//bONZ
+rd63zXtL0tWGM/Oz7j4vk56/p4wnt9g3MQz4yyeOS/imfMonqmLZ3IinsmV
eCaH4pl+xLPiTZ69vtZ49nrcP0vn+Q1vH3mmf/FMe/HMdsWz198wnqXrPa14
lj5gxo0nvNm63HiWfuM/ljfe8dEq49n7X2Y8S39s4IQ+Y65baDxL/26vygc/
veFh41l/8/Oi8f2G97PCeOa8iGfp+e8vMT9LH3XYth07rom/D0rv+tz/LLno
1Pj7IOMmnhln8Vwyj4HzKJ5pL57JiXhmu+KZ/sUz4yOeFVfyLJ37DenMz94+
8uz9R57pRzzb937sN+hHPHs95meOSzxL13otnmkvnn1/FhjPfrwtxrPXHzSe
pX/yzb5n3HXQ88azb3e68ezj84Lx7O0bjGevLzaevZ/4vo5xE8+Ms3jmvIhn
zqN4ph/xTE7EM/2IZ3Ionjlf4lnxw3MB3dYF08kz/Yhn+hHPtBfP0vP953vG
s3R+H6R/8ez1+H3Q6/H8M/2IZ/oRzz4O04xn388W45l+NB+012fGRzz7dluN
Z/oXz9TFM8crnhln8cx5Ec8l8574F8+0F8/kSjzTj3imH/GsOOk5Es/UxbPX
435DOvMz7cWz1+PvKV6P+2fpeTxfM57ZT/HMdsWz1+P7DenKh+KZ9uLZjzfm
Z+naD4hn6VoXxDP9aJ6o6zP7I57t/XQ1fy4znhln8cy4iWfGWTxzXsQz/Yvn
Ek4CORHPtBfP7Kd4LtErikc+j5uMZ+nk2euRZ+8n/p5CP+LZ6xuMZ6/H31Oo
i2fq4pm6eKYunqmLZz+u+HuKt4+/D1IXz16P50Wl8/cUxlnz5/XIM/svntl/
8VwS50QXz9TFM+dRPHPexTM5Ec8cr3imH/FMbsWzxg0/0CPP1MWzdPJMXTx7
PzE/UxfP7Kd4pr14pi6epSs/iGevx98HvZ+Yn70e32/48cbfu719i/Hs9fj+
mf0Xz9Q1r9T1uSRuib14pr14pr14pi6eOe/imbp4Jlfimbp4Zj9xHinhWXrJ
eSSzx3kks8d5JLPHeSTGDXpyHol5BvbJeaTA98+0x3kks8d5JOMc55EKP8l5
pFByHimUnEdKeGa7OI9k8cF5pIRnxhnnkRKeGQecR7J2cR7J/OM8EjkJJVwl
9jiPFPh9kPY4L8rnwvSS86Jmj/OiHFei47xoKDkvavY4L2rt4ryo5VucFzU/
OC9a6Ml50YRnb5+cFw0l50UL++S8aCg5L2r2OC9q/cd50VByXtTGhfOiyX6D
ccN5UYszzotyHgPnEedFE56p47woOQzkEOdFzR7n+ROeqeM8f8IzdZznNx5w
np9xg56c5zc/OM+f8Ez/OM9vfnCe3/zgPL/5wXl+03GeP5Sc5y/sk/P8oeQ8
fyg5zx9KzvPbuHCeP+C9UKLjPL/5wXn+hOeSeU/84Dw/uUp0nOcnt2W67hkV
enLfKsnP0kvuW9l4cd/K4ob7Vowb9OS+VcIz28V9K2sX960K++S+lfnHfatQ
ct/K/OC+VSi5bxVK7ltZu7hvZePCfSuLD+5bhZL7VmaP+1bmH/etEp7pB/et
zB73rSz+uG9l7eK+lXGF+1ZJfia3uA9r/nEfNtk/e/vkPizXHdgn92FNx33Y
Qk/uw3JeoCf3YW1cuA9r9rgPa/a4D2v2uA9b6Ml92EJP7sMWenIfttCT+7CF
ntyHtTjgPqz1E/dhbVy4D2v2uA/LeQmcF9yHNXvchzUd92FDyX1Y4wr3YZP9
M8eFegXWLuoVJPmZOuoVJO+f6R/1Cqw/qFfAOCf+Ua/A7FGvwHhAvYJCT+oV
JDxLL6lXEErqFYSSegWhpF5Bst+QXlKvINlvMD6oV5DwXBLnxA/qFZg96hWY
f9QrSHimf9QrCPw9hTrqFZh/1JNJeKaOejLWf9STsfGinkzCM+1RT4b7usQP
6skk+2fao56M6agnY/1BPRl7LlBPJpTUk0l4ll5ST8a4RT0ZizPqyVg/UU/G
xoV6Mvb8op5Msn+mH9ST4b4x6Q/qySQ80x71ZGy8qCdDbst01blKeKaOel/c
F8E+qfcVSup9MW6Jf9T7Mv+o92XxQb0v01Hvq9CTel+hpN5XwrP0knpfhX1S
76vQk3pfSX6mjnpfFjfU+7Lxot6XjRf1vswe9b4szqj3lfDM/qDeVyip92X+
Ue/L/KPeV8Jzia46hMzzppfUY7Q4oB5jst/w9kk9RsYt6Q/qMVq7qMdoflCP
sdCTeoyhpB6jzTvqMdq4UI/RuEU9xlBSjzGU1GMs/CT1GAs9qcdY6Ek9Rhsv
6jGGknqMFjfUY7Q4ox4jfxdL/KAeo+mox5jsN9gu6jGaPeoxWn/yedR9K9V1
jJxTLz6HEvtEh//kOaIO/4nO+ZJ/1tWEPfWEc/Tf2r13/KjT5j7dt6K/0EOJ
Lnv6CdTVP/07zYvsWJ9TduREn/Xv4Cepvwr7pD5niZ+Ezyuqz+mm5rFbjvrT
Z2u2nLh3VW3ILs/1unGF/tXXHf89meX/KgzOinaGfrbiwydOWV7oZ89VHt1R
tX/R7JVHn13d5YLrRrYV+tGDVxd5dEFN5xmdh7WZH+XRvN3HzM+CIo/e/dSN
02c2rDBdebRSzT/N8j9XefTQLQMaloxYbPbKo/V9Z704dftLanew8mhbNW5z
zF55NB/XZOu/8ui06nM61dodW+TRnar7hAbzozx6fvVczSzzozzab/D9Yxd1
q8/cufCG9naeH/F+vxn1mT9f+7cTVjeN+rz/ggczzaf+/52D/+PCiec8ZLry
7gFH7D7oioemm668+/tq/+earrz74au7vbptRMV0f25hiulF3MLmJ+oGndW2
yHTlXR/nmHcxL3OVd/081tTMK/LuXW7eRw5W3v3ScVJTU3AVPFdhrvKu5zDu
i8Ht3ILzIM7vH3N65+cGnNd0xxF5HvpOfXs/X1+aHfvIhUeeufx7TX+ojrdP
ZeMDHd9HWrPz/7z0hXNvPKtpWTX+vSsPF/2Zf0XLozt+fGrTK9W49aqM7tnx
vWZRNnPFxRN3PW9I04fVeelZqTw8ZebBkxZmZz/4j/ce7FPT9GU1/gdWLuh4
7zp5Sd7Px9YMGVOd9/0rOy1YdOj9Py/if+fsIfk8dq80PP6N1mcuXpi9vvWw
z05e88emr0Z19Kdr5aazz/z080FNWf3AjS9+dtq0plkTOtrdozK5x23t/L+Y
Ne3+wMBOrzzS9K8fdPjfpTJwn8j5OV0/O/HM6rhqKl2qnBc8fH/9iXle+aJ5
ezWe47Nf9h4+9b6Vl76457w/PN+Rb0bs2PfpTr1mZvfm+tC9cr1uyeZRl2z6
9oyqn6/PXz8/z0Nf1B3x1bub1v+s6n9ce7vzi3bD2k/63rbo6JZs8i0TOvpZ
uz3vZ7ine8e6/0L294er46r9Yz6ucNyUTu0u/pT989FDO+JQ+2Ueh/D0/OH/
/NfsIm4TZs/Ln+vuodetK+oXbf7fqj7unjXzrszjnPM/rpJNGLPt0/Z5qS3m
JRw0esigv52+NFu428aH2uex9r18HkOY1vGevDVbc2mn37bPe20x72Hs1va4
7ahkP3zpgw5OagtOwjsFn+dNGtrBVe3vc67Cmr3bOXlwSdZ6xfwODmsLDsNt
F3bsr1qz24p8rb/7tj0z6rTxj2T5fLQ2S7/hv34xeUj9b6TXSd9yyk7/Ob/P
w7YfnnT19dcf+8Q03iusPJXrdu5a+Z322idLz+3tPBX0tkz5nX6U32nfUOR3
r9t5XdP1fU353dvH731ej/eqrD8377n7aze+bftk6fk5ySW2T5ber8uHR31n
32W27zU/Xcd2+mqPtdntRf5lf5R/pW/oll391zFrbN/r49OicQX6Uf5lHJ4q
8i915d+SeQmcF+Vf2mvfy3lX/qUf5d8S3hL/w26feM4Xg/tWBkyYPHzkz6ca
h7+ueeS119f2MV3vq+f+ov5HLTf1ruzh7CvZJ1u/tfTMAb0qJzi9puaiT4as
OfCqnvDf/o3k/bp33pl+oOnaXw1/9+SPZ27az3T1f95bw7fffGj3ykno55Hr
Ruz636O7wv+cbOiMpw/vHfbw+rgFWb9Js4e+MH/nxH+3ifPPP+P4msogjGvz
PvesX3zZ1mbGZ9Oww0bf3fRFnfRtR+37o8suW5k9NGu3g456pyYcX+g6jzF5
3o6aR6/YJci/3jM0v7Rlc+cP9zD7vJ/PZdeOuWHMt+d0Db7dBdn2q68bddUt
3QPHe+dPrzq7Ids/6tV7rK9lPW6+/ORVOw4MJ2G8k3958QnfaOkZOF/H3DHq
yLrbewXO11uL+3ed91TvwDj87tRv3r2yyyHhJMTtJ68cvtPHl/aFvemVfrlu
z1fhpzICetFu+wLx//W2bFDez8TP1Hxcpmu8++VxMD/S78njBj8rFWfoc7Lr
8nmB3pBV8nmsHFfoh3x59DUbf7Za814ZWOia94IT8yNOCq6a2Z+Cw7qBiEPB
bWAc+ueca37NvjZ/Lsx+9LplfW7dsy3rnz9H4dBC1+/Xc/Pnzuz1nJ6aP6ch
c/1vy1bkz3Xw49qQFXnA/Iurj/K8ETi/c/I8EzpjXEVeMv/2e2uexxCH+H5V
6yzfR1HXOuvX5bjOcr3WOks/Wmdpr3XW63GdlY7f5WH/rK2zXo/rrNfX2Tor
neusdK6z0r97+aNLZ3RfZ+us9x/XWa8vs3XWxyfWi+C4tM4yDlpnqWudLZmX
wHnROkt7rbOcd62z9KN1lrr2dVxntf6yXa2/5Fb5sCSvVphXtV7zuVD+5Lqp
dZzPl/Iq/Wt9z/D8Kt9yPdW6z+ddeZjrkfYDzDN3F/lZ9pr304p9Qob+K29z
fSzyWOJf+dzbN9i+wvd/juV5t17XPG/7DTeP7fsN5X+u+0V+rjA/a13g/kH7
E+Z5rRfch2jfQq4qPZ8YNr3x4+aeE26/dpfOH88fMXHnX5+6c2O2MNfr+hZ6
y5UHPNt9vwZbd45Ff7T/4Tql9Yj7KO2LuN4V+7FAfrRf4rqp9Uv2Wr+0j9L6
Wz/sx513/HC1rWuy17qm/ZXv/wLtMwOfF+27uB84pVgHPT+Nth/z9m/Y+jjA
xXOD7dO4P9G6yf2Y9m/HOf9xPT0B/de+rh/stc5yP6/9HvnR+svvBdoHcv+m
dZn7Ru0PyfP/AaDDtJw=
    "], {{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJztyMEJwkAUBNAlXjzagl14ErwEvEZSQIJr8LKBTUDsIm3aRTbgORU8ePOZ
+ed+bF5VCGE6ltN0n1vO3fdxKqNN03tI8XlPcxxivvSH8lz+2fqvvgIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAALBjBcshkTw=
           "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {144., 144.}, PlotRange -> {{0, 144.}, {0, 144.}}]], 
       EdgeForm[None], GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxNnHf8TuX/x+/7nNPeu2gQQioyQikrI3slIbusjJAUISqaQklKSkMpWW1p
oL2VJKm099RO/a7n93qex/374937vsb7Gs/3dc59f855pXy/EZ2GJ4VCYcBO
hUIa/GXhP5TLBasUbMdgoalQMdgOlssXYh/6H2X7zsEq63cJVi3Y7sH2CHZs
sD2D7RVsVgiaHmxasCMdIwtWNdiuwXYLdrSe+CqOR9spwY5wbRWMY017B3sq
DLQgWO3w+YBgBwarFWx/yzWC7RNs32B1bD8o2An6g4OdGKxssEODVXdcYk6y
7rBgx7gn9lMv2CHBygSrrye+ruPRdrxz7hesoWuHX8dgNV1j40JkwZ4a2U65
iXWwP8v9M0YzucO7hYzg19r1wfs0OZKHU80lMS3tS1tzxyC+lX2J7+S6YNnU
+YlvG+w42XSRI/w625dyB/fM3k63HR5d9TDrLtMGwdqbG2LaOXYN53k65PO2
YN3kS37O1BN/huPVd779zHfPYCfLq5fM4DpAduy7v1wo9zEH8D7bdrieo4dZ
m2DPhLXcHuxcWbDeCeaGefo6BswGmQO4DtaTn4GOR9vFxvUO1s841jTMsWEz
WtawHCVryiNkzTkaYzuMz9fD5qJgPeQx3PGIGW8d6x7q3tjPBYXIGsbj9ORq
rOPRNtH1wmyma2KN1wU7z3JvecN0slzY3yTjKF8qaxhfLheYXemaYHyZ7bTd
LGuYXeJ45HBIsDUhJwuDXWGZ+GmOB/up5p75phhH+Srngff1smOvN+jhMVu+
tM0INtJ9znLftNUIN8N9gu0bbJ58WetN5oDy1c5DHq41f4x1jXWU5zgn7OcG
u9D4W9w37G+VI1x/CPZGsDeDLXSfcF1gO5xu07PvO2yH65162N+lh9m95gA2
i4JNL0SutzvGVOvWBt53BLvPvbGPe+xL/CrXPT/YYsej3+PmkrblcoTxA/Ll
HC3Vc75W2E5+VurJz4N6mD1WiNwZ9xHZwf5+1wXvh4PdaNsS65jvUfsS/4Tr
hfFq/QIZL3ctT8kUHk/aTvlp68jDZsdijLWyhvGzwe6W64tygd/zsoP9GvNE
zHP2vce4dYH3ncFesC/xzzgnMS85Hvt+Wc9e18sOZm8He0geb7on2l4Ptsx9
vmYOlmkzzdMG42D8qjmj3yvOQ3mTOSb/G+VLft7V0/aOY9DGNcA9jO+c94zL
88B556xvlQssPzAH8P5QD4N18A1s7gr2SV4O9qkell/KHU6fyx2WHzkGc3xm
X9q+liP7+8K+xP9ljt8P9pXj0e9P90Dbj/KF/XcyhfH3es7Uz8HeMie/6GG8
TQ+nP2TKuL/JFJbfuC7y8Kt9afvWOub73b7E/+16twT7Rw/LvYuFwk+u5V+Z
wmO77ZT/s26rcU+ag6QYWcM4K0Z2cN25GLnAb8diZAf7Yvj8cSHG7FCMfWlL
i3EM4ncqxr7E0/e5kM+7g+1SjOOx712L0bPXfYuRHcz2K0YPj32KcU+07VmM
90pyskcx5uAHeax2P/sXYxyMdy/GnNFvt2Kch/LBxZhj8n9gMfIlPwcVo6ft
gGIcgza+JzjXfGcfUoxx5KFMMXryUL4YOcKgXDEyonxYMeYD9kfaDuMKevhV
LkbWsKlajFxYb/1inKNsEejhLAd+i4JVKsZ8wPgoPfEVHY+2E407NNgRxrOm
ox0bNscXI3d41yhG1pSPKUa+8K5pO1xr6WFTtxg5wqOa4xFTzzrWXcU9sZ86
xcgaxifoia/teLSd5Hph1t41scZ2wapbHhfsZb6vgp0cPh/u/vAvhLp7gjUu
RtYwbioXmLVwTTBuYjttNzruhcFOcTxy2Ey+5Ke5nvhTHY+2RsWYe+ZraBzl
ls4D706yY6+d9fDoKF/a2gY7zn12cN81rdurGK/vM+TLuehqDiif5jzkoU2w
Y41rZR357OKcsD9dT/xc932Rc+/tOTizGM8QOentPuHasxi5w+ksPfvuYztc
++ph308Ps3PMAWwGyBeuvRyDOfrbl7ZB7o19nG1f4nsEa+A6Bjoe/S4I1s21
j5AjjM+VL+domJ7zNdJ28nOenvyM0sNsrNwZd4zsYD8kWGt5j7YvbUOtY77z
7Ut892AvhbO5OI2se8jymmDDXe8kOcJvotwpj7cvvCfbDtdL9DC7TL7wmB5s
sGuE04thznuDTXAMeE81B3C9VE/8FMej7WL7so7LHZucXOHY7HWGHOF3nR5+
17on2q6WO/u8ynwMkylnmXM20zhYXunY9LtQdvC6wXyQ59nmA8bX62mb5Ri0
He9v+f2C3VSM3GG5Yyh/EfyXwW6VO1zny53yPPvCbIHt8L5ND6c75Q6bRXKH
zcPFeE/h2rrZMWC5UO7wvkNP/O2OR9sjxrHeW4xjTfc4NmwekDu8l8ia8mL5
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
obJEKzYoLWnFBpuDYfaD6XDLcBlhuYvjjUpLmrCR8j7H9XW0jpjZwa5Mowat
s3HnuV50Yk/KDh3Y2DTqiPi3s/h3k9g/OrBcOzbOfrC5yLa5wa5Po54Lpui0
JsgMHdhEeaD9miIz/l+pyeaDvuPTklZskqwnOlZ/4y4xl+Od+yrHZL8zg12T
Rg3ZDPc6SM/eT5P5FX5GKzLNPV7rntFNtTE/Q2R5lePf4Bzo1NBfMU+54Oek
8d8au9a+V7umy1wPXz/XW087mjz0jWj0bjQ3rLeebV0tz3at8xz/cNc5y7Ve
J3PGvMXPl7pG1srjLT7f5DpmO9/AYDdbHuh4cxx/tm1XOt5cx+TdF++w7rX/
PM8H7wZ5b8j7QzRu6OLQx/EMkP+vleeWD3nN8twSTRa6L/Rf6JLQIKFFQqOB
Tga9DO97eYfLu9y1hahDuMv13CJHtCFoQtCGrHQunrVuLcT3/rz/570Q74N4
L8R7DN533Of6nna9xPJMmGfDPI/nOTzP499P47NX2i+XKfnk2RDPiHiGwd/S
/E3N35H8FuQ3Ib9Z+HuGv2v4fc0zNZ6t8fyGvxX5m5G/Y3g+wnMS/nbn9zq/
2/ktyXNSnpfyjI7fMfye4Tuc71e+Zw+V1xr5wWut/GAKTxjz79ORC/4dPK5t
rvGxnoWZng3YrZPlas8k9wC+w/guO9G8vmCeYUpetvqe/XlzRW6eNVf8ruM3
NL+dOSsvenbg/rJ5eNd9nOi++bsj/1sQz9/WsOR3Nm0bZXCobNb7DPMdedNG
nraE8mZ50w7zTc7TTZb83mNc8sA8PBd52dznZwSfnx0862dMnovmz7PxnO33
HHusZ4Hx8mdg+PyZIp74VzxTzLfZc0b5dc8I5+pNzwXn6svw+awsvu/4JHzu
nMV3IXWD75XFZ/ZfhPoeWXxXckLwPbP4nP6rUN87i+9Hjgn+9zS+X6gRPnfI
4nuD44PvlMX3BnWC757F9wacXXLDWf4cDll8L/NZ+HxGFt/fvO0ZX+N+WXsr
c0fdR3JmH5ebXzwxXJMvybdmGK9LFt9FfBrqTs/iu6FawXfN4ruL2sF3y+J7
iX2z+P8A8Mw+H/dhzxRna5XnjnfAvNvkbK5TV8J5/9+/b+X9A90YZc4A7954
F8QZp2/Bex7v3RuYa74vz/Ds004b1yLavune/9D15v+mIB7NI7ne4tl9wLwv
s26p9e/r83rOxZL/17bZ65vxmA9+7G+c9zDWzj12k2vMf5Pi89/pZb0GWCf3
P+4P6z3Ty7xuOOvLveaIedw1sqYlnlPO6wpzTu5Xei1yjT1mzsn9Q55lzvSD
Xous7wnPCGeF+98L3ie4z6zzXnKXDLmfsVa4zZcL67lVNjDhXtja7xDuhYPN
L2NM8/uEexX3Lq5XcrnaPDLnf35v0M7c1cL5+i2N7+b+DH5SFp+FHRv8H2l8
JrZ/+Nwyi+9DywX/dRrfPx6RxWuP6+4vzkAW3+ntHXyzLL6bKmbxeuNaOyyL
1zDX737h82lZ/HcJymbxeuNaOySL1z/XPgL32l4L/6TxeuZaPiD4D9L4LnV7
Gq9truuDgt+axvewB4fPH6fxXep/abzGuL7+Dp+rZ/G9YpksXodcgweyljS+
o02yeH/h3rJb8I2y+I7uyOC/S+P71F3C51Oy+E5vz+CbZvE9YeXgf07j+9Eq
4fMvaXwfunP4fHIW3wfuFfypWXzfWCH479P43vbQLN6DuP8cnsV7IvfDLHyu
l8V3gxWD/yGN72p3DZ8bZvE9YaXgf0zj+9ndw+fGWXxPeFTwP6XxXe0O4XP9
LL5LTLN4b+W+ukfwTbL4TrJq8NvS+B733zTes7hf8VuBa4/7OWsf5/p/DXUX
ZPE9LwzGyoF9j87i3jlfF2bxjLGuUa6N83VxFs8Y5+Uiz8zRWRyXMVnXGNfG
us7P4trYRz/3Qs7bZzHvnMHWnkPOSKssnhPOQscsngfy384z8CH3mSy+K+Zc
983i2YZ3H5lzLtpm8Wzw3TI+i98v5Pm8LOa6efATsvgOFt4jssi8QfCDsvhO
mHM00rNUPvhv0/ibkXMxxLNBPoebU87F4CyeDc7auZ438j80i2eAnA/LYt6/
CZ/7Z/H34Y7Bn5jF36f7ZHF9rO2k4M/J4t+VO2VxfayNcz0wi2f7/wB1Rde8

           "]], Polygon3DBox[CompressedData["
1:eJwt0llXT1EYx/FzOg8pUkioUJnKcN/iHaSBiDSSWSqzULySuqMysxYyVKYm
DVorc4bu8wpQfJ/1c/H999mnffaZdmZNQ3F9TBAEuWSUx08yXQ2D4BqV4pCG
8Bu6jBfRJP5BFTiiETxMu0wL+dxBKsIp1IbbqQAvNq3txwrxnygI+nAvFTOe
YTyA+ymf8S/Gr/Er2sr4d6S5fmwb4+lIc32NnYz/Rrq2r7Gd8RLTtTvoAJ7i
//dxC38PMt5C44xbGe/AS01zr9N5nENduJsq8XK6je/QSbyWnuCndBqvM/kZ
ncXZJvsazXgjPccv6BLeQD2hjjXgNfQ41JpHcRY9xI+oFq8yuZPq8GqT/ZzD
OJMehDpnH15Jd/E9uoDXm57Fr1mNV5iexedsNr0jfzdjjK/gTaZ7fUk//78z
f1d+jRN4Hn3Gn6gezzX5I53CCfQl1JyLeAF9x9+oDMeY9o7vsXM4kb7iCdqD
0+gmvkXlON1k/wZNeKFpL/qau3Eq3Qh1TgleZvqWfqwGzzY921uqwkajofZw
I04y3Zvfwxk833Qv/gx78SzTuX7OcRxvetYPdATPoff4HR3CsSb7HjuG40xz
fc5+nGH6Nr4n/wERD3rj
           "]]},
         Annotation[#, 
          "Charting`Private`Tag$1455299#1"]& ]]}, {}, {}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{921, 1, 917, 902, 31, 61, 91, 121, 151, 181, 211, 241, 271, 
        301, 331, 361, 391, 421, 1096}], Line3DBox[{3, 2, 909, 921}], 
       Line3DBox[{3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 927, 16, 17, 
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 910, 918, 30, 922, 
        904, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360, 390, 420, 
        450, 1017}], 
       Line3DBox[{991, 451, 481, 511, 541, 571, 601, 631, 661, 691, 721, 751, 
        781, 811, 841, 906, 923, 871, 919, 911, 872, 873, 874, 875, 876, 877, 
        878, 879, 880, 881, 882, 883, 884, 885, 958, 886, 887, 888, 889, 890, 
        891, 892, 893, 894, 895, 896, 897, 898, 899, 908, 924, 900, 920, 912, 
        870, 840, 810, 780, 750, 720, 690, 660, 630, 600, 570, 540, 510, 480, 
        1097}]}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
LzSueL1sesDvh/Z85wJgcLok+XA9jRPifQrth5znarfMtP4a6k/2NYfwmq3b
JnL9BKwPFG+m5xoxniHyO9jzIBTPhxvHPo7itZi+URQ3swGITvhXoXMcjnNj
+iK9uf4/Y2fCU+23W3ueHwDwuU/00eoBA+ZpdrjlYkXmg/1nMR91wt9FNW9p
wnoNIKNnJ5j5XI6DZ6k/zbLUXWmeyBS9p+y60HeA7fR/Xi+Vm6S9pnIO3Lb7
lMlrAFm94HGsHvn0njctSnpF7hDe8wKLK+RvQBaHGM+sfqE4Xgd0RfuVD+HD
5z8/NF8fuPqqL6Hj8SjuA74t2Ls4IozGr3B8AcXJyHP7hxyvmS9rBcX2kvqH
OC4kaW+oXydpX4mdAfqi+TvSfWHgvmvPL5nDzTtzX3QdMo7Q0TjI8hkdd/L8
7cE20K/zutK+i6j/uVf24mXXfK5+cX6QzVPsW1SwMt9yMqwV5etsyHpdq/VH
fbnuAcX41eOcoxcfGDfuqjX1A2drT/Upi3bhyL8S5TEHlitVe43w5bynaL0c
3LJ5DRy3Z+WG87CsfDAfVi/ovA1YPfLpnQ8ndaI4sCcHV3w47CPKa47l4BaP
E++39BzNF3/ugvIpcUO62+/KCyTndBTfBAUrM+9IBdH36JT2vPwHdZNgQ+mP
EtfK6RDnC/jiPHo7D33aNM0PRN8qq1conQc+MPYZ8SdywPsm8hfY8yDcKpon
jYs+qDbqMlXREFaJ82yEj5ivFeJD/Yc5SqvywiYJwLi0nn1drSluG5W+e5eN
N4Ti3xlw8Cx8WP/6Q/tR5LmlqrpfPz314OirJkY1/YjiKDhYunCRwwsXwme3
6D3Sg3hemB5+bmVjcBdVMA99Yno7UT6lN1CL1Li4LHAM3V/E5whwBcntP+ud
yo1PzvF9Hihkx5uD1UgvOM8uGe+gesxBfuYPpHe8T/U7v6Rg4Rl3iOZD5NMF
5VNYXPHhsKDJNOZdsweci3DLrmuFaF+dDzF+xPFnABqifWU6/qY4x3Fvsd2i
8vdEeF5ZFx4ZV+jH2Y9Ch6XLXfkRwKG/ct/+MS2Snq/3aA/7VQIA9A9Tvh/r
H8CJM7DrkvR3ufvXRpRnw3R9dG6aLZoPfe9izzy45mFsAs+Kz2EcvYvlQOsE
ekUX7hJ0tANHRfnwsYSeUb9z95K37oiPHZHzasHlu1LnR4C5mioRq2ZTf/UV
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
     "],
    VertexTextureCoordinates->CompressedData["
1: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
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-10., 10.}, {-10., 10.}, {0., 2.9790409838967277`*^-15}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.890210960994906*^9},
 CellLabel->"Out[441]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0vQmcrUdR/v9y3nNm7n5zc+9Nbkhy78lGMAkhCSEkhCQDISsJISEQRZZh
kVUWAQUVHUFwQRHFhVVGBBUUATdUQMcdF0TBBQVlAEEgYU1CCIief32r++lT
b897Zibh95/PZ7Zz3vO+3dVPPVVdXV199WOf++TvePpjn/uUxz92fNmzH/us
Jz/l8c8ZX/rMZ9tL7V2aZvCtTXOX3x83Q/t70jT9Px7RNN/MC6/1P9sF+7HY
5K+h/xyN7ceSfa/k31zT/Pbaz/Leqj7b+s/5cb5mNdxjonv81qbu0a7E1wY9
r71jg/vkz6gtS+Hei/m18R24z0LsQ9u99+KdvU+SdVvuwdfbN3efTh+q9iz9
/9WvV/mfo0U9I/9enfXZ6rWFGfdTG7hPGeMgm+X1+h7v92r/czhupphbLbea
X47NyB/XI/tg2YFbusecbhtvz32Om7ZsofsRbw2vL+Xvl4QnvS59TMIMHytK
yXdzgvd+ZdoOtV3tV1teHG7+N9WH5jsdyg0v8v3h3k/2jWB+TeL0rxeFT797
2oFl3X3kP9vF2NG2fspCsxbTi/G1+JQ0YO2hI488stxxftralfzdjPxnV8Rr
nrwU+1K1ZqF+8tv8zxFPftSv/dqvveu7v/u7b33iE5/4n9/5nd/ZHPFN3fmt
/ucW7vzaF77whf/+9Kc/nd8X/v3f//1DfuVXfuXL9hT+3/9NPeQt0+b/wE//
9E/TfB70gle84hX5s0Metvw93/M9vM7D90wfs6DHxOcvNmsHbubzfy09n/uq
kx+07+fw/FF6/r3/9m//ludzDe/n5wtxy/Xz9azF8PwO2cXnv8n/3Er/6TP3
L/23L579zyboux5++OEyhvz9LruGf5CXX5saNdSzxQpZ1wqx5K9xbs4aXXuD
/zknNNXjntngqTZSSKSZ9nBOreI37//Pd3zHd4TRGodGiYvUWLVksFouLV8v
DI1LzDuqZUVDmy3+3nZahcz0cVoDfr5oMqR1L7aOPN8+i9yaw6fjVRSycjiW
829vU6Sz13UFFXFLr7cluWv4+I1Q+JsmfvxJT3qSoFGGkK9fCo94Tbe7t5tA
uda7uyvdn6699xnPeAb3dojYlwZB9onP354Ho3P/V0678Og3v/nNsQu8tj83
T7fjK99SPW6mo5Ju+fPTJq/RpgM99+sTwevD/dIrW/ukzGsd7UjE23YQ0HZF
4PQc7//Tqb1R+wX1pg/rSeztYhPcgFHPc4c9cvrF8NyXdYe2o/UJyS1Dq0c0
O6fPLWqcnwuiy7WjqTwdJny9Ljz3pf7nTPW+6/QxhcDXeUxHrPExP9bfPW/S
sbOeMUDS2Wa+QCrK12vDnV/S7UCtdoe6Nx93b75lKh0fYb5eE25+RXp/3ISv
+3S7Qnc/ZA98G4g4vvu0xSAaRIXI/L/cKZ5ZxBWfe1nqFM+V9yRahHvu5W/P
VALeLOALnt+6TZrzn0OR9fvNW3i33SO26lL/c8u4mfp2C1mmsvD8PqMrIMHJ
xzqrQUdNx90WLs1qYbZcfJbXRN78Xwbw1WuaW+674P+l19Rcf/Rpqf+zpDk/
bUphqQpVy6HJ8g1Ck/21oiqZMTX2/t+r1jZ73ARnps+POGUq5jVMdVpo3/HH
H78yq33JKLlyvVZifmVoy1U9zz15+tw1THXP8NyLLrpoEp4bfZRme3pN/pv/
9wv9MlisZCAny2Vzor82k73O7GlOwnkL+nRniUHu3JrmJHWcjyq40ExB78N/
wrQpUSyftCFG5Ellk4Nz9tlnT0488cTxVDid1rhwBvRhbRvm5BmJFtSepOa9
lCAJu6LQvbot9r0woy070mudgfq5Na3yqWgxf4kE+72UYBqLXp9ZNef+97//
4rQ5He9gR89A9TRHGPGvQ9OB6VPvbALKI/g6o2rRgx70oKUZLcp2mLsWDfrZ
tS1abGKYZ6m8Vr6O7AqtQ5oXVs152MMetjxtTsfNyO5IZ7xesbY542ZK4c2Q
n0esL6Xgs9NsfmeSSc26973vTbNW1m9WZ9xisx437f3rrNcfNuNTuCzJees4
S29y8ODBybnnnuvg//d///ele9zjHktnnnnmwh//8R83d6+a9LjHPW616fdY
dqfXsHHF0fyZ0KTHTAUi34Omv/JFL3rRu8qU7zAJxNXx0KFDgHfy8Ic/fPLI
Rz5yYi2b/NIv/dLkr//6ryd/93d/N3n/+9+/+rGPfWzl9ttvXzr//PMX7P8T
Q4PPOeecyZOf/OTJjAYn7M9p/oJ8acjXTV2RU2z7I7uDWdNitkAdPzbh2ENd
y+oLUr722mub4eRRj3pUs2ty5ZVXTuxpkz//8z+f/NVf/dXkb/7mbybve9/7
Jv/wD/8w+cAHPjD553/+58mHPvSh1RtvvHHZPr90xRVXLHziE584NL2199EG
l8FxDLmBdFcsdW9eJBW7Xpzm2MdHTCGzxqOcm0KwiG9rul4wWlUnH/CABxiz
08HDJ49+9KP9td/93d+d/Nmf/dnkL/7iLybvfe97J9amiclt8o//+I+TD37w
g5N/+Zd/mfzbv/3b5CMf+cjkox/96MQGdfXWW29deuhDH7p0ww03HN3T4QX7
6nY4z3c6M52Xhw7e0B1EAVCD2Mdb6TWP6Hk/zjvvPAZwGx1rjpjc9773nTzv
ec+b/NEf/dHkT/7kT3wc//Iv/zLi08fxn/7pnyb/+q//OjHtmvzHf/zHZHV1
dfLxj3988slPfnLy6U9/evW2225b2b59+5LR4sKHP/zhI6ruWiMn11xzzWLp
buXHZS7pzEJjxx/WHdmO/UjPSv7bxRdf7B0b8XN+8pjHPKY5zD3lP/zDP5y8
+93vnhgjTP70T/+0DGPEK8OY8TqxPkz+8z//k2EcTAywzRbvMi8xwiaG1c98
5jNLJs2l+9znPgvvete79oQu20veZdP6pVldzmPdmf39VOjydf1jLfbNE2Un
GciFrm7zn+PJ4uIif03uec97Tuzyye///u9PrIWT97znPZOVlRXHsQY54liD
LBzTW7DMgCMQXgfnXAcoEJp9dtXec9o94YQTFl7/+tfv7JGEcd/yLEns7UH9
y4IkHtId/Nts8N9pmPXBT3o19DG2173b9r0dGTQnTK6++urJs571rMlv//Zv
T37v935v8gd/8AcFBoK7aCvCXTCgx0Ce30iG14HJm9/85skznvEM/wyfBUpI
lPsBL5PyKk71zTffvLR79+7xSSedlDVxKhY+/4hHPCKKpeOI7+3qhM/ioliu
TvrdB5Drf/VXf1URpTxddwIwv3+ytLRk5GbimZs89rGPNRmBlvF4PHnTm940
+a3f+q3J7/zO70ze+c53usoIMVFlQExUGdCAXIQMkATCeCDyf+pTn+oy5vNZ
Nk43jAPPAJ02Nism914Zmf1bnSWjfT1K9JNBRg+aQmfNhKidQrHc76j02mKT
3Sock11ZTve73/2ctt/61rdO3v72tzumsArSLlFo1C7wgXaBK+SFbLLWuLyN
Lic/8RM/4S4CasLnwSZy557gFdwyJoyNPXfBZJKDBUlOmORnPvOZ/vkgp87k
SmG6GPL5iSCny7sq1gmw+7MGiChJZ+icc9VVV7lmPeEJTxggoO04Vs0e/vSR
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
kBUnVSeYFE+sfO2fbWx47Yp0mxU5X/yXor4Xo0q+E5vWgzV6OmumTXwdFgFI
csjouRwyVQQL68euNqonEQ++6SuHhfRRHVW8iwcZCPeKyyJ5qU3cmxNPaOuL
APQZRDloO7Ly5IlyZ6Tjzmb6SKCFUNIwK4/Kgaf/7OcoWyGEIeUxoaRsCd9X
4v3MajJAT+yD+FP4VZQsH+AVNXtdS/CN5HcpIiotQZPQFP6WIYqxI2mPTUHs
wbfeemuLEjVjn10zTqgd6sliRVxXpP8KH6+Xmx21hjRBnY3D+PZZmKw1g3RW
mw8xfgz7xULRwlYp0UtBczopj1lzOsU9suZ4UpAf+ba/a2M6i3HpAM+0g/LE
E0/0abbN/z13x4STwgOnuPrhDWIuwDy4pE/gWONez9QxMzhQcshCWltZJ9NC
dNQR1YOOOqKNt1hkTX5ViyWUKB4wEM0BHwpFceMOWVXpiJvuZwXKajWhmVlN
0nEWbVlQIG114IVRvapuiamhKfXoZzOUWurRXn+KH4DkP4eFJPK369fAdWm7
61KcFGGM9BtjRCyYmYRpjDXJHCffnTAA3APfrbCl7KuTqckZQq4wpkADXDTN
kkJEyv6zny2OWeuKdKIbIx6OD0h8S4vTiDYuTmtlaTPaQxwTuc3SHh3nwjAJ
AVxvDs3Q9cedNJ89GwiZkORgbmdrei5280drrcZXDbYcOM9rV02dLa+GnIrw
ktnToiycQLzAqnFKcLvGrQtoBFIwW98UHxkoSZNkKdheSXRywBRvUnIc7KOy
azp2MmpJXe6Z55NJwb1UbLfOcuIZOqJKJ4LFQjayIKhITPi7I6qiLOi4KKJV
QNXFyFnvJleqPW2d6WeoSgJqMOIOacrv90pqYz/d7NhNFDqILpteQzHTCrhB
doAmDAjQDlgyG7CC0OzytQmlu2s9ApsTvTfCW7IveGj2u+WPFoUZYnJsxqRd
ZcyG6oXqGODT7spYzUsR9PoAJODNPTeSlCpBM6rcB5c/1aZPaqKNg4bClaZz
nEnJ+nhSUpN3+8/5vkW6ksVxz6mjVr7C0djadt2k7YBDf7IpKGdGcVZUCrxd
4qrG5nNCvNAIUAS6QHRWFIBb8bmQv1+cMS1Ia9OItv1LjbjXrINQcPBYedAG
sniWCfeP6sNrOlCP56P+fF4qRBSPNbo6aWU9VQIIbBkZuMj2lRIGddhZ+5Pk
AMattn0gyYkvtRbx34CfrkrmCqqkUeW/FQNOe1Bv+sEZVExyBn7A9B4P5OKx
8c3UnbVoTASGB2VQsDgaIHlzaJb9NpDYXy1K1iabxJliJ3gXVD06Ln3GrF0d
sLZeOpT0CQjRjT5RybQiah3ix/Bi9R/4wAfG0o9p/5rK/U4VqlMwJyvUH3Q9
sk59tb70qNOSArp2NKnE0eri4uKKTUeWrGsLb3/727Xd3VNpKfZE+kJKYhh5
F5i2gFrzCRbYYpWiC9e4a4e1jKXmYgQB44ro6ggC/qrKTPTlGPJMuXY62kPr
bVHjVKoJFHEvNC4eQxINY9S0vpNAdbCttI0sEaWKrbcoqvQuxQSE9j5jpSiF
tatJ/vu2sjm5LpkQnRdjtK08ZMgdB65i20vcLrp0yjdbyocbgE+2gQw8YaX1
mT0L7vZtr3EI7C73vFgIxXCp5gaTJaWQKLEqGjBf+jG9my4CDVztTnCRaM88
szzEp7m9kgt0oMhmNAyTi3JEkajOIysyFMeQhnENw4J/hIal6okjj7mpcAbf
gHdXj2eXj3X5va5nV5ut+amSFWuVchZThcycUW/P5cy3Ya1se4JjiFklgy6x
pkeSHOtNLlpgjLdg09s0ezvgdhAIIlOgCmxnRR20EUNRBxARN1r0ZDgOvJr6
aR1tq0/n04GvaCDijzWxpRnraRnCmbXxMCZnztK4aIcYds5b9CMz93VMmjxS
xTTqPdvrmTr0w3RtjtsOi9aZTasXlhA17eKhvKejZ2ADU6pBynQxMzPwkve7
Sro1kQIl9xKSUAojhi26jNmwtahgy6vDFFY3TTRNgzCUPKPV/JjXqW18m9U0
XidFSYdkqhA+pN7kIkkkTkjL+AwzEEqbD7OmYb5Ue/H4448fB03rOIepGk/z
O11b1tkVl+qIp1JeIA36oSuXXXaZeem9qrW98hnZMzbyY1fni+PB3AY+QGLW
Gg5LymbzUf4ojoqBDfG0ASHIAS1IFcnMilqw+ZxJ9HoZknIgmYspcaw+AlPZ
kqBTVcrqI9SE3Fq5dF64qr2pgJfqotDnuBmrVjQ9tzZDUemiGdPuOu1L4rl9
FRL6tI3np4TJdOCtEJm/XfGanZqidXxJ9I7b0STtpVWg1bpths06OqCXA4Zy
ALmY9tF77B/2DdeSYKEyaqKtQ/uwhfxv7w15s0U3W15qTnTxqBCOEg7q/fMM
3WYVj2EHevJoNLTcD/OGOaPwAjJQ3qBq/JsGyMqhc7A93xdeeOFi0L1ODays
e+/oWrn6VNjzkvq5S8h4Ixmwctppp5ksu+pnYzw29pwLXiQBP/dIU2jNUGM6
iN1hwHAx6Sikb87+ImYnLek+wl1KOoxgiQeB476YSNzWopgIW4RxR6NLWSds
qjYkeht1MCZvynjxPPwF3o/HhWgvHm3aSPfoA1iP1UCUcFvroSqMYFBVuybq
jnQSSxXjLTxbJ3jG3f20N94ruJoDbpAm1N51lkPb/FNJMUkx7Wc6+3ZHZ7UY
RQSIitLKBxE/+seMdAasJA3o5gAeMpVGIvFAlXzGaNnCpQw3WUL725ph7w5R
15ZrzPrRL9aouEtM44u71rTLYr2sHy0gMu4kCtOneMI9f+Omwe1kLWvxM8cN
c7EtNibNe1SEHXdYSdX8tSlJ2K3brSiWq+C+rWsFv2aK+mX7qFvB8/296eyN
+TBkxbI2KRdXX311Vsc5N8bA2rq1ajOypWOPPXbh61//eo7zu2ade+65ngsz
BEstg9Zs8S7iw6AOuIpAB1iac7FoapU+f7xbVNAFirEo0B5oXS/Mov03xJ14
9mYyOKWZMatUmmmtHnir533LC4+NJ8ZmRbABsb+ae65RSJUolEKqqorykBV5
kHJqEy2KzByXLvO8PkVVnoaKkyl6IyJQrYP4+VmG0oBnQ2QdV6gfrZOaDvjp
emkjH8tHI3TuoOkBrZProtRIWmcSGODfDGhXc5hfr97poD0VziPgr63Btaua
CzW2gLHlytaX3E50bUYEiFm5Fyq5AEpUcuHO6Cev87d0FF2nSB73gNs5I4z0
H9DVpHoEqdTUnE8BcdX4Rj2vu+46Jmz5tC1KaBX/NJ938xv+c8uslWEWoin0
l5UUi+v9gLUQGP49Q3zOOec0u11Jt3oIhD4w5MwHjOVW7XvFYOfZrzZINvQ2
bENotUmbxyFX1AarTye5KZiykVq6173u5ezALjxFy1S1ue9AiFkxGXkgfUmw
XIfjinry/L6kb5WgYYAZIO4Xj3qkzSAsVj7ajF7iaakGCJMmFVRDX+Nu4bjp
HeddiI6GVRWWZCy1+0afiTVJNtJTRmeU1VOV/flv5Ep6mNNgjAtxDfemzSq7
pglGdG7yuWMDGj9wf/awIi+ddK0JJHLBEmgvXDShKkLnq3eGxBZj2/KvaWg+
4cK/le3RV4fijmoo1k9r/wq4ASJMEwJQ/hkHtqGGbM0KGqoS3NJS43g0NEVD
RzpDBJX7C4MjGisb+pa1M8nuplE/j+i+SZ/dlIEhZITstO+Qpefrr79+B7qa
zj3c4pinu4gG2YM/sIrj6eu59og50NE80ccRtsX5bPIeaPSPcTdlX2G86H48
mmG9YE7craRgDiU8Jfo6XUSlGJGh9LTO5eVzWAOGiPsQM40HGYE/OaayW336
qTJRtX5qeqXTfeO+zrjrOe7y79Nb2U7VBEIH6lItUcdnOb123QhhmpoiTsSa
lNZ+Jo93t8sxOre0k2UC2kz/NBmJLg9jbW00c2xPHiA6pcPSGq4mO2yAejXb
/G4onQrGaJ8eklCZ0fe9730tomrTcqIJrjm+nMeA2JRdEmtsqFjQHdFS4g9Q
vvYdoKnyvpRkB7zRZvazmpYOplX1Wv9sLsvXDHI+QxO+0pr2SGUJ4lkQqQBh
Nq+/2j8F7WxkDeeIbXUXllgQwTEdYKET++g0hnZHNrS5Eq7rjCIGOkoNgaR9
WTaC8wxgc5ZLmkHFq8D/JKKDtFB8hpSZICMAKBg2AA4IAWp0tfqiREgchSS6
BD/OWvVGcZmd9iXiq9Cp6v/zHtPsePy2KbFHP5pD5bjlzeqsSoMiJ50yrqoG
dFEHmPXpMlwWKnY0aaq3x5/L8/sK02zG3qICUl4d4cJ/A366Bpvy6rSM6ArT
GECCMUTlaDSN5XUalJeI7bZGFz5bSDVjd5djuuqDHBGPSo9FcxuOQrC72dUt
Uk1Lmcf7cxCozq5XdkvMx1YRjM1qL3jBnsbwETNPMBRXALhnLgXXTkuuqryF
/Zd+RsXNrnCnouNj01tvmhrYNZttc9wVTS0VHfPGddWT8q+0FLllbC1fImsS
hAMHJhOQIKbVZJ3C5d4yD9eiz9sqrSbQDE0xA9TBFhQBwStrUYl532R9Ttlk
DbSgbbSbs8DQNMUy+SDkDPwj3Sv2FLPWNPfXDJf/URFGjcYq+ZnYlEZXxdNq
zVYiNDyuzD7uB79yHx04KXcV85dLGHh4szljQ40GrqoZWhf5V7HI7M06MFW/
ErCi1arGUNcq4TdiXa/01HoajiJ4FQmi80m5wTn/DVMRzKTc0YuWuPjNsNI3
eXAqEKrZjz3TWMJ8AM8ET2ute0otCp0SjuRwf1VFVRWFZKUBhMrIIwEWTIcJ
opj1471LiBEx0F1tvoulVTabvSZLjMNHPbcYIiazjc/2bWE3VRjmg/0EMn1j
pE866STmhzrws1NJK+v2G7rOcyelIMetOpmjKVY79Pku3yR8GvDSIujOMadY
k2cObrRyAxHLo9IMCGuBCrGiU+u36qvSaVUiIt5FTsuQT88xgC1j3VzqJlDH
m6E4NCrmEdQmIIavZLo1ZIgd7eB1tAHMIHKoNJb3YkjlbxNNUDH7mKotjQPa
2fF0F4D7q8SG8g5okypAAKeNtJr/+byS+aLNznkRaRfE0cVdrZUdpCrnD0VF
gXk8yrxRUa4Zbnhyh02j4Ty6Tjxj4D9TFEta3qZMVqz54S6XuLdCC2KKQyBv
kEBjMRYYX/SSRtI4GuB1333rBzZgTwnS1/NmOoK+S5byzOl0ddyINdK4zSsW
NCc4wBAsD+SGVcGYTh7eZnWdyV7WoGLnsU50uI6jqig29QrdoA89eTilEl98
8cWoY+8Zz4tJa18/9bZV8vtWc44/b9/8n06d8PXWVQq1E661JqyyyfGU5NYv
kbcDHuFFMAfWVMoS2QEYX3vD/Wsdd8cee2xWbX5uKQqO58o6LCqKNPCuTTVc
2POIfegjcKmDDmplHHUwHa45i0jKWObZOq2ZcQaMAFxuFGLm85rfonMMn/xM
hqCub6aFIh3c17cNQ7iVlSJ+AF+oPLX2YwMXcBd953gghXSavoBr2lQfDFdZ
bfdXBx53OMafiWxqRY+Ju+gT8EJxZ1Ug28iCMw0ynhzmKKWOZc7fyZgf3jnC
Dqlq2TguxyFJKQlRQ5YXcadlI9wjt+Y3e53+dfJHriMUp9ilMJSCgzLkdEbB
wlw6t3G3aegzpC2OEtrGyChNKdRASWcnHbhT+lwViSpVCbRiCTvm8xMGU4X2
+Be22TcEDLJ6S7WDenfKqz0mvfW65Fz3FgOxL8Wqk5rPeaYS8XQ8DVpmFLjy
jW9842R/ew81HZb2799fUgagfFRXhx7CmHEirDUEfjMZYV1qPi0Tu2oHu57O
ZxyWbQcojQHM501zjNacJ6vtL5qPk6XdtFhhHfLDIHMNyGccsYTgLEdQfXyF
Wu6BYfJATfNgv4bNXOE4y06dY2l9nTIvTVdeAp9HlDoSHIZB61TRWiZVpWJr
bQfz/A9YANk61ryY6prBoqciFqh3DCs5Cs3uq7C2kXnPE+ZhruEjteY/Z4NB
1v24sViHQsUFPyUqqigDCoXSqJIbjGT/D6CtgSf3H+7Kr13V9dScvsCikq3O
u4xnzOWl4tZDEyc4XIEDImF4VA8vFvxh2O+MLWf/lk4m53r+j7EgDEs4OyUV
cTcJ6qza/J02BLVsHF6uVL/jv2fVf/XUsvelcqT4NwSwL0/AQSyGGY2kOBBN
yqhcuuCCC9LReIcv3eUud3HpAATlDwEs5YPIDcOUIHgGRqFblA4iPeeccxIP
tC5QnU+lAhp0mMQyw2raVTHPHec98rO3OKM0gJsialADErAa8hmZmGPzsFmq
L6+M+YzexhdUmkMdRqA4OdpeZ/hr8T5m+0szGcqY3c57nE+rmLkm8mhjnLSn
AhIUA75nR/MRGM9VUGAdm1/WrgKj9fo0sYZrtP8KTuTktzvMBKQNiwKU18x/
A3627hXs7ThGDA56oSXoOitOFYf4n4YhXBpMY6xDdmP71MAziQ4vktBmvjiL
pxd4NdERiMd2aXRMgi3dMR7QJJA2KCaoNC5VQ8I+3RkeIN8BECkSBA/EubuA
1uWB1v8nDpz2iXleVIcEchmNcRO+5ntc/kent16ZfPpYIaDkV/adgpH+SmWq
WVTHSUdHMNGqu0ktEI5TTYfa7R+bNV5iM1/Md9DaJs5FzFhRgA1sKXQOZhUR
wqe//vrrc+r0Lp/uwBhx0oBoWeBnLgLUtFaj7ATTqSHMNEdLB76ZcY9foFO4
GHcaB+drFowiARMtJAMrHViRSaXxnIlmX00sjiEFAeosMx0JLyJRWrXIw/5O
FVZPcCakbzSBW+uIQuAD1/EaFo1xULEweWJ0RRmHm/UiNFazvaQjS2Z3nzeh
tUf4ua5MudG8wtpuPMLptsNy+F/+TvSye81Z2DQ9btDSdhFttRB7pJ1I5Kt5
EYay99O+B9w/ORVby0atOjwAFWYyaXxXkoFRJ0iKREguGjAgrQeZxz60WoaJ
pdMZOyjkjmSCqjaSUqnljhA3Uu6GdrBlChnEeYRyNEh+bjORGARLxYNMIQtN
qC/eV7X5UemtR/Ywzr37/Q1V5znob29fbNIpKa65IBvfHSZRVDXXK/UU7HT/
IxYuvPDCVYXc64PVgEBMr9Hx9SHmW1ZntQcPaZgLMsouCIKpjsik1NdOl7Lq
woJitAoXB3uihaS8N1psYwArRTt2F1XkwzokSMW85ZDyt5bKdPoIucmeKGkT
nopxihvDbyCCq1ZnywETrIb2jothch0ruzfbuC50wTExQxd4PgKCXoBlLgVX
IsxQMb4dEy1+8xoQjlZwM26KTp/qY0xRTjzAZpa7wrOQ23olomu3hd/2+REd
HjnVHFHWVxSK5W8Veo1VBnhPieZwDFRHX2kP/2ubF79LFHNfSZPHAegLVMCK
NFnRH60q6HBaRY3ygnPryT+JXCSxurDXnSUXrgNN/AY9rFzRS/5XIkl2hNup
g6K6mEmRtJs9MkMmksUm1Crqq/2YyeX69BbcVBYJ0+LCHB/VGQgqCQlnndV1
aTqJPolEdvDLQ5ikxMllAPvcCsHr8AhT5tUbb7wx8dUBUtiX0O36XHRtIALS
3AroEYVW5hBjiDorVqFiMNorxdzVHjB0DjrWAz3RqcGZYQKB88Pl0hzYAGTz
CBW5hfrQSCU+8L7OVuX1WPw2VNkyFsDkbi00pn1+CkbKWBNyHXikbFSzVF7Y
Vza3cSbyodGAr3Jo11BS3v+bS27tKBUoOSOIDuMloI41HeXN7MlJOsIvjfUo
tV6uzZYbOTwx4S8wbKrIfVTneJc+vyeenIUKIpqNateLmBAlNLSFO7X+5664
jc31U3V34sZVzZkUfippwaMOGSEKdhEm52dvEQes1BdBYbgZdrGSVnnjCXfI
gxyn1v3B49wSM9L8VrpgPKzrm6EjNm/wGVQCv4f213ltFH8cZj7ClPM6fDTg
5yC7PCeffHLxVjL36IygxfAaE59/VYC0y0flLJYpH82vBA6K3OSPOn2tQ0Ry
4metH5zIm6ZKO0vMVQ4R6x8scjY5sV/LAWinabNXQzzGP7tvbGJYVf2Nepej
9oHwWl96FEOtlOBcGCHt/xi6DjMBIkZrM742byVg7iJ+YpsRky0b1LTecHgp
8MENwQq4oeHaToVnF1fkdQI910A/sKeXzfzsZz/bbPNSGDqYNCeVl8NJuQ19
MIimDcujsjqaCSsH9onpH1YTlis44o0o0pnpRH7iNiAjFD8tOJ1gXgo3MxEG
8EgwFM4tYUynJ9JeDu/Eh7Q1W/iP4YINHKa0Y+1g3yy0pFTXfpPqDcea2mJD
PjvrEIE4VUOYZuiGvkXEwzlKNjOk8HN/x4WCFWMp5VjMTNMzesy1qp4XGWtq
EyjMsq9keKlEjzagxlgPzdTKeM7IKNtqlS5Dm4zx0iaQ45z0VPOJWyl7UhXt
7ixp8TehS/AAeQElBj4W0xVpyYmC2PKRQdZt+9lmf+rSSy9drEhrhbnSqaee
6sGflE41D2nFkyZfar+/pllbKlbkK7hLmaGKZ/Wg2QQX9wdlgtO5PCpY7F8p
vWNrbwaYfZHhWYqxJgLeza8SaNaKr3ZJ4aExbPURFqb9y/aZfLzwMWOT7ZIS
HfrKl2gnCDYTrurJKHMDjPbEHb3a883n+RsFtecOMgXSRLlpxLHOP//8tEne
PmtglWMHqlBdwMdTFI7SRFEpxDoZGwDTY50ZyByrUOEud9zIl8mbT/0ShMLl
CEk7lHiMijl4JV4OVNhT02JxPJAzrpbOOGbmCBZrGkwlY6jMt7ccb6E8I5bf
eBxsIx8scGCJ46LyMeGFjUrJKTmsvKcKUhv5abQ9+KGJGO9atD2ewKt6H33+
Go9UjV5uXZ8pUfttuRhZm4lQBYHSf36KBmx4Wqe0Ic+P9bY1qVRblDPA9QqP
iw0Rn0rTSaT8rzgbz6HtfUEr7ZOhzQJan3x8VY2aFWNnLKXH1JUK7ywbQtYy
tBdeeKFbz7q0eGbDdDaPU6IHRzlVoeVn67zYJcMU3R6Od+3a5ZkxuX5HLp3L
inYsxCHvq6oE4MGvwVLhvlJnOtX2bC6dXr4gChwtlNfKVzubPpf0mHDdcnwt
ndrUn2SXk2WVMO//HfKfh3Vi8dFpZBrJ9hmMe302Vp4uLtjvVNrnpPHpp5++
qoNSddxeXUhXpdnB+6zEPW1ZUbodzqP2W6tyBJDHImLAiCwwGSTHlpxf0oq4
PxXbkhO6vzihfINJWFrBOJ4L6WlbiU7jBN7aYsL7Oj4G4qQSzQCvstnuM2Ad
/xxnvzBZPE4mxXvtCc1cTa5yOL2Wh90SDYMUGRElckCk4DnukCPYkZJI9pZz
AlGDXF/Q76N5rsJJIlKFnlQBSEn/abWNhbbTesvwxQPgYwhO53/3GYgYe9rI
tVTILx44T2AqnlPVx6pevIQqAK2jjY/zX3I1jyiLphCeDoqLlSk0HxZTqQph
dCsRWSRSY6Dkzu9zMuMtLl0vQqfMZi0FxZO2VenGedREbDzKoHErbftSCukd
yerv41GO7cRSUzscLo71CwKPegXQxguKOh7zd5sJFbiZ3+X+W3IpR4tAAi0E
okYqzrJpt053/TAvEvB+8QkHPa91+VPT7Fz+qFy+Gf4sNB2u0/38K5/2pdTF
jvuZuPVwb5pWHKK7qdwq+BJ0x0OQw0oEHhf1lvZlzpybm1tifBCwjgTaqB4l
Y6O0SG6ptEighZLFPQXaLQSalZ6HkjOQ55xzjnMnTadLZIDbfU35TdV9EatF
4Y1asODaXIuaw1Y6YFGZGVoegQpQd65BPWFNZtvMvKnamlhzi8/GiSUyG2dS
jzeLQmT19oKXNsIVgTp9plJjOzsEij4BejK4tVSqglwwZl5mT1Oi5m7+PxDF
LYVhGUMGAOGJMVXiMi7+xdLJsUA/rzM4fRUX13M9VRcgGwGv6GTu5ywXa5YL
Gqf8qpnDZ2cd8JfLVXvtlFSVQz1IzqhJN9iDMhlSGfV4aGOYkze+/tmc0Klk
30OapQCiYrfaNqlIItCNkUTtLItLpCppEk+foc10n2chnlQFDwNwdDmp6I5u
hoqlOihepXqeQkj/ZDz5nyCKfmKnh44/p06YI5LmCvdh8pTPtF4OpNkpnu2k
OYDIch3GzvT58kCVnoE1N4sM4y06FHhCalBvimfauuWTf2hQ4ckFXk1FvPeN
M8W6bxbXRXAn5cBQcAg2iSUxwnoJbLD6uc99bmwgS9kiJ/njoCc0mkml6BIN
BkOYw/pYN37jYkJQWjoF+nFjJThWRcl4kgufj3ElzCX+FOYSZgHlaYbmk7Xi
bKQ8on2l5imYxBqAVdRZaW74RpCkdvzKQwDbqvukjBM/4QTOnPfyo3jMcKmm
7nwkJX55nbFSxhSrEGoGVxxaHFCQje+vVBIGKnBminifXWgSoQNyLmdA5LhF
ytR6KgOAEEPJkVKfS0X8+HxNlbHmUZ+DGcuoRD+6XuRU2ZYeR9OzyUwqGiea
p0MOMGSzTobkt+GhzYWnRJv5u81FqFRGH1KOxzCzwOSlVZpLyx55GEaMo2Wa
9VhTdkvlaxDyetFMBLKRB67CT9g5HS4nR0Hlar8Z1iQazlIwih/rr1asmY5U
TMQJ1nib0sItnR1k9jQAFh8uz9DHE/uijdxfldEaHR7Yrb+5pWa/lR4CnRnC
nEmb49QSrc68x5odvcfEnF5iyT/GWsd5553nCTcPeMADlgKD+vt9KzhyMFFO
oh8MGNoAndUrO/nMu5XhcJj25B0zzq11uTNBlp4zs0T+NZMqFArudASFCs5o
zUXJuGBJ29rz1vSBlzqfU76UQ5rWn3nmmWnjgVfVTNuuFbJK+7hQzP0FStwS
LlCCDtDFRRMfxILVvA/ERaJIBGkwJzcSzZ7nsDNf9/rqnOUxKrk3OjgQOk2H
EtwnEmrHI+U3j7z73e9eDlDH3MGkkmpNm7msgUueUkJoa9yrEikUsaGhqgyj
3Tdxi51CG5E68c2Ux9/ncTKCuR9N2kh+VCefHQ7cjOuZa3V3AqyggWHiedVx
o42XiTFZQ8Own75T0Sn7KzHrvUtAQtWGoR9Vn5eRR1j5vGunIMWYFP5cj0YZ
GAYEu8Zr3GO9MKioVMvW9ZkDsi+qjMzzoUDNu1i8G/is+cCdplHazZGI0Bz9
n0Gj6XjmdHYHL6VDcOwi59EqmyYv+iwAZuQDIDEDPN8Yynkt82jn/KOcEdxx
P/tCkplR0zGqo3F4cmHXvo+F2Xl57eCUY6Nr+nbrGTHatIvYk3oWm+ydwrPE
Ih7+8IfryBqj3NLgvf7zCOdGlpBY2qmXkOS0otHUsWFAVGQRp6NnaYkp7cpo
NEqsf9yCaBdnDkWn3olON9C2XnAYMQ4umBCohJC24yq1WYlAiq+rwB7Oa87L
K5tfEvbSoZSaxqY0Di/1zbLJ1uL1Rs8XAAI8tD8lpLI2v6s4ZbH+l3ZEwYbK
RKPBOojYqwp3Z/46MkmHkOWjldKpSqOai52JE39sKYdV4PohXsTISDFy7kWw
r+3AGrrVpotcO9g1q496tciuzQ/1Zs68DWoAJzY7/F8xLpczMBgp5FM7rqZo
qRMHi0GZlaQ3y39VvjFhBtXyVTlARTYZAgRXn4ZrhqD1IE+a82f+tf/4eWbJ
L+T20GH0CGICFB4Wr4m2uH4ztAtNMSgMCH/rjIsYNQXOMWqKLYrZQsoHiKdp
IgruBZbdjjTHdApUa4PFnaFd+s3508ySYkGdNaHSRLuYeh4F7fo6Zzt1Yqmx
6xyYPNf5JfrL/cAwbeDZxtuLgXY78/87R7vx8j7aLRYhv9YJlB49pd2+TOzk
F0PAITfAb0pIEU/zmmuuaXRgNw4tTi8nUqQQ6JHrrj5BkdgxlJbPwVJggVgQ
vopWpVCjsCqFa7f0oAc9KJeWOM6darSTCTT0w1jTPvLF4Q3uD1Hgq2nGpgSl
9XLBdQYMqqnSLfGoeXCSF7FzmnRbqDnNBpXaM8hHBwWCdschHT5EQsCBMoFW
Po8KBisbXRysekiqO4LyQ7SEDjjgVGEEeqJDU83IDLjImlDxsdNx2uVyXYeQ
lWDMwGjAsGsIU0pesy6DyaAy2NhB+UtasUGQKLe2hSufO24fidvRtDmVv0W9
Mk2qS85gRcdXIgmGpeziviMOsJb7dQqAapQrXqGptwI5WZa0I3Fw2pmiU+Ds
O9HwGYXhoS+tBsTVVKhCaawABqBsloKBN94Go8Eoac/QeiFYSTFKREezSiJQ
cPY4UmTsGNdW7U/Z7Ba3PgbmvSafuVyXNAs1FMTA/JsNl+HWfrZOxqkS9f3u
d7/FwMAr2iZIhA9W4LnsY+fdvqPZ5mYxsMcGrujw7kLm0dUe3l1s1q57jfNr
fuN0OlV/Fno4pbRUvQv79pzaKD7XEkUY5s3wcCs77R7wgAcsGAhSaPWoRV0/
a0ELjVXdd7IjGDBpFASyzkIX5LLASRKpRvxxTvUwBgTEN0EF8MTzr7vuOn9e
DO8CHLbQr5cODyvEs1HjoUDayaKNbskme5Ypq7Zt4Wcyxgfp9E9I+mAhac0L
gWZ9XkFca1E6juaNaAgchKSQkqiYHuDPY4SgYpKx4CTiEeUo62FkZQQ58Irk
22tWLi4yckehCLJl89n4Ad3NZWuYFxkztjA2Ba4p+BsXrNFr2FZF/WJ2aNxp
E3fZaKMwYyH25VqdCiEm1KQJDNBmVblTX2IhLIXIozes6vi1N6w0gZjoSvsU
blfaJkysjY2c1tUylnmjcS4q3CRq3tVJi1CNRW18VI6gzL0ykTzwRRjruHVp
GDhCw3ELp1aKNorpap+0aqnKMOkkaz7D51POOhUTji5boe/sVmNErbrjqDAw
msHD9kxOhx8WyKHK1ldXuDapXiJj8xoWRaAppLrFA7ncjAazn1kRQATQ9J8B
ONoMHz80vawVq6XpM9ck3SvkwN/50LKZ1UOTB5vSWnFmqOY7nFJucndpGByY
ArFHj5tNrJDJ5cVzIqsJG60jjFQuZcbKmVOGMckCGUrJgPkZOb7SL97lCDsc
QK5Fx5p8Kk1cXuP5MdNfHp+KCivTn2kYII2nZsSTa7SJwkFgHRmkFNcUisqk
XBPztqJpMDkoiHE9nentaTKs8O4q80ZV49J6GyRS7wqAetkO4CeKffKTnzSP
l5eQR2ZhJ2E/NN3eCzQszzjvdbrGbR79Z1mQsUR+yK2PaxljuJnxJiaF4qNY
9YKNNvTE3Nq4XzzuK4olcfgfnhbfarlc0yRsKFhRVCB6+SodU3vA2nDcRzTK
i5YFxG4getqjgg4xigFGxb0p0p+4l1GFaPgvZ55AwFeXWIRYM4Z+gYXSYeoQ
8CwnOJ9X2WFfHa2Eom02FKxK1jHvQOduIhSeyXMUUeP5sLpWWL4Z9gVozFFn
sW+b2Rfg0Sdet2uGaJXrV6rQWpgykeDWRQZXqbg4eYr80W8Dq5Nh9oY7B/1k
9u0EESpn1sk28/D1Ux4uC2thM6ZuMwmcnGvG9W4JODLQOq5P4d9R5l/iv4To
+ErR2KM3tb6mmgpAg6AwcJF+KSF6nXU3P3Hh5ptvlshi+KFJZ1cf5atQ+L/o
IPrJTlJ4QQtz/I1OqfgdupuL35XKsfHkMFRB9T9yxW57FqDwIn7lVDCv/WNY
1162zM35ehG0eQ1K0VbCfaxeXh+aoix0nd8HnlB8LZ1oS4KSwXQYFmSbksLY
m7BVBz86IfeQslPywLebnlBIGQEiCCYKDKoGso94mUGy0wIANDnmhg7TVgYY
shVZ1um5Mac17gGjPmjar3qa9zXmKsVyDwBFxeNU40x+vhLg7owDXOcv6Ehs
PhdzpETgjAHt9HIVhJfaEslI/8HEdy1HIYIr/I86DKyiGlyjRWJoDFj0UTDU
Eik4n6qVtnifVY7xUVRYB2b1RYWVuqvgeDxZmeaIgVUAWY/+f8HA8Az3nsHA
ImAtAqNx7vnadW2edPYQ8EpsCp4hXVHWpYlkkatSQHioDVrvN61+tzlQeQlP
fKtbj5upM9tc2eHfcRO+Rj2v7ZuSLr4uT/mIssDSnql0aCJrKKgVarfG+YV8
DacLxHpTHPZY/9BmVtpwoiBfHUOPdHVChHRsgxU4+GJl+/btiqPH4IO1DtY5
4NyCHkKw6DhOGZ48znLcnqBahKorrO0JOvlGB1OpwAEIM1y3aT3WemJPpC8g
nJroTsyqvhiYuUnqMFe8Zq0F5unjIFcnVoXQfOJGWvKYK3E7zeHzDoZUyXtb
yT/Xfll6jEsP68h0uVfMOt1lhYgRQg8Rl3VJBCvinUW2WLN87LPjuq/QXky0
UoJFneMVN+ZGDzkWKedalT7V7IgBhGABB4RLf5R9nI+wuSMesI0T5eR2dVJ7
RU3xqJN4cC2jA8v67i4Sq9O2r5xJbP/x89iSUYx/G1PBY/BXGxNVTTYGJDZD
vEALfzdXnG0SFM9wdoTIVUa53tmfd+v32iFtnOAe2qSq9tVbvjbLvDoiUbmZ
8VC3OgLsqgb7jhx9UAl+Tz5IKpWFcB5OGxeqXINt469+9aveTtpD+4Cx+o79
tHbBrSlld4tYmJWveAKJghOJVucWgjur34tTQv6uxN31joOL8kZX33eWCZdP
uf9P5+DONYTLYpuZzGXWaxLhHnLSQwc3WlyTt6uT9Lhex5QrEigdW2fRDY5Y
veWWW5ZY9EuSGjrph+hDcoDv6uFP6AUqiZNQcEFAGAdEJSBVfVlbHGhaPDYB
zOhgCvClU8ese160apA3R8u5Z/7iYBnkdG0Zm3TejEkhuc7HldBxXDpR1ZFY
s1FJbCBXVV3qCi0QAWShylHQtGrTiTxU1EkLVSy7+dGUzeEdj5hvpMa0AaKt
CZdZHJ3COlU7sdIW1wvLUSs6gE8Jr1oTiwlvdepwdIxjCflYblozIpWRAx9w
rpx8FdlVBPuOOL5KOKvzHnRKjRIE6ppPBpa5aeHXIwvZMnxx32IkVO0iBmCK
9PZ5ubweyLZRkCuk7ObXzii7pGPAAcKnPaqZrzKc6o/Arqg3sBPZyp29I/tr
uY828mkFJdbGWodsk9qMnDoU+II60g4bo9uWJw8y20bXMkUHti1AJHQeIWr7
N3rDgDLgeHpN2ZsbWRZSzItofbEI6GYhfzdXpYc+o+vPdnY15FvB52Wr74H0
VGdPlArW9EpuxrlOuW2gXIaOQxDSIlcKtsJfuEIxoKAl8bigJtpRFXhcJIZc
kf71FtpyCZcyj8wHS69++ctfXrriiivSGmE6QQP0dth3q0dACQOjkPh9KL82
wAK8NKul7snuYoEBJ78ZMwFJVThUdRnQARJ6lpahjJkGnvDRFlc/veHHfRVy
HkVy1qqVXYVXfE4RHnZKywqqKKB6dH1BilhXLW7oqPfDScfpakyvwJdjEKBP
uKnKKS4+Md0GDKeddppH7Lk3XKQIa09ycco9pgrxYX6JXGrFNLTQFz8WN3cE
N3nge4tP7S3/rYI5Yl8MCOybQ+C9XrDqddUbVOs4sLLPlPmAewh040nW2mCg
8GiWto23vZI2GB7pqEL8DFVMgaxjvUp5i8sDkYa1W28tDQ8LDWPFfQnCtN2r
OjX3WDfiUJ8aFhc8uJ57aoVN+XKzzmbX/mvltMUtm7FoSF2esH+lbcrBTL9Q
LrSOQN4orWWzrN2CyXGXfrcv0XjUFaHqtIC4y5MG2u0X3YlNDBmLICSy9YP2
UkyheVryd7VUVsdq56YsW+6TQrspcEGCHXqtuWMnotDmDAYd6GV+1MKDH/zg
tBx4rEdXqRyi7AGEgJDon5xBjBP3V7KXijSR0qu9Bej6JlfZTKqmM61HItul
Sy65ZKxOhb3G3WhDmlXvcv3TATM6EA+PmqcBB4ZfOYTAkt/OlOLRASOtcxJD
kLNpp2eKtiWdA8mtz8HNfm2+8RkB72kEUJl4TAEQREVpY9x9Wh9skhafiWTc
y0dCKZhyppX2qX328EKszMAIYO4ULs4VbHwUoApGSdMGsWk8uBeZKjavEeRv
Lf9p9q9IBq/HTOSYk9BNP4aud5ZT+nTEpkyw+BVehV9vvPFGhXfzeuIxMz1e
HabYt7OgL7chHkquJaiYmYZcDU/pBPa27HTjv3S++e5i01VQQDso6/CuktyU
2ZiybKenp/Wwrg+1KlJECGjFl1BoWmmY60QcaGeedQ+8PvuJJcdPGzXhLIgU
nYYg5XZoiiafQIm+OmKa95FwnEhuRLx0qdf3nXM60SISSsLbHuq157Uecmih
l4WKeleUyIerTReQmGIMUBBAsOZ4HDcfjdY5LfG6dLun9Pu0nh+WqgHOOTOy
S1PbkvLMfurH6qAU9jVDAgakZXtOWrfaCTN74IIQrJg1bylZc0Ycz0hkQ3Gr
3U4+fJZuodOqDdC3hqbCMnnGaA0yLRl60tNw9aabblq6+OKL3Uw4wRmlpvjt
HlcypVFpMU1V4HVqK8OL+yhbrOpH/M+ekIpUp35pJkudD7l1Sq9zkV41O+Cd
VNzwPj6uSoWFzBESWoW2SWHrk5Mi5GIJZtV+yXsbvA8oOJ+fFTUIuy4KESnz
N8a8RUKqcSdnT6srIiDwCdmmtTps2vYSHo5h4ZgsEXzYnD68pRBmXP9TMVlr
54CGJkM59mt5T3u374yDGhMT4pp9TOVlTFR+S/vGPURLhLcty5rp+BCI82DJ
AtSMW5U6VOko1o3T+W2wiHZDcs1miBP7y9/ZbqbUqTOd1FQ+clbwIJ47yPuw
E9fr9BweB+Hx+FwlsQQ9FDkWsfJ47q3sd+37jEVGQOQsFCtCq0wLpnsDL5Ce
Tm7C+aRt1q8BH3QKtVmR+XiLzfTLI7SIgzYiVjST/ihmoAJ5uRpyJs/OcTaZ
PJ/Y9VbrTQ2pCsJWpxy+4U0aim8kbe94qOJRVgfzGbGMROZRTIDvfI0cSkc0
eAhaPMo1aataOqCiybkDOqF1o2WwnIM7RL9HrnwtariKyqQ0V0UBhq5ou12B
UUgIAU+Uu2AbGTIdGaN8WJVCAT74k328qWBrJM/t/nPkGy54DSmywGb/56M4
jnfpQpggn2egQYRM4x7fetMPsKuPqQd2WKc4O5XXFPcHqzoNxCLP0PmHXIQ9
zpUKU8rRFPdoq1bckyTeoYkMFFuO55wx95Vi2Yre9jme4kTeFyfC2eJuRWx8
+Dgy8VCnFoQK4qrm9kZ+pSr6Qo/Q/azVqhgNlJ/P/H3g9dXSEtaUH/l5sBTH
0RaYGFFVoUTxqrYuQzSKUm7Ej/L0lNDa4ce9fqlA2jezp2tQMu9xS5hfa/wq
UJGnOqkSWkqkPbK0SSll3ACHlrbIp+kjR9Uem2Xi05Iwy8Rb3NRnbvG/4QT6
lzXQ9w81zpBcsjz1LHcu8Rj6w6N4NDRF32JKt05cvvbaa8fFw/SJfKbGJ6z1
K28xTnorm9hSgawtzmfUL4hFQ+RfOhvKvzQFoBHEUJmhM9YmaI7gSKvyO32e
DCmIFhEH46Zy5PFIs5oaySTgljoXaJMLViNUeejnZLU+xQNG7IGfUmPr1LjT
9U4coEkfd9MKUNhiq51bjY6G4a5hsj3lx2EPP6azSz2F2Of08UQfHRemcrHi
UP7mNcwrjUATGXYIKTpzdbKiHE/gooRKPsvrWuiVY6kk2riVTLFPyIgsehEm
/yMs3oORlNCk426jsxYdTG2f5Qi1ueQG2g2TG3hYJyVMrqYoEoqeQZH63IAL
jSppSF/FW2V69dXji96kFvnr3adxcUnFCsCt/KpUKQiqPMHfh1v0rSI4fBYa
qaOeqoKoqKdykHhP122WKqsQTMq2bvaXBS3uIT8w0hvX0w7aGitPZFUuqcBo
RPZDc/XII0vZRLVLu2ZpC2BT0XidqqMaIpuny3lXIugShUAZmHlxf+bfQ99j
mXZcGndErlyRWUL2jDGxRcZCqdgKQQF6k7H7oYf1zMYfklgzHXO+ddZOAeKe
ZUE/nX24xamPpotFlT8zc5bOB7LMl61tqUDYLvdSycSKFKoZujLydeoKw4SP
Zf5XmyfqsKi2XWrJcaP1JzSFUNgQHfKaU/YnF+D85pWmadQzelQiB+TK2DJW
2o0dD8PRgo2qyE3Xkzpu5jDXC4pcOuc/T3fZYkHjQSGohuDOY4EVTeB9cSz3
QobIDDcBuCMUHfyps7q0Ro3Q8Ha0aThvRHe10N782v+MqVe9/ufeQmaQn4LG
G/mhPEbLuar/Qu6X02qbaBXKni90qS0holFIN60RzkUajd7rwF3bg+VAVX7T
KPqi2oI6Bn1WvRRN2dZbJZJfDzREAb50T0nf1i/JBzdnhj2qfLwvmqltI4pm
ygHGEYXtNHmfxaY5CySXcWkLm6btTLDpPcosmvup7o+C5pqd80xYvGZR7XgF
8TC2WFDrW6rkrTbFUjb/L5kUt4LpGWqDD5PW8MsJOXv44Iqm5F/84he9o9wc
4av6K53CVMaa9eDDzOpyoNLO3DxTaZryz0ObH7K33mn95DIo9KnmwS+79fIz
JVv+5jX/RAp6bnM6POWUU1yGmlBrmSRM3oOT6tsFPF+VGYLy8TK9ehCVLola
NXEHK1wfD7XifWjEZJnodaevCDMMqCVDs4nVpsZPBfTap62XQR26S8KAz+DW
OVdAdBS/BoTnKYPXeAnlXeL6t84+zPQaqDWdgOMhD749kzUVAkaImWdTOJQJ
/Bkuv7o2NbpQ7xPQhJLH65x2sAxtgj9wCdahAuhBB6xrgguMsFPol5YLpWM8
Bx1TzE91r6ILC28iKR10Bb/edNNNweHcUc5H2MiNzbn1AzjMJAPVqgKBmcZt
Pi5bSgQzHzDjvQku6sY70A46n9Jg4jNMQupTtZQv1VdKGn7l//VWiRTyi4VN
/EzcVDqdsUOd9S3PVTPoOvjJ9TH4qfPNoPkcBLWuMbeeX8OzmlCnVCl4dnfk
2RL11LQIfYvZ+NVMP1fOmO/M7KEp5ZdSpyBFDY4vXBlP4OKe4n/VrwFfcQNk
rP+xAdeWFBYFEPmba+Co3BevBuJ8a1Sba8PwtcAzpR8MI1wPN9Wze50tSTyJ
D6aNp93i29d0qBZ6/ZJ5he81Jn+ZdTvms2pBW/lRvC6q5eNei1BUq2OPNooH
QLWIO++5Xjj99NNTsmg6zqXJIVckki2QjwjMEYtc5Sx7OW5NpFyArUp4Gy1B
cfRui5oNEV7rsYChY0k1YzpxgUS5250UiB9ykRaXlG+kXKOcZ5SLxY46vMsD
WH+ferOqfokKTNNU+Xm2m7AYPVVKGQJSlBbYySxpT7zoUCqI26Gq4ECUezBm
wBD4oq5Qm6w23hut5f6oHRAGuggeilelOx2ZjW1TKdt6gwGQhOXk5SbK3eeE
GGlXrq6We+Rxy5tURn6s+oIKMMBeQczuPXRHd7vfFy8V6tbZPMgElUU+/E87
qX0zoAU2SvVOh3S+IaewHnQyj6fvqIIXbVRddMAFyACbCq4qhr+Z5SfRjg6M
99PUrLGNH+rnzea/xNBn+W34aDx0Ix5hpNMmYQ2deotexHlX7fUqkK4jeuoY
gk5jVPE6RcPkafNsRcXiun7NxMr8MhGkQt0nea/lNMghj0tSCkuAfF6fRcYq
Qr4eGePkwlSaJ9NkHBm6RtfzSdom+HT8Gv8bW0FTy6owQjt1RhOnbMZj63Q2
L+gHTdbdhan7C6l+3UjTowkdTh5B1Z+3t/7MOPnjRnDOxaHuSzlU/ZD/3L6U
D48qARDxMb2JO3NS4mrwfUlbhL7yhr9lDuHMbExT/ZgA7RVBJAorZPtZ9jjX
mZ9iYz4PMgC9zltebzHLlNs+a66wn4ptRKz9P4yXJzv2sPFen7yiS7mcS2Fh
ebvK9ETXtK9RNZPEyHQD97dDxhAtcIOGva5Fc6+S14uQVcM+7gTQvp64Ghs2
ZBWShLB4nwbxeQaPQQOuqgcnrVU5UeSPigBRjAHjousZE+1nrVNXo+8LFCHG
Er5NAe9DZaEK9oP5YmowTB4X3bW5NDJwrL3FQ3JIobjBSjZgsMXk+UDtJp15
st0tkPxUOg6bxgWzUI3BPkNu1XEOnJ7zHEtWHUKHkWmXsqeYiWmZXIkOympV
gVqt9sA7cjyZ7zJQmtCDorQnDFI+rjjJmtyoYkwd0qV/0KHqB2GJeE+0HClZ
x68qI1D5SNqOEmuIpgk7CVYpPSseqKicaHlfdQBCKd44igMvZ36iaxFgA2B8
r7cKRhuQZzy/ScmySj2I8Zyaj+kH99Fkkb6hbKrp5dkBdoN0HOYeuHiZpHfG
P3uTLkfGmFq5MQYBHvBEUAA8DVMI3wSW8kjnYoABD/jl9hhiE5mXw95ZKHrB
473pk3D1K7ESTfeMwvnpR8pXKqe4a2w8snLzzTd7o9hxqkCkFntE2+tFLWBu
BB+qdoq5PbjM55UQh8BV5ghw1mWyMKYMAA5pYu4dztx8DsXAwKnQ3oy1thHa
NvRjAltXcgBAfGDQDVl4HNK8PvSa2/MNccacfB2qoBL50kextiZq0jPxtYof
I0qINO3G5ufukh+sdBM+xz2UfRrjtJUHmwvPHnJeIWqDzsr4oU99B3qjV7SX
93V0sQibZ9MH2o9YZRCQCZzFnF9Fa7LX3LTFZU4B2oNr2BpW3Mhv1upeZGre
YyDlf8P6qjiM6YBBeT8X/E11gHd20gW0DqbgLYTCbatikk2q7nvI8aETJ3Uu
NE3VwTeqXhA3dClyGjdBxcNoRbhym0XUDDoDncnaBAldj4sfKoHzXO5fR4u5
JqZLoAP0Vbty+4g6tkHEBgBC/mvaHrWnpCHQfBWiFV9rKTCmLsht1pleqYAv
jH2iN0HbqtZbfoNzuf+d5WkcH1ELusBzRCEqDmwQ8GMAUmnTw332CnUos1p7
BdE3KE5BDKblMYgBwpkh5oNxclEVCLYOUnRiHFcnwk1pDZ36MtqMC0kmvpzv
1BSzLy3YTd1uP9sxFWU8bHzJJZcsEcRQkjlDQu4XIo4sri0HVUCkTbmiKSBC
bBmxqdy9IW/h4MGDydff4wGRk08+uZPZjLQBv7wk1X4RmXMtI8WjyVEbZFec
3Q54DVpIhvHqZT+spZb9OPB6mKjdBsX+BJ4hJlKHoYfup3FRnlam86BGHTrP
LkZOpty6htr5rcxFIIUXLlqH0oEhhO77d4eejH1mqaWek7D9+dGB5oYxSMag
gUH5uDCkYuRxz2c8/xycq2F0QrVrGRUWTbQOooOyEFTf/jHYWSeiZSfcpTel
9pRie2zJeRC3q0xM7Y3rOCxVVYi8rtqt2ALVfNM9tIQI8XG9aae1wtBgWNHK
nKLGMR8M6SghQNUbSPAdeFLNoXKOW1wN1NFdOgYplvKORmS9eIi8TJGqMgZp
H5hOXisl4Y4rxZK5JyuUSFoL0Iw4hoe20w5V71SShxI/lB0TPV6VMxCpywOX
ftLGXJs3FRjVge8KzCk6IppVdASBKhriRxSVgsAHSpEdLM5Ga4FwD6EQnW2l
+iSR1uOWCK8FxULg9g6rIwuaQ1+jZoEDQvh+loDNu2FuZAyqtXOcsWeMeU+R
EO02h/2V5siYcP3ll1/u/nQOVd+u48b5uirS+HynPGP+XareZH8bp92rpTtt
p9c6CRh5p/BKo2iLfR3IdGu++AqTTGU8oCI6aYyhR2KR3WeGV0TvbMiHHWTV
bbiXjYkyvfvqItXPVekDCld0JZ6po8lbLu3l9M6zp/S+3ekdOEbCmrHs2HgR
gCH+5tAzBFp3PbljTyZcYvcjHU4KcchL14m8mjnScKCsWXD0VtBrFT2QI4dg
SzmGrU7n22LlUMe3qqFDxyhqrkUygE1M1+kc0NbKJGZWTCwvKSZQKQwFxpWf
ySMYACZa6IGy4vgM6tTnnauMl2G59s4ThR/ToXAddamdDNr6FxMlaFYs6Sj6
5n3ok8/p4E9UR2YgZ4EMPHy2uxT9inUQYn5FrC+l/Z7chtXmdOhROp9CO+nq
fA6xd19OthZ4682rYm/UR+ytXBw+g6StXa0T+JEl7sVEBAmSoSIDpr0r6r2K
QStrD9SrGJ6cIuVjpBwO1vy2lfOZVDIhkHepDV0ofLvfTnFE0biiKyoXmStK
pDpqqZjwgQJ+pbarZETf+iJt5P2av3U2cuTv7MqLv+MJsryNGOgKdkqz3ly/
zdoHi+/1kaAZjHas+AEAIbVYFk/Rk1xj1oeF6w0Bq4G/lQEX+TuVRO+WOK9K
oftX5mb4uySGDKccXjI+2u793Hwkxt83Ho1GS/Pz8x1XFvAiUbZhyIwjcZ2u
re2v8tbDRmSn80Gmc+qtsFtOE7RsVVOzD1dz3CthBBR2wairDEw4Jq1TsIZR
ypQuRscyMAhKlJeT0rOqmWoQjuhwosXW+86EixhMW+U2H3B9Qr2VaSfVpak6
61tTTshcTpacQRE719XLL6YMnfI6ABMpk2Yy5z+3lWMiGAXlX0XHkn4aUNPu
kEM+KBg3lYeqRaJ5DL95PR8r5jNRPgvOUR1l5QEG/GZ8VZ0WJ89c+43XeuYu
xubqcoYcPnykdchKZTSid665QB+lcw3w5MncRweVMl/Q51Xxt975q5VEeed1
CRWt4qr6rlZXaeNmdojEKuuCfNwXq0NwGGDlWjI6Sn9W6CRtQra/smcOgGET
2oKU40YbmcbYf1WVoL9YZiV/KAElxsfROy1Nig2VPJKJPVUDMyjSB15DBxVK
cvCSwTznuiBHRwUxvey0H45NocwDWr10bsaezFqujBEpVYCK584q5yRyuxdr
TdwuM6USEyAASfO39oggBWxPyvoauaS4HiLLpUKaVCtki6sqTWLkY8Qll5TR
SQQKeN5www3LTX8yyYM6DL8QGbnteS0zfCf1b9RleE8yqeoI8zuXjNg/vu22
21ZQsb5cZWQOFIGgNiiL5VWcW/VhQ7p1E2h+3nc8cyRIoHgGaGHXrl3ZHB3u
naLorHI/8Iy1MVez2rgWDSjiTr+8YzpyPVZHIQctDclZ1R5WoxFrq5HBMDl8
ePP+vw93OsC9E5vJtdZQfS2GavOV+Ju/UdV4liQkKfWNnA8FQWW1f2JPj9XU
8lKwIS2ll2pHC4yhFTEwS8W1lLF90OdJqtuH1BVRV/BVZk+rd4hHy6I5yd+H
mPvTNd5XPQltj6789u5+k47rrtTnyPPKd1b2R+3Ca71JHB9Pv+Aa1aiE57gH
3lM+TnXgI3t6iXzLlwVKMRAj+6h6AdxeOxVoGuMMpdJsFJr34il0NHPWQRrR
bY+lD3TOGZDNB110ou5+cqfdbOAUf5Rjl0FCPJi0eo++ctglOvpBv1AhngkV
w5vaBaZcPNQnmx1DOdCZ71T1FcVPz9yC5rcVmqdf8WhR7q3lJa+j6qc4+ySE
EOVJxSnC41eBn/XWPrE5PKAmdz7TQ+7lhEJ57uoIn+UeCEDrunw2JTUaEyWK
3+fOZl0kFaTQIEZcYRcVaszlyR3+XI/kQdPZZ58NoR02db9LFGZjfhdHL065
fMRHMRNaVvVIen6vcHy+j3v/6QDkI8eG4yXwG4PTOk1Rhc85plT5now1GK05
vi8yM/R4yZaS586zwbFwZsO0bM/MDO+LqPiNqnutwIyyffitVZN49JuCRHnD
YmR4wgtyX7VY2LO2aiRq/R06JYw6Z+5grkqIJpD80a5kkIJSvlDsGI3hceAK
NtVcRIcKxw0JCL7vdCWdMZp2kaeixiif6mZu4WcqwdrGRHHT0eTCMwqK4APy
aOXqOJXCslyDtiJ+TAgjiohRLBrPtX0bume78IPpDup7bMjv0ZfnMfLF40kb
kdu5Tsk23EdBCt7T3h+dpEYXY3F2RcERSYzLaMsuc4uUicjq77FOpLxOG7gP
n0V8PIPn0n7+5jnArC85WXkkkDs8VO+/QTE0XYZ7hp5QfZw/C0WEdpCV1uhU
XITXoBeugf8YPnhUWaJgTInWfQSPBik/T/tgRfA5MJMKTTY7FaQpNTC1iMTv
7BJ5v7RNMxVbLtXnDpTwpNLBVNs1Lpwq+QfsIiwaVivGDJJPpWR3lDByLEHP
GPNopWDQl1wIr/V9xPt84zQwULlVoKTjoBWYUU1IHQLEtEo1zXkEkLLHrTb9
MZorOwy/GD3udRj+B0wv/9461UkXT2ulvkmne3xzOmz5qLEhfwUuq2OxMSWQ
1zmPSAkqoniErxT6dQI2TSdiw9ZIpZjoXHWDdOpYqj7HdiGVBVK0BkcmrYVt
K6vjCsPVG9Pzjkrx/NVXX+3NnxV6Dkuu1lTr9ChTPv3nWX0Bm4Pu4Cnarpyt
Pl5XmWFtBOR35Pi68GCsVIDeoJdaYTOJO603rfY1hXIexzobK04PnBHQrEGF
8mB4moBUGAvVSeKzdI2mYud1blO95TztTlzrrSc6P7LslVQtIh04pEJuWpSM
oQ8dvCQqjwcncV0ubWzP5QT7a8vn62TvWH44+tfrhWNkoWgvbeO5yAo5QFlQ
MLquvVB8Tns/4QHuybUgTFV+GAuYqF60hYajQmFVGSuVPNXObsaLvvEspXDS
VtpOmzAJ3FvHTMfwDHADnjpbuab1vHCa3YdRySkO8fYm1U7b2qF1lFILz/LZ
S0GmIX+mOncHnIu1uQlVRSo42Spi07daCoKzyt9RLpddopGaqHELxaZysnTr
+532O5czZmBPVbllZrVHLRZD03EF/M214IDxYhx1lnQIyXjxN74655BultD9
Fs8l55OvfJ4oTH7rqaee6js+U8b50WOD1BLehVaS1gtXoN4MP01GGvxdc/l6
YZnosh933HFliy0wzscbLEwmkxQt2uspPvidOiEDHNA8kCmU1qsqcQdn2CCf
11W3+aZ2gkE6m1ZnwigskX3XITdvPYliVKqOwYA5LT1QenLZhz62Wjj1LXck
pqXpswrHRzaPBeN1Fj3v86D6aOqcVd2JQClySk3lkccVp5Xv6fDOTOtMjZTe
zlgpPK84u5YelC8EBQBN3odyUFGew33QDhSKz0EZ8marykvr0Po1TpPaH7Qe
tSsXRd46z4Oe45FMFa17WzRB1l4e3ldBEOWraB9PPPt4vRCMQh64YTyLceGz
jC2gRBdgCBxOUTzt5x7RPMX9TlrNjTk5wEeZqNIvqDJTe86q31uoHTkoA5/+
YBbAFH2owzLKC9K+KTwNNiamjL5dHWoXkarIG4qkpIZwDDpYSo77lsLw6B4Q
pdnaxWuP8mpSQzrZOtkfKHVnlfiJpwIHwCVqS72UKvJXhU8lPq9D7sBe5K5D
AbgUqHML2RAebZo74H6mzJA4iGdUTLoDRNocVkLIKtSmcsKKyDDthO8ZAGWW
okCXX3754pTeFZHxxJYuvSuCstBD7wsVvZe0mq3d6z48Ho/zo44d/3+kvcuv
ZceVp7e9z33kO/l+iGTykknxKZGUKFWJJUpMlkiKYkml1pNEt9udRhkNeOCR
Pc//wBMPPGgDCRQ88MijmlUDOfFYnrSNQpcBDqqG9ZJLz5IEOr4V8cVZO+4+
J2/KBJL33vPYO3bEivWL9fqtsh6f2M1+VyKc9jrbgH4TowhaDc8JT6+MR/aV
vPZ6ZC+qBzUPSiJK5tMiH2X+b5MX0GAsajy5PvdjnIyPscgDiEpci7CMdaMQ
J2c9/8UvfrF3oeF7K2HGg6rsy+Yvi87WYWvwPGVlEzvp1Sh8QRWwfU2H0Z0t
qyZjHvuBcOVqetzXVT0/kR7piFEpOXk34xnSwxoUOZ6blrfxQOWALlN9Oflk
7H5pErIVxvqjgBNz/ZFSVCFjYm5Zc76L4LPtuD/PwxqgQneQRu30ydSC+D9a
lIKa1s5ukQWf62LAZFW5pubtvqeaZ6c18v2ee25yi0X0Y6DVBP0VZ0w8D+vM
LmZM3N+qLuTHukwrxdAdSeXX8M398TW1bXb8q+0Rm+akjuWRZITfEaPqF6bX
5eMhZiw/4oAosBw8Ys5+lC3QDFCmzwQaHhldhjjkQnj93ZUrgmP8hd43yKik
mt7jdqOUqn74c/G2+Y6WQRlzKsOW2sUD1pba5XIv27cbsJWhEkyvhFobB/lj
vdxf3a/3PnviWSCwItN8aJrwWYSNmUQxWFDT0iorADwcx1eGZate9ot9MjKD
kt3qDENhUfJZ5Axdi94rx9/b2yP3Bl8Lbfjirw+q+q8pkZt+iue/eQUSDpYI
En9VcpMD1f//eePGDdw4tYfJ0ydFK9xCHLTjrIgQDdZOwHwGbaKIZiRggTL/
wei8Sbnx7cB/NVAA0RIBpPMnFas9cuTOm0KmBQdp+BwZMRdjBzO2bNll9oDT
9arnIyaQn3XFwCmH57JWMzu0DFducvbdhx9+uNlCwGdDNaCKLL8efe+WYqvi
Tdxl4Lxn/x/eQzcgNtavoUYpIfvnf/5nSExiT6NH8kPqoTLfjkc82Or/J3vn
HjMtUSxGiNeoargBR1LDH+xmvovNxZELWefhkGdrfFLn7Z2n/Kr3/9twJKPj
76b72TOMCYzJej83AVTvswDsR53iXEcSlbFIdIy+7vPcWNjKxIM1fJeFQqNJ
rsjcWNvXuHR6sgkSxQKbGm8a/2hmIDhIIRJpURA7gvvwPguOgKGsWWzuw+7z
vKA5si97krGDW6w9uxhVmD04tnTfKv9z/ajPuttvtR3xK/cQNM7n+8a1T489
t1KrtEnNb45qJTvgtXM9UcE4bA4+l1vX5MynehhWFzuj4iO5QCZ3Kdql+LNP
is9aTsrW9LVG4t26IDzcCwByc3bGwKMgWblZdCNojm3Ma3yWVWR1mblyUg5n
S6WvPhobDf7fjeQ/g8B8Z3vy59fudE+qv+faVNXfOxPipCc+y7W5VyVmPUG9
fvLee+/1CmYrh4WC7AzJORpUeZl7nU8qwkDu5LTH71NR4MkgVMBGULaM5Bft
feMf//EfI0TLzJt8g6ZG47NiMuONQcx8DMisBWUIFQTOBQhIZpQzDpu8zjzq
QbT9Ogo9neOobKFyya23pzwGqgLPBdeSGGnEAD07bH1UL8OW1YRro4p9DbWF
ELGdUUV/93d/9+nPf/7zT3/3u999+tvf/nb+9De/+U3ZepxO1ZQsFgvIvmiF
YfGwYQ5cauYA5hcrghrxlGO9OONmrAbiOebIXMbv8kzZuJQbsKHAIswd1Jvj
loTgbOZAhQXUda50lROL69mv0MYPYKWtbkdI0MkuWzbfldw38wdYkmrMNvMY
7vL6SKkIRDAWvsu8sNYugA2udDvK1GGJiZ1xkBHD2+ZnZt7cli8fOzG3YWOn
sQYoJemgWQPNbsbDc98t91IOYa5v71BkQ9e4p2gEagsLxx0W5I/XMwMaBL9/
sRvczhkbGKfJxw3aZL0BAVspXwWJ6YUFTYORW0teuSynmswXxk/LX5lqHUkZ
FzLFwxou6NCytQziz3SiUezDW2sbQYeH4/6QXyMu/GMJuQ7L5tZZ8/kjVjls
bwlu19/zSdf4x2hvGyPG8T27ir6ZbYVjlb6lT7cbWISdkBIze2S4gkWUXXV7
ovzHrQCMCPlWV1JtfEgfr6llzWTui0wOp+EncjAZHPbX7FsP6eZJncGVpCeJ
witaqSteykJ5tDus32uvvdZpBxgCW5StjZrylDu2B2Kdc6FtYk1IlVjnglOX
7WFPYwMlLRIctHQH4Zg9OsWqzPXKPZMn6YlQlcBDyz+OrW8dwD7YQOZQhUY/
UCeoElSWhXioYGg8f/WrXwVqzJ/+y7/8S9mi/P1P//RPATGcU/g+Y2QZ2Uc8
c3naBB9PBoBbLJi9SSy5zcktibUqwzRvxsmzMMesE1DE3mONjDeilhMlwn5r
olJ/Xwqdf1bcKAOZ2ZXl+cf2tnqQmDup38p+rTWvV3poeWRlzKHhFQdSTTZ9
JhJnUL58lRMhUseMIUH6n/Wveh5nIyAtJgei5G3HYG6U3ZJNukFy5Bznekhx
c5M33u4n+mEmg0bjyO/ZnPucSUi8nbHYmEiF9HSCBitLsnAFjYMOGq0BSA0R
HHY/kv8qhvDexd5g3KorzSE3Eo/K67iNK+XDs52mIoeIbR4psZLpaVbbS/6L
4jaPycjDSPWwCzQkJGbpipDPjXPQphdUEtQmE5u4NCqUlJCZnVwpd+MxZS0c
4wh4kph59j7TYKtiJOPFF19ENevxv9PUflXs9TVS+bvKf7++9YP4/+FJQok7
IkBN8tm2z+1kZOe29+hw0VxS0RxdyKifq9y63/jGN4I74f33319Mk6x0I2wE
rQQdBh+IKdEozoiBsDKto8tpHx1D0V7UdlFDaxGJ3HfMIrmbfI09gzZHuHTK
GMnPDeVyQo2IkWt3yzC0NZ577rlOKDxaVkVeIyh8GFJ82CvauTTOr5qY0pHi
8RiDbLtm77PvMz2t9C8ZISzq5PvoH16TtJk9bwXmT3/604oQ86e//vWvyy4E
JspvEevkwzhRmAAmiWVkNyxMjYst2Z+FkKxu9DyZhspIkflsQ/MTpcrTcBNm
lcW0wIunBqvUVgPNwl3g4tudhnes2EXLmRIKDkgxpmfXoLJeJ8DAiEP2PNlu
fSSPHAPOmTpbrxNmkI17OScyBiacVeUMYWtETYjcDlnUkN4wUyAx56adMndy
yevW5FoSi6S62EpRgBX8eGyW1uokloPb8qhMp/X+ZoaaVcstPcVlsMhZ9twG
UNiCxfECLGTc31oYthErH9TMkBQQZdGgYgobviCPqXO8Xn7W8uMXe/b0GG/O
pbuo5dbZvY/BxhtMlUhh5Y9IwfRnpMglyFYT6XNRLNgat7YtjytaPBZIAV6b
a8JW40Spr5bdkmMOJgXzWZQIj6NVVE7Mt+m5xoJONc6amqp/2v4JJItw8nsV
NP6rChr/S5G3/6kMXp9VWCatlXtcirN3+cfvmy08LAl3puvx0Zdeeqn7ifib
uXKukY/cV0pvDWvFZ1G8GSOQqYwRyJb+qLuVDmhWECR+5ZVXTgEE13n99dd7
vouOKBQti2HX0bE/1BrBw1AN3M0KgtPsDWRActcUqI5Q2UF4TQ97uRanHeao
gFtKQCoP0jqbxEWQ/bH1eaZzNH/T1HcOsiAKP40MoMfQb2xy9BQuqZ/97Gdg
RQBEAYryIL/85S/L2foXv/jFp//wD/8QuhXdyb2ANh6MB8y2xYVmW3CiBMQt
ItM1xfjlhTDrSqIG9Co60sM4eGLjRhYaJcKmYqJMZ0fPns22qHTBr+5FC67I
9mW2LNoFWxnZmIK05pBCXXo9sz9zzNq4wS5nlFVXObu0JSlW5/UTCzKaETBY
jOybYgfpC0RYfCykTe4xfsrlxzVNOK2HXFRBeE47YkQHQRITnomXmUmeFBnK
jbLRavKusmEzYEjYoUe3AUZ8TreBgIEM2Z/AtoZ8r8UZp3mbonQYY7euugU6
p1rkFhViGu7ttRfjc5nVeReHcWbuFkxbg5GuzeQGuBtqGHu30TxaBHHgQML6
mL0XFMtYeI9Hxg7Lx9KhiHDa83d26ea6AqSS99hf5m47LPYlZbCsC/t2WoSd
D/g96rWuXw+F3kwEkKNHoxfosfmPZSIg3wzUyHlKqNdpC0oLyKivPRf5n+Te
m8fJyDK/DpORaZ1Uo7yGp25XrI0JzpBxRmfU3FCD8ChDc43R8FwOuMbwyU4o
mQmAblSDXQXH5i67OCRaY+qGGsdBecFC5ehNC25PrdiR9JGj3raRIw8nawZY
VrxyHjwdjiKUo/7mTHIsNSIHUdnHrIO1VsoUHT7D7xa1oNLkYsOtADDQ6rWB
RkDGDGQUa4MYB+9xqkTVcW3UGWNhaVUMPPm8RY9roSUsS7a2x6xyJtOSPt00
uaWquhaEACnQFPI/cVM2O4vGdwzInMnaqADy2KkKNJ6MQaBNkAyZek0Us6cw
s2tv+2xqNNdUgEYxNeZg3nxoEffWkjLuPeY12fsJLWwxF5ONQlnwtf/xokNo
xpCWnd3zD7KbStYcKTvZana55yAi8YIuLz/D09vFwO3mKa1FDnvJay445lDD
59mmbFeWD8UlgPCeYzYekwEkRyz5Pp9R3zYAqe2Rzve0J/+ZFSeE1PwUgt41
0anVXrTXHus13rtC3rljM8MwQzX3qWKqLUiVMrpBSE1yPX8KQUQihs8t6MY4
V751iIKejCXhOfiH2mIZLS/66KOPAgr16+ZcVyWOs6MJVIapRvxgOSnG2sLH
HfrXo9Dffvvtm1vjY+GxencBHx1Vkq0SIFT0YATGj1bgo1ohnw2YgY45p4g2
UFskBtj0Rn5WFohRWniT43IZQrKf8IzeqSljCMVs7Ce73zJGaKAZk24pAN34
p37t3CBsrU9Crly20J9Wq2II3V4ZZ4bNZm3VHumVDeWo53E3PurAVPNipS3m
DKoSkPnQiEZmys/gkdP4eRD0MScVKyCRMjwinnt/+tOfZgABPmbQY8YmKeJP
whQnSyYGQLJswYLmDiDnEzeFTOStwWTMRtbPmXrfBCiPUDwAAwUdmXm0GjfK
5W+sDEcvcICHOCOAfK07V5gFkAj1aDxSGlTDa4gtoqSHnodi1hnoaIFkf5X0
RLnxyRgmH31V9i9kbKhkVgyENXbLRCgtuU5NR0sONbOFpB7G/TuzVtPl3qYR
sTcVzwYvFkcYUmTRqPmtDNb3xzy53UYYYSswdsuaWUQ+ow0CFNSwN7bL1d7r
V78agiKMcPLILUfylqdzYHNadRS5sEARZJLNbjcJW9gU5Iic31ri8dJqA4Mx
Mm5PFpk2dKdYnmEKbetmPKLHwgAZSSsyfPBdy2pYkUa9NVVG4AdiZvgOioh/
EO6wGrk3U86XlasCtGwkBLXldxlYUTvo5wwgRe0QhKixh8MTmOxRYWzi733v
exH/uLDixvpGRY1/W99aSZuKmmYcZZGi1cInC3LResvPhiGCGA1tUQLqZIHP
xSWNly9EhyCESf1rGR5ae1IantWHNSIJ37OLBN+z+AEBYtH0XTH5qAKZDMaO
OyMHxlrTbpGEpeA1nzcxLtdu8kHCUj5oCb/Eqc2JFSVhRk3Zm+xLa0SlvuAB
2A0o5EzpPyJJTg8yC1QyLCS3+YICLUizBVEamoQpApbMvDNdCsThNY6cnnfY
pYyf8THJtqntuHI91I1dCXRrAY4mdUp3ajCX9WCoFjIwZIYLYCIvzCmbE9lj
g6FaURh8zuCthSk8HtfgemXjlUfB9XtfbDTuI28y30Pdo74tTwa0kUnbPKKu
WdMimwfxaG/HbmMYJg4xvCF6rokStwJhLOuzP3cmIDVpi88yyzyGBB4yHTHr
FuKyhZAGjVUZC9dQRs+RfgOZCTPzLLqHa7Kq6CqLMlZCkGUqqcWN0uRspMyx
F57uDQARbExFpoNp4qPZRkl1Ox1gGKIOzH0Ao63Co2inQCkROFNsaRPrTX5C
asz/YypY1ZanWIMlm/j1QpzV9gXSW8VATYK61OPoOtw0VEyk1SPfzsbVQLnQ
EWakzMhH77Ipagegox7K0uvG1aIhCFbVU5/SHotTTs5jN6IIvrAFZMpAXiR2
srEBiU1sVTxlX/va1+IBvv71r99odsZtFgWafia9IMydBBkLV9cSYVZyrWrw
vKxfXKJ6y17O1Kdho6CpxyQkZIPoBEPNFSyWWPJ5ZAEFZP4gWyKjy63WE5s1
4hpCfnai7mHemJuvnhky/ZNLEOPnq5KycUY1e19CNnQmf7M6Y1uKNeKNVKkt
toCbPN2YdUYHxmidN53rkCJ/r72/eMKwYyqycARnIriDdZBjS0WeAhiUAWGs
QTAibNdY5A19po8F1fr3f//3gSYDqgSmzJR3NGSh0AN9Z5EH0GtoRy6DBbI8
G2tjE2ddXjwt6o/tq8tLbe+WcEEAQn5noUAhuchYWBbAUj8en8XDZWQnR/5u
Oau1xO1qaGbTZtHaaHlJ+M39AiEyoXirKWoMUpcWWUWsDNpnLbbebJU5eoRd
OdU5l8UYnV1Sh8iqVIzQORhaXgqTzlhpdnxmdg31v3Wv1kTw91qOFguQcYRr
edQb/c42nuD1NYfX1knwRCwgO06nVrJUQsTZNRlM2MQoiLOCCZ9rScpTNOFK
VssmdDSf7tZz663Nk3jSr+ESYu/n+wzsCrbDmjHzVzUbLsf083hG4DM9k46x
bK7UtLaiwabXVzk7xnAApyJbaKMVGJDcfyQp2VWCfFUEdsyDN2jCXkI9SNZh
ohcPiWigEDnMCieydBfdfvLqq6/GvQqM9Kkvr0dhxvwfylUyhkQWVq7m+/KX
v8zC3erOr5cED2g8es10zkXSkUp8BdnIk6RNx4DZkRk4DEBk4ADUZVXXVjy7
k+vJMI+YFE0HIkdIgo4tW9OyRY2LMuHIvcgxcnxY+505Plrtd0WOo0AObjv4
9aLjTQGNzPZtyy+emiWKlsGAxsWYHDYMk4YE8eB8lcEj+vbeKupuqiTdBz3F
tAWEKz3vlcAOrBR+orY886JgycpdwQswYo4ErcvxEZJ6gQ00HGY0U4MeN6U0
JfHG5B83i0QWVo/AerrYlC2fMiwAnsTSOGRfwiaUL3+jkNkbbHImL/c/Q3QA
gowZOoy0UHAWVkPvaudi5TNoaPeYXW9YahQHiwIEo1QQ3x//+MftuV5emCOI
HqLPYjL+HGrXDMFpZUjf3pIAFpaWTi5e5xlkJuF13kf8LAZj5U3IYu5zEjfz
ydbRpxu10jRWebSH4BGi3I4252sZbvYkvnaUQxA5rSCU7bg2VTPkc90MaQl6
fXpEhmyGGLLmMxk9EPh7QQ+ehefQASCRj3F4NA/i18QyNARiWr5f7dNL8djs
NROVBVEj7xp4TEU59M9bt8KV7vFGsg38WtmuhZI7VTRn18wfZWOt8YLkNCRO
MwxD27L6vHBufCacVOA87+O0B9NzjwKjJug2dFlmA2F4zBCPy9DRPASOM4Aw
njJrMxcvwMukuSjPPhv1GdoYQMJfl6cKx9cf74CTCJrgrilTcKt/9/1/DW7x
8lrsWSghagMSjQYcPynpW0tHZ29I0SF3llByD16uLsxULwJbfA+76E/+5E+6
Z4sQg54tToboSKEEbYxu4lB6DzQiQgnZBtxqKJw8DJKA40w12zmAGOXWrXU9
tKfVU2xrfro9gSATeu0aaQAXIULTGxPmKfwpN9JaBfkKkITRUVCkjKngSNlz
ROV5HW3HNbgmmlfCAkv927Y9bkYIu5fF0r3FjDAFNjTEp6J7y/KIXBFlhhiK
mcfj0QEik15YSFt7AR4oZL13qQHx3ChZDGuDJfwOXsmRKpEeWgG55lbIALej
K3S1q57vRohK0FgwM6wri2GDD+CHdSe8bggeXBTSWSHbBPEaq2SIy4xBri/R
AeNhjNYSMq3l9argnlx4tnIql9kPxoX0auW+Y7kpNt9HsyGgNm5KGKL1MW/T
XB7o05JD7eKBAec8dX6OrSzWlM/XPN/zq/DBx+VjhgK7dgK+1CFEA2eAjhiC
uz+oRnDWX1g0fh6j7kbtC6TMleiJ2FGlIjHibpq7qb+WOmf6KcyPih+vr1KL
iB/JXRH7w8WWsRx9bI4Ov8usOcZMkH9eQ6BZVX2bXB+DhL+ZHnCDyD0/M0UX
hQXwK8mozRK08HuNeERRug04iXz8H+Xh/nN5zAwl0yGerY+L2Fi+HpH2lgYc
cRTK88q/G1twCeeXnE5jUJql126g+ybqMAMMsWbmXXBpjUcW4GJKOeJjAP0e
nVyh4tDwqG0ACRuF9UOX4VDRs4VyYeMDLuglc4kk197HTjKEjTK4kGcwpLId
xFa4EjM2kCPGpkEK1ZKMyNLgxj04R3TokXhAKf6lPZC1WqKIHCYGezj1o814
YH0qQ1V6jbkfjNCSkQU3GP+wW9CbHIO4O9tS0lJEoSzJuZiKk97UR/cWUmM7
Z6Scna17y3TIXGcrCHI71KyNg3hg4QFEwSVg0jamAhNQvlNZee+Lj4yowm3k
Q0QAzXRiM/Mehzg2Wzm8VVD57xfGiZqRVWIFkRWj7xolgApyZTEjoOHU684C
UPiMfCnc2mxoHHim0Nta0+RT9AtDzI2FxpiJUXkAaM2/ZQ6h7ngt6EwobjfZ
xr0w+rRiTlD9JmppcWhtaJXYDIjX7oIsOxO6hBb2nDFyu8fpL+F7thf0cK1P
DSFthMstu+DcKapGY/Lo8si/Nmd/rnVeVKUcxCxaLxwsKlBnHfeaBbtMGB6p
PFdEwV9d0JZkH7hZn7lvnYvDKd2/Ub65pc4YKBmpSlAh3EOQYfK4Bt4rLIDM
BiapuuTpTH4LxdcgxwGVIgQ4rCYMX9c7GVEO/rp85E6iG2/fjGA7E1NufKM7
vr4ZBgyeul283TmyhkLHC5S7cRA0QpVkQOGQIDliBhSEhO/scn7t4ToJQWfO
WAve4ydCkx1elj6jsqR3lysUvTwSnYx8ZyYwt3L1Fo8/DLJynjM5+8qr8Hse
9zNVJl/BqupVh+WTzAffQ8YQeBjXKp5c7q56lAPzw7hyN2QUkjZJK0yaKm3m
cby/VqZe8KSF3A8zmMR7BUnKewVHpouBPYTteY/TNWqfe7NJbdfVKMqah+j5
Rf8hPV/IDLLD5h09XzyHPYVS76xeuiDjCEpZ+OV3M5a5HhCVmVFQ2s1oEVs2
YRxeiClh+zEUdCnYgBhySy7BJYuoXUgsvtlWQbKQPiSUlWUU+rkYLbNsFjJw
w64HXhiV0RE+Y98itAPXYHe1SrjGuHc9pE3/eU7GyJ2e98EK3heTW3V6ob1s
3GPNiuH7TGquF5ZnrZknSOPnO6S0vlunDBV2aTZUdPXcC6SMyV0eITOk+Jxo
IT5nZmGGE+6L6znY5QqUmNQ2ht5b4VbUCM+VWqJMbw16X44Z5ilk2jDpSyyR
AP00llw8RXWS+Z/sd9qKm6dqej7T0+Y0ViQP1cmlp9jTnfQmZgRImWENHAF1
TrxiieRiVuVnIC8yHxHzy9XDRd5WT+t6u4LIf1nfIq0LYyUF3Q/C7kBg33zz
zRtl4iuwXMBnFm8hb9n/k0MJZQ034VX943hoGfUQGZRlrqXNAGJ5lADCZeUv
0yq5h0qTyKC7fv06WQlxDd1cHM6ZcN1cKJVM7izbqfz9iJmZLbnEROL2lNQV
9/7+978fIJsE5iDCgfePtI2xZjwaBqb6EIOIzzH57Fx+6uuqu5epfSh2oXQi
7ADp8m2HgJbidxxIHOHVzSsF7KBHja0fjvAR4DEDHsUwAT5QxUAJxomBDdQ/
Q7ChDlujrE7tYvfgqTZHVu3a3FSXF5POrtByyi260MOk9s6YH8XKcLZYQBbK
ZsV2ycuNM9DN6PAUR6lgfamHWZgcNh8yxwKxiXg6gBgZYMjFOLnYIkI57O4h
HDFEXHl4zirG0hm5BZE8CSjBazwdCMJt2A4au+xn9rp72c4JiJwpfak8tSVW
fX2BJGhDk11HJMnN26UY8AxsKC+7yfRjomkZD8+5yygRWYeU4IVRYiIAn71X
FMlbnnsEMQrRoUs93Y5bODQBRB+TR7pI3YKr9FzvGZuD7mavB3CYUzxteucB
Yi7VXfZG7+3KNfiOPME8pe2RPEGjG3dxoEgsa+2ETVb5nZ+sJo/FI4HvnMyl
I81U1CZwZuITEc572DeKkAt5U6DJtn/Ucf98nv0WcxdNFs1Kl2iySOGqhkeQ
pnTD44033jj59NNPm5VzAS9aRG12cdI2S7bqvadDbkhdBgeRCZpP83FhhRVl
K4+w4omIGc7VIvfg7JpqC6VnA9YoGWW43NOor3YhOpb9bnN6tBhnYvSzxCjW
vFu9OFaeICGpK2pgAPifgm21M8ylNUavOHbwVR4LLYcCbAdHo4Y8bUOVRfGw
Pnw0Ayca5LrM7swjlK+hsHhYW3paKTfWui8i8IcjqASkzEBKFJaX0zzowgfw
L8nRyHbLvXrKXq+o8typVktIt3a78VDWxp4X2X6y6SP6l+HaTwN9zaNZsZer
mRiGfbI5KrDOXKtRkNSAyqXu+uLyfIylRX2z+fGocWuGw04oa1MR5b85FXDO
Z3GW0dRb9BOoLqpIC6zkMRqkDslk1Jwk5IvTAmfG7MXONdERa+l8zF7uwzci
i416JLYe3V5mEo71j5ZVIKp8BhFt9VULVGEXZhfgmAec7RKeiTnaZZuIRPtQ
JcVPM6owXN4W4JjCjCh6DcvUbdjR0/lu2SEvxuHZRfaviboIPjV33uw5vvpc
xLiZUCSeSZfzTDoUG6v68Lpm1qhSmHgXQneXpgqLiBpB86IaAZTcnazlBc/o
q3JyxeNjyp/44CFYtYMfntrqhichB4ZQAISR2qzF4BukLFpof/1ukFKD8SRH
IZGvv/56RZPPcUGKGntb+zW3DwJj9zZ9rMRK+B5/w5SoqZYhRTW9BikWsN+j
u6va4s9G+AbDIdf72tLTcywI8vuiimuVmVTQN88//3zmTNgEd/SDPYxqab52
GPYbqgE9jyAjSYgFQ2R2kSYhpamxsuywyT/US4rttc2BEmXKYxihw/aSucMy
eBNSTd9aREseznjSDRRO+mZO5dfN4pXsx6pqztVmgtdSOrTyY4u+T0wFEs2m
4jv6v9CQnLa0sfTfZYwRX/gbTd2CAdVN8ETvHoCcMSOoCttDcZjzOJEMmI4z
zB6zBp4wRBabzzJ7bFpmXHDpmcP1HPNIf8NgS05j8vyOGBhGY4lAHVCGm/AT
UcCmQcm0ZMeZkUzf6fmUNiw1Z4cpXCNMMB1wbAC7C3gYEvs5O8YEnEzIq7mt
RMtZgVZHSrMjbHQQjvnC2YzhmdC77G9Bx6m7V9Dhe7XykeryizFOwdDYF/fT
aDBJtzZvpYb+fMxZjt9bYZ8Itcv1IwGsTHF01JkRuHL4soM805R5aNXtjUB+
DpfYSZ+BkWrFVFFWR8eY7Wc9TnI5oux8Ht9Mbp6W04flV0GyjTjx3YgBMVVH
8ScTrwnR+2nVEBGjc/6HuP1UO3tselNv/vtaQp2c+BWxeQCiPMonX/rSlyrW
/KuwXJiFsWFoZsQ1Zj3mqFNUD3whA7ljZMYa1VPGGn7nuX5fzxg/33333cUB
SYJsVgj5Afcy4HCy5yfufF4bqbskYckF9CbC5Zxqo1LNAJ6jbf0DnTEsW2VC
KF8BHNCq0tkzPLQvU5rAZg60ubDYiTyhX7P3KLJW7JY5KvyOQtRWCuar2fL4
wmwZoUankpFxIIb3/RxzJvl6XlMrsFG9dc8DN28sek9ZNY0+k8NWhiImwBQD
62cYC6oZqME4YMJMB2210b1PGfA3UvEKY7zOmJkKezmJN/wE2mT45hls6s00
MkYW7kc/+lHrHrPpEFMrILavode2ee7XT8HQmDGVa7IZP9DDvTkpoO+ZMwTJ
s68uc2TP9nvq/jH5eMCgqda5vHxmHELjaYjoVsu8xJk013OiAm6MXgyyVHVf
1rEuvGb01H309F0hKOeL7oIgvm/VNdczGsv7tkQTflIjpLKoNGk7v+jRxeko
93JovXzK9EajrzLHc60qgtn3ld7+na9xGzkoeUpTXuSql044p9KKQTl7bHSn
WbnGdVEtfAcMyp3dcgbyyNHSygSm2mPlQodHVpRqEqRYB7+fDyfl0vJpcf4r
K860jEGrLQprcJ/tUB7wk2Jv1QSyy+FjIwMa6B5psTKZ4jLojVvrh7HMpDFz
DZZw7GE8IlLubJgRaVTfZ6F0yaFYT1s6o210zu88k6hkD2A0nRoIVNpHDbY2
Bzxv3k0ZhsZUa56FXcpBA20rvYz8sIyzZcPMra9g8kaUqSZn9sHYSVzeGhgL
JxU9FPuukvv12P7DHZDMqjXhKYMSxgLXA7AkPWVXurRSg7Rd3pT1w4uGWCOF
in42xg+QrBXogKf87TRtabyf6N5rXIgSpmcSLgmk2YYoepOYte94TgAKEES7
sLwW0Uv/jXgi5AKSyrYDUuBRyto9t6i0GMMZZSqqefPve0MlFIDMERIp5joA
vbhGcxAUudrXamAy7Y/dZndBkUnK5gDYflI/nBEcD8+6kBRuMYFHQ1KN5uTH
35e8nM0gnWGmg+3DoX0pZ+KQBMs51ZTPcc/MEGI2F3MYXPJ0Cr3Qe87bVihB
UGb8nmtN7l/8xV/MzLad8vT9sCU8U7Co7HrOUIYR0Ns1yeO1jkSG5VngHNjJ
fjgGy8KZu8yCYBXZKjwHdthWmevF8hyEjfsZSvZ3HTzavn5erZdDHUXWgwTs
6ooX7q2MRQdikQ24Wq5ZpAMghuVOd/70T/+0wlGlsmdQmRdln4HQslOqQ6yy
2zJm7YyMRrtI8UQjDYp78MdV4+H8wvuBrPF1DgyWMoPjFTQfjcugOc8CSJnh
eM1MZKjw3jfmk0bm9NCpCFUePhEwpkGycwGSKckp2imuMwcUPdxtIx8TaUSq
WaicRW+i81ilj4WzniXwtQ5E0lcaYBGM+Js9yar5WYnA2K8jILGL5OfKrbik
cdUZh1pEOhg/wJFBlCWRfRhgsJRExjR+J4ZlqaOfX+P0MtjX8p4j7bl2Gzgf
n2MeuR7X4m/mkrExZsovD1rTSVVaZ0IpLx/dBYGaFTAH0dYma+KpumY+CInR
0SXysNR8Vm72sXpG0rncHMFaqtz8cTzd54i5YToZI0VCIz3ZaeGRSmeFjgqm
g51w1gRnoz7cSzfUXayg2gD6kb3JaeYyZ58NQ+Kz6JVs/EixjgRGQKf609jr
CAKzNYJOIhCPvidBCFHdEa/2Prn2vWRTgz88KgcFjlwsB/f11Gpygf5BU8P4
3lk8cm+88UY8Py4uA385DmTTNrlgsj+V+5Xfq0fuoJddNiOotrw8Fy+zYGvZ
5gUo7ltxxn21gs+/if8fkqP2s/K2nRkpn2mlMzW74MaNGzHRvBelIfHeffEe
gSn7tmYWlUzRNQZHWvCxesqfiCmTatGS+gxFKqsMRYiIofh7cNe1gMmFrqQ1
/9lFxnTZJbwX3VqAo5diTpHCDEUS4Oqxyx1ZdkXHoMsx6deNNpaaZlsOlgSu
BcAr5khK62gU11rGgh5d+OfGMC3X0hY36V4YXav8X00qmF7sScPmeOkd4zVw
B++ZlUW2A7dhCxKiJ9bltavvv9vR0yszJ7NrVaB41MBQk59bwVBNp7gWEEOw
hiUDTqQXt8CF18w6HntqAUMM3TxpnXU8JlPGY2CqAmEsvd0oy/QfNhTiadAd
rECxbOPlgwGFWD1XKVW1z/xRLuHCtX9ztCZ531TQznYmAAkMbBPkLnfnMS0a
EGKn6ovhJGwHena5jGaZMSYDkaXSOeqjbyIn+7jtPC7xZHrgzpoOremjh1Jv
d96+iT55DYDGvLZdTM58h9tZ2pXBBzEtUxLOtaI87K3Azww8mYg8vOB/+Zd/
OddIP3UGr4ayZwsgunyJZUCToQJkOGJJkC2mQjJOp6MBwiIklOtuxuw2xm6F
PCm7HkPHuhtUCyKCyHiuOAVAm+wnLn/Vhst8JCvdrMkkAmi+OIwbOrXAud8y
EwJfMGdut5/x+ZczPB0AT/9PmQ3LdaptdHhjaj3ZkduygLc4tlVk+kq48Zig
XFqfWVpygU4+zCEwOU2GCc7QxL3suLWL85XrjtT7Z/XbjXuCmWQM9kTi+0Vo
DxhkxaZn4lnsfm4UCX2IAlvrSJxzAMkb5DlHy3VI2Ymx4ZsjOdBcb9mMa3oj
Oe6HHZNOO+c2GYumqt6+0avqWSOT9u2gPpIHgEe7EhLEIj6LU4yf/M3rzI3J
f1ZM8z2uzb2YFzNRXFc2DhpaahrW0Upe5i67lUwj4VoyTtonz/L8XEkJXpJZ
IHYBUOXvMnsQiB0t+nVpHwU1erlAUT5gEBDNV8Exq2NQRtgZDPOjjz7atJIr
JMvjPE9TVrGRCxx0C6lJXTVgDxZhkcAcVuzqQk5VoDbT4nfpH0dXXeXVomb4
fK/i5HNcnusxz2BUOxlP4TSaXusK0uN+xiOr5z0CjpGfvL8cM38jB64ze8IU
YMa6K6HapNB8+ufnHhyaKhBdvFsqXAai5vp4uJNx2P7GKBpyaeNz9rR47Xlo
BYFsg1GuHc1GiyqbObxMX4zdy27THuJqjdwhfvI3pzi0naicu9nnnLh9/jhm
lydghaUkZibQIvrjsnue13ha7QY5ooU+f7ZyzwpDF/rQdEWNKSFf//rXSSm4
FPhwlHvcU94JIuGZq/3ojyP5YKrJbvaj5G9en17K4LSakR3uOXYFq1J+3kL/
1Z4xb4bNRDTIUspcmz8Sv4BguQrGpOLMorSGTlbVjOhkilVuJbYWjdlFfJMl
XWe1tQHswtboouxz/IxXYw5YFHYr682z3u2ZkY/ahgyEeHDhO3C34MslNf3a
tWshB0g+2hTNi82tF8toZtM0U1Vwm+yhm6p2e2TBKMVJmR3ENeVJYp9kuoGc
i7CWHtfQaEZXl8cQkFD28qDmbn1sYoCB99ngusi1g1lOtlLl1OU49ngPqrEd
ACRPj5JTCj4M2Zxm7mG6AUPlc2w7KXFMe+D1CkcFuspSjjTJkmByHfscyxDN
0tpNhkXMUMSzZiiq1bAXFwwqGg3SX5g21vKU65LNsXp/1mUjH+2zc9YGKtyU
iTIwxOQbjJeTQH8PMtDa4cUEy03QCld6rgd7DX3FT1OSrb/fFQjKqX8sqIF8
3YKZAgP05xSEZYtAMO6ckJ0tI3WwXRZWUCn261kTFfI8sueYlxYY74wBIlLr
E9ByOy7Gs4hGnEAHNMrcteU75UlnDmkz+2x6JYxrjSQL39EQdlGyh6k4jUiB
42iazN2cy3/00rHq2UvHk/A5tDIzYceD7KXL7DZSg7TGmy1X4WCBSuX9jEoe
d/LRf8hVCFSaAaXWvxiTpzvscleyqZaI2sjydnstrKYXEzClDLvD+BB6hiUB
xaAMr3B0XwSYeOCzGgzWoTYI0IUnGlnruYZGspdnNPI8eA+uvDLnKIHzi+xR
uVk0YPk+uv5yINFRSDjX576gEZIbBcw0I3uym4TwIpApPiaTY/pAwENiIbVJ
XI7HsPMNJhebF2UBaHtoyQCUjotVd23y/pxq2OGL8STMXu6nyoxKTWDTsl24
Y/E8Ct8SSf5GWdvt2J5zPIINr0x6ly17rUpXzmB3JbuBXQI4aOG04v6DwL1L
YYyJO/yUkUZmgxxMKkM84DqHYelcjktqDPGTx5TeiKmxqpujA7MOnsg0YYpf
xprqlrva3W4ZazhWscq5Pl7sSTUyU126w4WqbOpyqnHO6/F5ySqNGGkMWQ+E
wnIKZTdBethbiACiwT0Zg5Wjo4dH4mqWheUBSpgPlrnBThOr9zoPg7yqZpfk
aFSGHXBe1g/gSUOPebKZNuPiOsw9ULrHIOrOvbNCj945c+OYP+6nN47nzMqa
Z0CedGzbOHaEHJ6P41zRd2VuggO37LDp8z0RVuopzqgsCsoPRYicM3lGJ1Xp
dgNhQQyXZXrPXS66EX2YCDYG+y276DINDgpY+oI19Gm+udRU9HyMJxeo5QVo
6d22ybytiRM2Un3t35bxdPvm3BaJAI4b4Z6rr33a/Hfx3wsLE4mvc5lsIgXu
sIas3WuvvXYjGljEew8E0P3gBz84c3BlhR+zxm6wI2qXevkHmNU1TMoNm7Uy
78GH19TCuYXIM9vmS3Kt8p0rrSIJieeyCEcjaOpU5DyRdegsEJw5ut9gMwWD
YO3mb4Y8tjjglM4OYEciECj4HZhUkXSTI0RTjTBcXNRWMCS5MpF9NpU0B1AG
1OyEZ/dikdhgK5jc2BdMsmOY0TL2gN3t2Y+N4D8e1RUUy/TE8X4Bh7n3oZyB
pnnLzn8phoFOQ+6sZkW/cViRZYfbgjkFf474woaBTw8saNDkrZGpymJam3Gh
t23ZOeDQpvUX0OSx/JKf/G2mtlZ+i4cZBR5Qqa7h4UJ5NgU6VaaQL+60gQQD
Mb1VAXdxsdeD3cUk8PZaY3Qm80vaagkwQkxldOYztrKTPQ/9loHIjtoZiKKe
hsPml07V8Oqr5GCHeGFDI7o5EWckjF7L+dmHRXZO4hGYHhRGbtNjpqmhcFt1
7MOg1pJ7w56aGfX0aqfPs6ElS8NUIt7cw/OS6VtMJ8+CwuKMzpjk+xndc7Zi
M3E7u+fYeuhdtJLmbU7c5nmAQb5j6psGV4FAkSgze5aP1SL6CzEaZz0f6VOa
Alq/tTi7k62a4xUQubLFnNu7MadnO1TYOgpcIYmbdeG5Pve5z90o4ldh5824
KxCjxX239LJc8WrDNcQpF/6N2MN1bGI2Yo857ZlpINeH7vPQ5SoGJ9oGbogs
nwENj9hCx4FCF0O+eZMHYf1N+7P8whLCMoii4p9++unpsUAgVAfyaPc25L8V
/vRAFHoSnAb4POvuQSIfYm4Oo0RU0nzp5+P5mUf7vLI+ciIAemQmzODP9PQC
gcaGx/Z5l63VvAKrrOw9K/U2Gsn2AhmJtG/5rhWBFHRH8sHMLMzIUnkanWXl
X3m3jLUYNxoxngvHRjmmfIO5jVaozEEZ+wYcKscaHonHNx+b3YkYITLgA6tq
zlhCn0X6m9Dj6V7oaU6fFrq71N9HzCxyR2wzq4Kn/0j4xBy61A/x1sfxtona
K0ZRpTy+GbBg5TBP5LFXqmNZHU1+0Z7LNpflSJbEanfZA4HrmW2vECAAbFCz
4oUhlAECh17mOiN16sid4HEbIUL42B9nxaJ9aXMZi3K6HCuCYjIRe0xxPgMG
5a7eSXTf6IFIFSJzil5AGXIPXkMCuba1rSgpFBiizXyboJn74OxzzLEeFhEh
udwrh4u4L2skB4993lSaKtGcL4c/7qChEbKRTaLxHPDGG2/c7BbQwQ2Io1mW
k5OTO1tA0kXHT2kWThpwhSGU3XHT8aJRdPmPRAYiT9HGsyLQEfZUJB6jaVjM
t95666QIYnX2vRlvE/qwk+LYa3mtKGfs24YcMUcZpJjbNZDKriJBij3DnJp5
ustxt8b6M8o88jskNtS2WzVP/cUQeC7IAsuP7nk/p9aCpFyI9zx4Yacj4DyY
zAcIO3qYTcnfPIBClwlXRpBy8rJTozPHX+xuddsO2IoW00WChea/miohz8mC
Nhm7wt4vrC37CZkfuz17CJF7gvfRbfh9rALSfWFav8zQlqu3PTvXPtmRVtBP
n1c7xys71vI/Vt0iWaSLg3qmuW5pgwXSwKXP9LokZoDTAHdkpOz4EY/EDxZa
bYd2y1GfzJtgELSnaZ+PtUAZIw9MEA86wFLLjPzyqZSvffEhrmfmHBMspYWy
ovNOF3923vEo3IvNxdDXMiPGTBJk17OA080BihOGPcptvYEyZuprPS1A/ZUF
Vd5aTWsm82H8fJ8x3gso7UulY05zCh1LzXkmG0ZmHJ4FjHJ38LJn67Hpjd50
j38y+bJH0E8sFTqQW3AZ9hWSyOvoLcPCSDT7h/3AtK+57PjMGgMpIgC3Gyph
9EGayc/SefjOtWE5fYGkqYNEMWZc1OXakcNwq+PS4R0ek7dI7nv11VdvJmuJ
6E/32tXXzpHEcCch0Mm0TW64scWrSBefefOg//Zg/+1oC3Q32r/puXp9G1iD
bKTqmV9h2l4FueNIjkCIEABWplhkt8pM3SB0WMNfb0bECj2DQwkNiUZFWBCg
tZqnXH6aa56YbVEOfYJzFeHjOmtIl1taWUN1r+7AnByRQ5Q5SQJT7Ep4M54P
JWSXXe5tg0aTN5C4xkcZkoZGB6mtZbUTGjvDQAzIApIwN3oPsvIagY5nsgVm
UwRVv15axI0zyHFJgArQYpOx2QrAVXx7thcniW/mCFi/xT5d6zxt7FGWQUlh
2Y+2sGJvm6ENzqFepGyRSY5ZKhK2DSzP4fK/L76M6LHEmTiS6fcgnUlTmeaU
pXc54loX45HRQZhn2ApCT0a4xvjeApaXuq0ytl8Y1XajwonKx7l2KaYS8jAu
yphQNA3jatHt9O4C19ZsLZ4vB6AQdwti5ULjHKUvcBQRRFfCTans5c9h0DaV
sy+NPkD50FgY72s1GYuUcc3+ta35xoJHZfSs5wy9sVSpiHqd85fvGdp2JOct
kvJ4DBnzR1KDe4C03AOwNpa+0AsSeBuURwExcygpFF9rdTgHSfuzIYX2YGcP
M+l8HAFmV0jiNNI3rHkBWSSemAk1zTAHozJdkMQbrfasev822ftXCU8rWdDF
WFAt97HicsiFaJkJxyfMHgLKe0Acls+0xykY0DRHve2hyXv+DIPspQRw0+bm
lJyMm+VrAWsHW6jr/80rrx0tvzttv1sTAYehTNfre3gn/98idaYgpn5FR4F/
rAv6nZ8UWUUhPZGD1z5hmZ566qlQpGRFw9wGIyht1fB6SUGAkjVxbK2BXity
6sdtNgA6QIhEz3CNXRBpjuY9eC0nz+3jPjYRrmVubNlsLgZOvhhKze5nKDF5
H3XjMXCJZqzw1/DLwQR2HFYZ6ESwCtlmb5jgtYaV2C48FIOV+5ZxJDdl9VK+
3h0L4iSXBiQw8IiFoQTwTqIQBEnxU5C0qzQ7flcj7dwwMLfg0JdoPiSPjU5l
2Kwzc8v42Mbmn7HFW/Z95aQ8DMlDjzErDf5bkv+l7t9BBJgpbo92WMshLI8V
YDk9EUcBZsGOk7LxgRAoFC6LGga5cnvFfe62zByXumWWoQYHFlwS/66LI0vD
qrGjMh3S2ArIZHa1qmahFb2ahR4T8J+Yo5ndE9l/yRZha1io6dbjvvzOa9Io
SeUnf6zRYK5ruiCTB3xyPGGdwB20tYn1a4zfa4ntGTb1lSGyjGUXc/hZ8LOZ
h830fmyRPshzWHTB2cnCj3vFzVRYMUeI9tW+i5AzaTvYNdwKmeNyZvCy+UnJ
RdR5BKbEgLwZH0z7mtsys79mt6XOEpYph9FQMjlELIC2TOwcPtMSjdYGwOeF
bmoInWs5nFvkvMUksLGQN+jokO933nnnTkLOhffyaIs6dxoiglw32+8v3xU3
wcvbS9w8Nnfe/06mbT69o1hgZr3Woa/dSt+bZsb1bP0Ytu3/TMsg/svpJKwx
qoe5/c53vlPRY3owGv+RRIH4oFVxUJlFB2L+5je/+fS3v/1tGJuIFNpaVjnW
V7r2muIFGF3r9SRs8xEtc9fyjJbmJmb3qUblPtL0FFKoPAQHOaUErXW+NkFl
aJ+N17g8tzNCbUkTQ5KHgOmy5561rmZ2O00AFa8j9nxXTZdx0uaRZnfxCEwL
n2Fr1IaUQP8fdEMy9YDpIIlmcGm4LzBheXEGSMaGBsD4RPvt6xhuIiMAx7KM
iSb8rhXH+xITeCACEVhmxsgcou1NZubeDaDrmebqwlaWRY2p03e9I+kx0h03
POQ5QHJ6Mp4X8OZDoCrjRjXp25BMdYjXnTKYRj/E2CGhJ4xFJU0RzOlcfEat
jxbP9+hF+//dPdmXTL/FDObt5GNWzsVnd7Aj7AfKIzEEQXmk2tBfayDPe9uN
kXsyjYg447PifgTGXJE/Ei+N4GhHcZ5ZHts1sD0jSPaTDfeW85q5YasB8mM7
o3sBR3OAa54W4nWlt3XjezwD92KdmC+2O9dg6yGGMAA0pKxH3Gvdk8/yWsbD
TsodnPb5UNmlmbXd2B5bQxom6R2tRO4guemhvlqFDEJe7pYnUjMi5ZhsYlVy
BZzzJ+URPjEng2FTU+z5kxSRBFgLv+rhCoh9fjdWNr5bX7vdXq8W69KkXLvy
puPgYKzGN5+JdxleRcSa7EKbQeSFf8hhMbErKL4ZlB6IsXm/an+ZEmQ8IM2c
5TfXDdXFWZ/ti5iyEK3sqzPhsH6YH7tA0Ra5HqIyjfSap3WNZmokC5B8wGSX
nuk9vRRj4zvmSCF/thxFDj3Loyo4V7MN7Ilt1yfQxnlhO4kkyK10ABkZmVvV
galvPJct9RC0BBfNtvrSKioy36wFWz4XObOFMyKydqznrtbn0tvK/ie9sMLP
vEiJjEywb+2Nh9oakVHU4Tn4LHOHKknppDWb9Ooim5TpyEuBaKylXzZyxumI
Sd/Er0/GaYBnRb54Jr3q5qLlvitrjOv7wmIrhNszp/3a9fugq33kslzT7FkR
Cm9sRcfXz2RCjk59Ky7MKdIryxzpwWHLsLQ67bWZpRfkJ3+7FdiebC/5QHT2
cS3E3Wg54msUM7zOyOTVBSgaCB9pOUZgbFkdreT7qMd2B4Cst7h+5iRMXjN/
lPOCfYNRMAg02DjiIkeou+GixSnFIpyqW/XBHpxXGeHuYaOwKewXgPWAYvjZ
z34WGMmRlfOFMdB25psqY+K1OM6uuWIzk252xVrUkYOMSIc8UXw/U3XoOBAJ
G5nwpjJFcbS72JdyRMc8/61QWnS8Qaq5tX7cM6PjN7/5zeSyPZS8EHfmT8u1
IgGzYdmNKbtWQac97thaht1NQV2n8d65FWxMbtluOqa6hJt+roLsanJojA8r
0Zxz5PC73/1uxcuvRIt6zjP6XzheunkQC/PE7IKEyHl6Z5Nz7rENvHEFFQRK
AX0mK4zWyoiXikrukHsWt2vGSo+3trBurbDvS0zhGjy69ySlQxqRAtPkOK4Z
vclpcjw+PhZ2HjCDVKtr0HPCJdfiHvnUbDeLSpJLY9Gn4zhhEeVoPGp9CJXA
F0eZESbBEmHS1Kl9vdwb6W4ZA+wJj8TSoGls/2KeqNzZ6mTdjHIzrcFlItHb
XYBxqU8JlzRDl9PFjuTQ8wGQF0K/IUx6mrSLECCEpiFGzex84FS6yHiuGjW+
jrCsvgr2z8zEJqg+NvG5pr5bBul3OkAZid9nPpp3nM1HPRVZiCS01LsxJlOz
N/KCyE5snqi0fiyc/brsAqnnHxDmp0aHfQcVvjxHqOCxJGIFGWPOdB6yAYS8
ASGnCpHfO1NuqMRpjANhNJTNHDF3SAvw+HtCY2eDBuYs8WGjmxLHGrJubHTu
BTSiFNg0v/rVryI8BWSyboggz8RcmHeLMmEcbLB9ztZM8cuam57FNbg3u4PX
jNo0iKwBgcSheBoeL8V7KpZsb4y0Vh988MGtLULe4ZEcCmIDR1LulbtFqHMi
ZOYe4W/QCHdseGKPPj0LOgaGGlgEhc/fHRhvDsDYC/YaMJK+Ex7hBIwRw2Qm
AEWkh797m6PXglbs5Zdf7nU9MurYRlXWOdlv5XkBNXiNz/AdFoWJRkEg0G5Q
WbwyONrdeARHNu/YBniPl7UZXecWfh83MY/cgjTRFfFCIOTLPWfQanLD7eZR
mIi9xufAFOqFxqDkgMCYOdvJeICCYzNwtmU8IzpKcm7dqbRPkpM3dKye4s+v
AqTdtYi3sO8l5RUccRfw+bWu9GtEwDyaRGvoZvN3LKTQ1pcQUp1sGskAki2l
8XjBNjuQKjd6mEs9X4bp0OONeKxkqKLPDlFo5Ws8MsNGXTC8nGnpcQ3Vw9SF
PYSD96FTWSRniaat9TNngxQtNrMcc+vxgcC2MqLyF/9/uSeR3qs5iQDZm9NG
NDwaQimV1hp9HZuYDQOq5c6R0kxmln2bvZSVnaN9/Ie9b5gFFgKmOTojSOa6
ZRX+CJRySVk3jSCZXLXWB2yf33UEzLV8VYRX/gXU3e8LlLmXt3wNTGsvcnox
psqKXwQO1cjB+Xe/+13HTAQUKUOq+LppwagJ6/NRQfsoie/md5VuS7xs5eW1
9c2mW5OV569HCuo5b8uQjUI9Xp1+M3sqGl09Mc3M8bC8EN2aRowuuHbt2kkD
pwyUotfCERuvHd3cj5rV/XokapoVJHruMStvTKezghbo+XR9zQTY+Ku5YSOT
h/lFjNCXNLL56KOPKnr+UXTD5CPGE8csuuy3scqZ5WMDs3xW17KrkOzshtX/
sws9cxNnIyio/TV37C7W/+wcctw5w6gpkG0HkMDSw8DSJ3vshE+bj8LIEHCe
sPF+hzWmsc2+RKlnWl/MIGZFxW+LE77HdRcprRd6roUTJGGuWcVMdPj+WMzX
+1F/H5QySiM1oLwwypzyfW7D9mIteUqLKUBvnswsU74LLMuhwxMwG4iQ6bAj
nPIYe+B0d7+cNUrOWh2VF8OezCkJFqU3h8fsvph/LG4UFTPCTz7K+YafQA/r
wmZHKVk129gaNzHJDy6EKKPoCA9rvdzNy2cxym3Kk5S/ylmf1/kOglomolbD
/9e96aiIhGzvM0Fl58KMsrIICbOyiH11ll5OOf1HejOLKnOIIFeH6I5fQ1XH
PSKpHVKEgzU0RYY0pXhWezFbZDOi6r2kzO5KlWWukO2iCssSFSyd7r9nNLU3
Bs2ayHqs1+qY+kq3EVFsnIKwebkJF+SLv/71rwMzzUeyTpSFRlQl0EVhnqXp
GQtt3aOuWgSB121Tlyhb7C7fCJUTmOrHrekScYLn16PVae/gdPE2g84D4cFP
Tk4WYPqVr3zl5haUlv7PL+6GzPrxcxkyxWQ/BwauJfMM0HnzLtC5YNGcsZJb
Jmwk9rAW4Cfr+eKLL26zEN6CDCUgFiZI8nzQfSQKt15hnRt9V0lwzj00HdD4
iZy/8qnuw0/2KGJh2Ppu7lm98Dn8ZDmvjFyMN8d3oo+JXXxST61Nz+usObP8
/zOxk3Nxvy1F1MXZTDCJkM2C8HPO5cyLcQfisAByI/F52XI7pl7uimLNp2Y2
OnuEyeK9emaktdMrPZ1jH7BKHcpQ2YMSvjHJTFjummZ+pN+xA6k9gwBpYEoe
suxKMMim/5B78FwouBrgq1O+tFcBlmcXzt3MhaWpYiWQ2cvoCdtQmy8LbDL1
jN8cCw4SOLRRhrgOWAqAiMMDYGPaL8o+uDgiJR/WhgcWIHc3v2T2salSAMFy
jzliWYchQVaKtD4Ajbf4uZgOHtulYfoMQ+vhYW/sM1itBGHJ5IE0iUuO7rW9
J4+gFFBlGSo9+rVYhXys5qmF+RFac9OvgcqkG6cSeq1BKivWIHVmfNNrfXTM
zO+LrNqsa0m0aCRmiL2JkmTmLAcDVWVDBwAVojVEBU2JZZIRiXO3JiV0ZD3p
7RvYHUA6x1Z2F9LIzYBtdpjHXSu7kSQUCDDPAPk8y3e3Jm4DyejMdi0SyOVY
Aov+a6SoOnctSeF1odWsIVn+u9+vetcfODXxLT3oRJNoHAtwk8H1nXfeSe5X
PbkZW4MdIMonKwZmkK1m6eZWwlbB82Z+bbO9xiZfw2ygk4y0w2u3toMAkGtE
NvzHN9u7vNzaKlBP83+1bgta3mYIxwWLNR/rzToihG+88cbcWDZ//OMff9LG
eyOh8kGtXYGC8aVAZ11aipSGWCuN7P5fXU1sQVH4bpoAEUKszuoHXgl0TdWf
dbzoGMBnJFDoZI/zCiiX7/Ec3Mf8wMRhMFVN+mAvp7JUJXezyaUqWBs8k9Vf
mGCcRLh+i9u3mpo3u07JfuKxGSbXMWHPBJ8cyFrr/jYCMdfQB8f6+ax+xxo/
PaqAlfmuABz6CT3FekrayJqOfn3zHFiXLYd3lTXTX3NQMZag9iNNffka7ffV
jsfscuvAdd/bnpspBntRJTwKZwUYsGcU53QpyqswVHgEtJ/9AeXcyGVWap9N
KKn7F5kyGmdW443Yi0gz9Yg3Z5pWkVfG8ed//uflzCQZFVPO9OspRivxfOaQ
5bAM4+O6bgO2hGeR0cDlzMGZhGViTrITiXMLY1prpiJdvYU8Wxq68/1wzb2Z
Hw/ionCZl6nG4v642/zO1Yi8fm9EX+ZOak3GpigZwzV++v8HhtfSdJEZZMV5
Yw5zDiHyknMIkSPgl9ShDL+/+MUvwveLnRqNg8oANttMuhdjn7KYxpnMf+Im
+MNYeBaBCWIyWAwGMZLG3K2H3VqAlQdlsQf8zQ6brYN404DXDMJTwDvm5bbM
o5v4AMYGTIxiBN5vfetbt0XQ+T+UMWW4rf5g0S8j7sMV59beziZqr10ZYqg3
trfYWDGzRejtbW+3f5+2z1SD9gDH9U/KGgGvlHw2OzfgEuZpvGschDHpvvrV
r1ZtdwwxdeZuuNEuTIZS7eNSXaqVFVQD2KQTjWAP5SydXIIZTrPzag1OdQxr
2K45hsdoGN/J10RfcT2TZVrVyFyzYeQOqxHAhxdMj7kmQb4EhJWr237YxP81
TYbwU2hR+2MfBbjyOjOhCHaD9r5TtRxr2ZRIKFjIHkRBp+5oM1+Yrnc4ZTuO
cArcsdWyTmodwnvjO3SZORLS6rPdcblyFOAp2PY8iWUCNmnnOwyJ+7PljrZn
lIMFAZQ9usvxWplJvW2nedvd9sKCK8HMVPQIihkliB7627/9203g5cUwNTA9
mH1whPGbc2wSVWsTWQZVLjQHDDy414M56ikVvUBpdKT1ZygPQHeCVwKwEGgm
mAnn2f9spcOTfM6IE9/hPpnIRYHnNR4CTz3HYQx3FL0kTGb07uuLqV2CJkTE
m6endg+c/qTX69pWNhMpZoB0ntYAkucZQdKePBKIe9CQMkTn6C4i77M0Gufn
Ws4uhy2EmDkDiyTkzP6oteR7bFnsV2KpBEcBSSr38Ab3Xi5hrwaDZLE2PG4w
QzbEQzq4G3e1/5uZHMwgM4HlzLYiHoPYMup9bN6W6ObwKj/ND8wUdTkCTkw1
0PKgVYAyXabnipW17ubKYqo/+OCDQB90gz3ac0yVxm7NCTo3npCEH1qrhCu7
J/j1+lYlVz3sEJOgc3qkgtj43sEWDkcPMK9pE67C5gCvt1deuxkQWV9by92N
OC6ziZMPmebvb3zjGz54sdC7w3lwTHOIKJ8onzvcOlQ/v2D9Z7ZNS1VBoMHU
smvoaehHBr59buHMnjeSmbAZc91ibtpgSAksRD6CgrwmlB4t+r+6g3vTnEd6
iDhzKaAseQ5+Z3ug1PJG9ATLJLOFMFDxRoJULTOunlEfP5WPYaRYx3AubjfM
CHgxBPQp08c0OR0ZRFuZZ3ncAqPFqOJ9N4YHHV6T4FMOauPD2rAAJe6qGkGC
feUw/sbQ4bPN7qy9rA7WQXOzJSvcnEbMRqKeo5oMhvXk5ig22xvmNucgOgOx
qZeGsdZWmZxy/aKA5pp6UyZy5knLXGS9r3bKCZPiZOt+0vPWMOgQadprb6KH
TzUwWQfmUcIC5hj8N5qNFuRz3AdxNx1Jv4n2Qfa7mKiFIYmGPQuJZab2Qo7s
paSBGUUm5bDF+jPdfJ5/Go3iInNj8q24yNiNho7YyJYTG5kz+z+JkVZy61RI
GDmN9S27knf5Xk7atcya+TF4AVYyNxxztcXWqMBGvKROhW3LM/SOM4GPR7FT
n4/ZYqU0ZVFirG7mQmBUrCLCyJU5anLCYVSaB2tOXHdeDo/yu8yJmR5PTGz5
I3M3IG09a2pjDY8KirWu/P6emfu9733vE4oeEUAJ6HNw1HanpueyZ0/Kf2BC
88QCLj2Lp0Hi1Qp7Jw23hMNHtzDly7IfCF13pq2Ttbtir+yHQR2yzed7ez/4
BeiyCbEIyjNFSvCHH36oI+zVV1+94U022+eIj0HmHYkR3S54o0dBx8K5tWR9
dIdEo3LRrMGgwamz+mVVl56SrH3y+mMmTA7WSSjeecRzJ2033p/Rg6kWQGSq
BFMj2WMjfRBn1VZqEc/NDuDZW0FqPXC+thP6sjvWY7zUnzwOm4lp5NIMhU1k
DewK/HXWr+xE4enkuDSWiurneia4ytGDyuVwiwrmMcpYEjl8HIYqgUbgHSHl
eUC8JzviZeucZ2ZTS3ngSQnVRNSAI7wNe/nJQVuFknOIde/bf6yML7zyMzMz
95KTsvdXYm85chlKm6c32tuALha4Ndgpz0axz8uheFkRBcoGGGZCW3RnB6Sx
5Tp6Jwu56k2OCl43Zna39gIyN+ugT8w+cbw4rN4SpPiZ2KGIlicAUU7LL6Mc
k6SbNCMdCnJEOgZlKjfXYkCI4r0gXs6+NT6MiPKALBqLZH2YTA2IAQcfdqOt
BhgjIpXRD0xi6xRRvkVgCgucsbeJmrb+08OGeNnxy9GZWWO2eCqbZFkAxAjQ
DcZdULEIKWI0Epjrk+B7OVzI7LFhFY1MnWdn4aXLdNvPqWVZDninh8rTxNTa
+xlnzwFLalFGwCsgCCRFGUn4TRvK3beFoJ7q89jytWkLcdG5XevObFojj9al
VEisccqOQgnuFhDYUnBvnb7XWmrt+YBcVFnZQJ+060Rwkmf86KOP4hoVOL96
4vscAKT6GklT1liTdWeay4CksC8y6tmiVXdWRj1PoRqA+9ynOU2DPZxDLmOZ
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
i5bnh+Px2J0P+L6K1+yLudSP//NEanIVPD+4/vrrHa9MNWamVsHzjjd8lOd/
t/Cpky94f+K5CY/bgQQf7XGWxgD6RIrncnQzzz1G99RTT3kixrgFgG1HYSk+
/gCKz5OHgzv2zNbrOoXmGBOXa0TgAsBGkk844tJpZkzaKFh91eCJlvaYoXS/
IS7b3rhAJqNGagY0NdFysPB490A7OSqTpwnBW3gKbz/2sY+NfK7AtA5NxgQy
Ns4Si2dsuYnFxVGY5vh/dU+Dv3+vLKyTRVf4O3VDhSgpvLWHIEitgOB+tLZP
fD170ESAjE2VnzICdGijqYpSZ2XAhVE49sLa6zqNb2B1vxmKToJX7f3AOM4n
BVWwmDgZQSgaObXsXSqPW0dHgAJSonqpPntV55TZS1diwlanW8neF1UKe3dk
tw2xVN2JDbhonDOpMyOifC/K55bRMtT/93AhOXwUXPM32Pn3yzc6+/V9iZ2Y
9U8//TQ0PrCbxFSVKXTxOBSsa4r9VuC42ataqYnfimWqVhQiBgujlPp8p2D3
crZliKKBmiqLBpGNMcBiSXu7yse89Y9jJAKb8s5MM8/RL2mnZw739vaq5d7j
T60dYmnKlYyouW/RwahD20BIAvP/RfG7zm7dRwsulQ90N9Io3vElgH/vete7
lgZypVl+Ce/s7+97Dbj9LLy5vTOsFHMC80RqpdYN4oOaFPV7dGy6UyrXB2IA
l8AmWVPwyWRilvgDX7iVahFVzD80vanf912dTeg/tbW1FfzZO0AMbXes84fg
ixKvxI+w5mIY2pil1+qoKMw+uPnmm5dMj008ggH/ycj4E6hL8Kh8oLvxvSHx
iOCsGaoLo6J3P2/u9peZTS9FAvtYNb6TlEcH5iiP0tYI+an2Ntc+qlJok71N
4McalNqmJEujFFJabMwrD9gG8zkAl8nKswlzjFD3BL4B11ymzwvNrWSO2xjT
yv41UZz3+LH/hS98YWHi1YLbyPVh/IN2v1/UCXW4I/+wfKezW92TmELgP8I5
hSnn3BvF2BBTpDEY8NIYnIs0J6FTolVOhotdqQrs43Yk0I2fiCO7E2uAOSo8
QHNMLZwU4grWXT+a3lcZ5fplrmh8qnFlaRQr1Di9RIFh8gA3fAkaCYSpy89Q
4KhnPVS3Dv6EvwdXFGyC+GgFvzu3Qmk+0upTzVmJjFRnxL333kvIoClNye/2
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
3vzE8QtjGd9ULv7JAfF68vIWtpArr+R8TRBJC6PN94+3C1u3831Lufi/7S7M
ufaO9Qub9xbmkzjYQ1RBlxcWja4pc/mx9lZrd7NvLVf/9wPy5aLtOd7Tdj2z
3np8JJ122qH1cJT2yU9+svSUWS/r31Gu/MtduWq7K+S11HWktRzQ0lD7qOzx
3ICKvgtm8v3FDdbyneXK/6ElY/V7H69rKWd3u+zHviliqK+47+zRRx/94VZY
1knxd5Vb/8cBYXms3roE4nfqLscu0r+tkX6fE8sfWi2k+b7fU+77KwOiUMzP
btykPPz2UoFOtgWtILquYy2UZjDrt4XvLXdelrt0XK1H19xZ3ZI0USnf2XbW
H+iyeRDy/0i586daWldj7q2r7+z97lSNry5nceeF0eL7NhCw7y93/s8DXNbs
jlzrFXeec/igXgD5zsxOtPc+fLyI8V4hTfNf2kes7sTDq2/uDVvV9yff3Kyv
g62trflm8l36EDT/teV2vwH94M2ZOqAmGyq74uaGwrOLFy9+92ohz6JW0tKb
/1Zu1LHe37zy5if21V+9f3NakH9XknAJGrcVYHCxcl7d/FqX2w74bxq4bdHu
rRpO1C2pS7TXvnO9fPllSgPF5tPt1athGgU9HZc97rhUP4l0R4rcvmMDiY5c
5P9Rrt7Bj69ZfcdDDjUQpNQF89BQ69s2E6bSfaL5n11++nruX3NTgvvwNN10
bhblt6wWonzTUsXbfGaAm9ERs+O0xk298YbK2Lnpj/7oj86ee+65b9pMckuF
VfO/XNp44941tzJtrJ25os5/9sorr3yoy8ZBSPw75Ur/e4CNb1h5xykbTRUc
YiM0j/j6DaSmZAI2vzHAwAstfavslsOMSYWguNXXHb1Tn3GRlNP8n+5VXfXv
Xn0nb5YWd6JA76XN5PKny80+2xURh/e7Vt9sQUg4Rj3PP/3pT1/aTDTK2Wfz
WwMsu2P1zTy5Pp6M8nafTHIMjhVXvvlcl1t+p9vb16o7EneaM50s7kTu73vX
y4VfrsQ3ms8PcOv1q+90cO7cOfUhxPF+9wYSWAI/zRcGWHXbyjuNvXjb7rSk
1cDTmwlFCcQ0/3eAT/sDd7qlvEasBcHw/826ErHqTsX/b/5fuULHorqlfa06
HPHa8qMf/eihGev+v7dvJnvFM22+2JUI59PN6+80/83f/E3/31tbyq89Si7u
U/OlAUbdtPpWh5/61KfAPv/fQxvIQzG8m6+Ur3eMIzcH3P4Ofs2//OUvzz70
oYKrDxy9+BEQ+lS5+Ffb9VYRuKF/cVJAG/25t2XHOhErJp1nivTZcX3/+p0k
rQubsfu/p+tf0WWEE/66ehNXvQHDP8PJZ9LVotS3Y6mcb3lQbfCn1rPQSfkb
6brhTHe07ZqB6842EI3fSteddkns7189cN2kR+sY94V06dT7qBL2qpY8VSHe
0uXZqkt/MV3aj2vcfLhy4IJv3kwIvpouuDNA3rMDl36gfaa1Su4XHaUb7Hbp
7B88M3CDezfgn1/wRLr4Xruqur0MDc1KpsjaZIK04vL7yS4r/bFPDdzgjs2k
xK95Ol3/9AD59wauf+tmnPVrXpmunya3VuoPnS45AB/j5vsFz6eLn22JU1Fq
6NTnhvWs9UW91n6w/H5ugPLbAxc/v/7irdzcnC4e2tjZHLYGLn7lZbD11nT9
AJLO/jBpH6gC5JnLuP4d6frXdNnqlB8PXH+vvf6xYnMhXf/8APFHA9ffbl9b
G6b0i74x3aCklU0zA+qFp5ty9IF0wVJhdFIUz4XH6y7k330oXaeI4DYrp1Tj
V+3vSo68JaTkiv8PzhzP/w==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"47f2840d-bd76-47ff-b413-1437f812c9dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ti2Transform", "Section",
 CellChangeTimes->{
  3.890212943377419*^9},ExpressionUUID->"47fa7330-a06a-491f-bcb2-\
e643bcefe8b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "Ti2Transform", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Ti2Transform", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"Defer", "->", "True"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ti2Transform", "[", 
    RowBox[{"z_", ",", "\"\<\:5012\:6570\>\"", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ti2", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "Defer", "]"}], ",", "Defer", ",", 
          "Identity"}], "]"}], "@", "Ti2"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"ti2", "[", 
       FractionBox["1", "z"], "]"}], "+", 
      RowBox[{
       RowBox[{"Sign", "[", "z", "]"}], 
       FractionBox["\[Pi]", "2"], 
       RowBox[{"Log", "@", 
        RowBox[{"Abs", "[", "z", "]"}]}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ti2Transform", "[", 
    RowBox[{"z_", ",", "a_", ",", "\"\<\:5012\:6570\>\"", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ti2", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "Defer", "]"}], ",", "Defer", ",", 
          "Identity"}], "]"}], "@", "Ti2"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"ti2", "[", 
        RowBox[{
         FractionBox["1", "z"], ",", 
         FractionBox["1", "a"]}], "]"}]}], "+", 
      RowBox[{"ti2", "[", "z", "]"}], "-", 
      RowBox[{"ti2", "[", "a", "]"}], "+", 
      RowBox[{
       RowBox[{"ArcTan", "[", "a", "]"}], 
       RowBox[{"Log", "@", 
        RowBox[{"Abs", "[", "a", "]"}]}]}], "-", 
      RowBox[{
       RowBox[{"Sign", "[", "a", "]"}], 
       FractionBox["\[Pi]", "2"], 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{"z", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["a", "2"], "+", "1"}]]}], 
         RowBox[{"z", "+", "a"}]], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ti2Transform", "[", 
     RowBox[{"z_", ",", "a_", ",", "\"\<\:4ea4\:6362\>\"", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ti2", "=", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "Defer", "]"}], ",", "Defer", ",", 
           "Identity"}], "]"}], "@", "Ti2"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"ti2", "[", 
        RowBox[{"a", ",", "z"}], "]"}], "+", 
       RowBox[{"ti2", "[", "z", "]"}], "-", 
       RowBox[{"ti2", "[", "a", "]"}], "+", 
       RowBox[{
        RowBox[{"ArcTan", "[", "a", "]"}], 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"a", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["z", "2"], "+", "1"}]]}], 
          RowBox[{"z", "+", "a"}]], "]"}]}], "-", 
       RowBox[{
        RowBox[{"ArcTan", "[", "z", "]"}], 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"z", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["a", "2"], "+", "1"}]]}], 
          RowBox[{"z", "+", "a"}]], "]"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ti2", "[", 
        RowBox[{"z", ",", "a"}], "]"}], ",", 
       RowBox[{"Ti2Transform", "[", 
        RowBox[{"z", ",", "a", ",", "\"\<\:4ea4\:6362\>\"", ",", 
         RowBox[{"Defer", "->", "False"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8902129353724527`*^9, 3.890212940841504*^9}, {
  3.890213064493428*^9, 3.8902131041930895`*^9}, {3.890213149175033*^9, 
  3.8902133292927513`*^9}, {3.8902229257498465`*^9, 3.8902230551423674`*^9}, {
  3.8902230930596943`*^9, 3.890223418014475*^9}, {3.8902237021988573`*^9, 
  3.8902237072279577`*^9}, {3.8902237390625896`*^9, 3.890223881052518*^9}},
 CellLabel->
  "In[514]:=",ExpressionUUID->"3a840ebf-a475-4613-94cb-a7a3a5a1500c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -10., Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}}, Typeset`size$$ = {
    360., {109., 113.36877329834758`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -10}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`Ti2[$CellContext`z, $CellContext`a$$], 
         Mirion`Ti2Transform[$CellContext`z, $CellContext`a$$, "\:4ea4\:6362",
           Defer -> False]}, {$CellContext`z, -10, 10}], 
      "Specifications" :> {{$CellContext`a$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{628., {139.13403328722342`, 144.86596671277658`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.890213223571952*^9, 3.890213231135846*^9}, {
   3.8902132673985105`*^9, 3.8902133303660574`*^9}, 3.8902229412776036`*^9, 
   3.8902230093701515`*^9, {3.890223050437976*^9, 3.890223055659602*^9}, 
   3.8902230934051895`*^9, {3.8902231723330655`*^9, 3.8902231806510572`*^9}, {
   3.8902232587636876`*^9, 3.890223304112429*^9}, {3.8902238420393963`*^9, 
   3.8902238814057093`*^9}, 3.890226761370049*^9},
 CellLabel->
  "Out[519]=",ExpressionUUID->"ad4d1b84-ef72-4727-808c-4d7fef134d93"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 604.8},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a163f4b3-f4d9-472b-8962-64ed1464bf9e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 157, 3, 67, "Section",ExpressionUUID->"0acdbdfb-68ad-4f8d-93da-7584d7bec660"],
Cell[CellGroupData[{
Cell[762, 29, 1425, 34, 181, "Input",ExpressionUUID->"8802847e-0aa3-4fbe-b871-0e48b98e1472"],
Cell[2190, 65, 708, 14, 28, "Message",ExpressionUUID->"66cd9868-369a-4aea-942d-e9cb4caebf61"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2947, 85, 136, 3, 67, "Section",ExpressionUUID->"784fc19c-62f8-4bad-881c-fca2328794d0"],
Cell[CellGroupData[{
Cell[3108, 92, 2053, 41, 139, "Input",ExpressionUUID->"2cf80ff6-bf72-4d35-b1f5-f03543c34b66"],
Cell[5164, 135, 865, 14, 32, "Output",ExpressionUUID->"e149b0d4-3fc0-4f34-8565-f6cb022db2c0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6078, 155, 250, 5, 67, "Section",ExpressionUUID->"f82db896-cd4c-4cc8-84ca-4dbb44229ec2"],
Cell[CellGroupData[{
Cell[6353, 164, 3372, 77, 232, "Input",ExpressionUUID->"fcfad0f7-8d74-470f-91b3-73e347e63cc7"],
Cell[9728, 243, 1875, 44, 48, "Output",ExpressionUUID->"6cdb8a83-e535-4fc4-a454-50154dbff36a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11652, 293, 124, 3, 67, "Section",ExpressionUUID->"0870485f-1fbb-4531-ade5-39dfcfc3ddc3"],
Cell[CellGroupData[{
Cell[11801, 300, 4963, 132, 387, "Input",ExpressionUUID->"d98e5719-a905-4c40-ba62-eee6ff6ca634"],
Cell[16767, 434, 1480, 36, 47, "Output",ExpressionUUID->"890fef5b-bced-4691-8843-8faf04393a5d"],
Cell[18250, 472, 1306, 29, 47, "Output",ExpressionUUID->"1e500dc7-b054-4386-b34d-c9791aaead1f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19605, 507, 150, 3, 67, "Section",ExpressionUUID->"23a1a542-50f0-42ff-bd50-712fb6e1df74"],
Cell[CellGroupData[{
Cell[19780, 514, 11913, 277, 820, "Input",ExpressionUUID->"3a78e23b-afa1-4afd-b071-1979d220226b"],
Cell[31696, 793, 682, 11, 32, "Output",ExpressionUUID->"cd03747e-6abb-4d83-a05d-6823343737e0"],
Cell[32381, 806, 1259, 28, 51, "Output",ExpressionUUID->"85e292da-5e89-43f2-9f41-09bc7235e962"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33689, 840, 134, 3, 67, "Section",ExpressionUUID->"87fd259e-20f9-4879-89a8-14ec4ecb826d"],
Cell[CellGroupData[{
Cell[33848, 847, 8435, 196, 770, "Input",ExpressionUUID->"c6911c1f-5536-4bac-aab2-4c6f9b5462be"],
Cell[42286, 1045, 5111, 141, 167, "Output",ExpressionUUID->"cf381d1d-02bf-4545-aa3e-8cf4deadde7c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47446, 1192, 133, 3, 67, "Section",ExpressionUUID->"11e84cdc-6ae0-4d8f-ad5f-74b77672d2dc"],
Cell[CellGroupData[{
Cell[47604, 1199, 8022, 183, 316, "Input",ExpressionUUID->"4c9516ba-7077-4b96-8726-f5628ebd60bf"],
Cell[55629, 1384, 4293, 125, 112, "Output",ExpressionUUID->"42ae4c69-ff9e-4437-87a0-0e4ea0a4206e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59971, 1515, 130, 3, 67, "Section",ExpressionUUID->"090ecfcf-eec3-4fc4-a926-55581966e032"],
Cell[CellGroupData[{
Cell[60126, 1522, 2181, 62, 203, "Input",ExpressionUUID->"ad4da761-711f-4c1e-b169-b98f33f3076e"],
Cell[62310, 1586, 2540, 91, 122, "Output",ExpressionUUID->"e78fd9e1-2801-4fbf-80e5-c346b2513034"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64899, 1683, 135, 3, 67, "Section",ExpressionUUID->"bf1f2ecb-cd6e-4229-9641-c2b700125777"],
Cell[CellGroupData[{
Cell[65059, 1690, 17734, 410, 1144, "Input",ExpressionUUID->"b0d91778-42e8-4862-8bdb-9a37ac55d0ba"],
Cell[82796, 2102, 13247, 265, 340, "Print",ExpressionUUID->"afb8b7c5-32f9-4f90-914a-909d23f110e4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96092, 2373, 161, 3, 67, "Section",ExpressionUUID->"6a80edf5-fc8e-4cd2-ba32-96d03eb74cf4"],
Cell[CellGroupData[{
Cell[96278, 2380, 5774, 144, 576, "Input",ExpressionUUID->"14fe0ea8-b87a-4d7c-8dca-4496bba5ab9e"],
Cell[102055, 2526, 267, 5, 32, "Output",ExpressionUUID->"5720f030-a941-4960-be8c-5fee8b5f4d82"],
Cell[102325, 2533, 776, 24, 48, "Output",ExpressionUUID->"dacbedb0-7b1c-41b5-b248-a105f5cffcd9"],
Cell[103104, 2559, 717, 21, 35, "Output",ExpressionUUID->"25012b3c-48fb-45b4-b28a-91a97d6cdb00"],
Cell[103824, 2582, 2035, 66, 48, "Output",ExpressionUUID->"25306060-4b30-41e0-a320-8799a3ddc420"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105908, 2654, 133, 3, 67, "Section",ExpressionUUID->"c90c1727-4a52-4082-8bb7-c975e7ea6866"],
Cell[CellGroupData[{
Cell[106066, 2661, 8582, 266, 498, "Input",ExpressionUUID->"9a461511-9375-49c5-824c-113359620a0c"],
Cell[114651, 2929, 202904, 3343, 280, 42242, 708, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"47f2840d-bd76-47ff-b413-1437f812c9dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[317604, 6278, 133, 3, 67, "Section",ExpressionUUID->"47fa7330-a06a-491f-bcb2-e643bcefe8b0"],
Cell[CellGroupData[{
Cell[317762, 6285, 4653, 135, 302, "Input",ExpressionUUID->"3a840ebf-a475-4613-94cb-a7a3a5a1500c"],
Cell[322418, 6422, 2165, 41, 303, "Output",ExpressionUUID->"ad4d1b84-ef72-4727-808c-4d7fef134d93"]
}, Open  ]]
}, Open  ]]
}
]
*)

