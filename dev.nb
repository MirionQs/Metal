(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    348191,       7182]
NotebookOptionsPosition[    342505,       7070]
NotebookOutlinePosition[    342932,       7087]
CellTagsIndexPosition[    342889,       7084]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["CheckVersion", "Section",
 CellChangeTimes->{3.8812489500300703`*^9, 
  3.889058898547368*^9},ExpressionUUID->"0acdbdfb-68ad-4f8d-93da-\
7584d7bec660"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "CheckVersion", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CheckVersion", "::", "vtl"}], " ", "=", " ", 
    "\"\<Mathematica \:7248\:672c\:8fc7\:4f4e. \:5f53\:524d\:7684\:7248\:672c\
\:4e3a ``, \:8981\:6c42\:7684\:7248\:672c\:4e3a ``.\>\""}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CheckVersion", "[", 
     RowBox[{"v_", "?", "NumericQ"}], "]"}], " ", ":=", "\[IndentingNewLine]",
     " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"TrueQ", "[", 
       RowBox[{"$VersionNumber", " ", "<", " ", "v"}], "]"}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"CheckVersion", "::", "vtl"}], ",", " ", "$VersionNumber", 
        ",", " ", "v"}], "]"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CheckVersion", "[", "10", "]"}], "\[IndentingNewLine]", 
 RowBox[{"CheckVersion", "[", "20", "]"}]}], "Input",
 CellChangeTimes->{{3.881249153968047*^9, 3.8812491653774567`*^9}, {
  3.881254836613456*^9, 3.8812548409438276`*^9}, {3.882200662580675*^9, 
  3.8822006680866556`*^9}, {3.8822009476508985`*^9, 3.8822009555863943`*^9}, {
  3.889058869949606*^9, 3.8890588904645743`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"8802847e-0aa3-4fbe-b871-0e48b98e1472"],

Cell[BoxData[
 TemplateBox[{
  "CheckVersion", "vtl", 
   "\"Mathematica \:7248\:672c\:8fc7\:4f4e. \:5f53\:524d\:7684\:7248\:672c\
\:4e3a \\!\\(\\*RowBox[{\\\"13.3`\\\"}]\\), \:8981\:6c42\:7684\:7248\:672c\
\:4e3a \\!\\(\\*RowBox[{\\\"20\\\"}]\\).\"", 2, 10, 2, 24345532547437071410, 
   "Local", "Global`CheckVersion"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.8812491658678274`*^9, 3.8812526572892103`*^9, 3.8812548521047754`*^9, 
   3.881264216757911*^9, 3.8822005344848256`*^9, 3.882200668798619*^9, {
   3.882200948121871*^9, 3.882200956172943*^9}, 3.88905889258403*^9, {
   3.897148021665601*^9, 3.8971480237951183`*^9}},
 CellLabel->
  "During evaluation of \
In[6]:=",ExpressionUUID->"094ac411-85e5-4cde-9c58-7d4487fc07e9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ExpressionPivot", "Section",
 CellChangeTimes->{
  3.881261571343264*^9},ExpressionUUID->"784fc19c-62f8-4bad-881c-\
fca2328794d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "ExpressionPivot", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "ExpressionPivot", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExpressionPivot", "[", "expr_", "]"}], ":=", 
    RowBox[{"FirstCase", "[", 
     RowBox[{"expr", ",", "_Symbol", ",", "False", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ExpressionPivot", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "x", ",", 
    FractionBox["a", 
     RowBox[{"a", "+", "b"}]]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8812615801230173`*^9, 3.88126167633887*^9}, {
   3.8812617663621626`*^9, 3.8812618238386993`*^9}, {3.8812620068443146`*^9, 
   3.8812620165175595`*^9}, {3.8812620479419527`*^9, 
   3.8812620815899687`*^9}, {3.8812621946866293`*^9, 3.881262209021083*^9}, {
   3.881262315054818*^9, 3.881262438736573*^9}, {3.881262498457862*^9, 
   3.8812625557944126`*^9}, {3.8812626485340843`*^9, 
   3.8812627685465975`*^9}, {3.8812628909450665`*^9, 
   3.8812629314502225`*^9}, {3.881262961971888*^9, 3.8812631580806475`*^9}, {
   3.8812632173477902`*^9, 3.881263309160058*^9}, {3.8822005740689077`*^9, 
   3.882200605935709*^9}, {3.8822006542479105`*^9, 3.882200690746396*^9}, 
   3.8822008109922595`*^9, {3.889057643315501*^9, 3.8890576531716785`*^9}, {
   3.8890577545740843`*^9, 3.889057757051575*^9}, {3.8890577877598405`*^9, 
   3.8890578377002153`*^9}, 3.889057934251857*^9, {3.889057973843111*^9, 
   3.889057992623109*^9}, {3.889058041097636*^9, 3.889058125047696*^9}, {
   3.8890581726753273`*^9, 3.889058185687188*^9}, {3.8890711078797207`*^9, 
   3.8890711545777483`*^9}, {3.889071782661847*^9, 3.889071796142689*^9}, {
   3.889071867712634*^9, 3.8890718895424705`*^9}},
 CellLabel->
  "In[1016]:=",ExpressionUUID->"2cf80ff6-bf72-4d35-b1f5-f03543c34b66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "x", ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{{3.881263029681779*^9, 3.881263158365161*^9}, {
   3.8812632194657574`*^9, 3.8812633097171683`*^9}, 3.881263392397648*^9, 
   3.881265552205414*^9, {3.8822005831546483`*^9, 3.882200609133211*^9}, 
   3.882200656635619*^9, 3.88220069118622*^9, 3.8822008113864794`*^9, {
   3.8890576393829947`*^9, 3.8890576534921494`*^9}, 3.8890577573947535`*^9, 
   3.889057838372447*^9, 3.8890579351322865`*^9, {3.8890579797600126`*^9, 
   3.889057993077814*^9}, {3.889058076797559*^9, 3.8890581384728007`*^9}, {
   3.88905817566448*^9, 3.8890581861029434`*^9}, 3.889059198965727*^9, 
   3.8890711635083895`*^9, 3.8890717966608677`*^9, {3.8890718777454143`*^9, 
   3.8890718899799433`*^9}},
 CellLabel->
  "Out[1019]=",ExpressionUUID->"e149b0d4-3fc0-4f34-8565-f6cb022db2c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CoefficientSeparation", "Section",
 CellChangeTimes->{
  3.8812488993542643`*^9, {3.889059222842462*^9, 3.8890592303488493`*^9}, {
   3.8890593346512423`*^9, 
   3.8890593390963335`*^9}},ExpressionUUID->"f82db896-cd4c-4cc8-84ca-\
4dbb44229ec2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "CoefficientSeparation", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "CoefficientSeparation", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CoefficientSeparation", "[", 
     RowBox[{"expr_", ",", "x_Symbol"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "coef", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FreeQ", "[", 
          RowBox[{"expr", ",", "x"}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"expr", ",", "1"}], "}"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            FractionBox["expr", "#"]}], "}"}], "&"}], "@", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c_.", "_"}], "/;", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"c", ",", "x"}], "]"}]}], "\[Rule]", "c"}], "]"}], "@", 
          RowBox[{"Simplify", "@", "expr"}]}]}], "//", "Simplify"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CoefficientSeparation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"a", "+", "b"}], "2"], ",", 
     FractionBox["2", 
      RowBox[{"a", "+", "b"}]], ",", 
     FractionBox[
      RowBox[{"a", "+", "b"}], 
      RowBox[{"2", "x"}]], ",", "x", ",", 
     RowBox[{"-", "x"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "+", 
      RowBox[{"4", "a", " ", "x"}]}]}], "}"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.881241904847962*^9, 3.881241987198187*^9}, {
   3.8812420312408314`*^9, 3.881242046928899*^9}, {3.8812423871845837`*^9, 
   3.881242405022174*^9}, 3.8812525017519813`*^9, {3.8812633706399508`*^9, 
   3.8812633878811007`*^9}, {3.882200537029644*^9, 3.882200563996333*^9}, {
   3.8822006123689237`*^9, 3.882200614089099*^9}, {3.882200672506434*^9, 
   3.8822006780377517`*^9}, 3.882200806127757*^9, {3.8890537514115505`*^9, 
   3.889053808475528*^9}, {3.8890539727361536`*^9, 3.8890540057319794`*^9}, {
   3.8890540808730783`*^9, 3.889054096899433*^9}, 3.8890545487134547`*^9, {
   3.8890549209593997`*^9, 3.889054935737418*^9}, {3.889054994449294*^9, 
   3.889055019502039*^9}, 3.8890550958059497`*^9, {3.889055129243005*^9, 
   3.889055150173757*^9}, {3.8890553599907513`*^9, 3.889055390612606*^9}, {
   3.8890557736609335`*^9, 3.889055786978454*^9}, {3.8890558981639132`*^9, 
   3.889055938055687*^9}, {3.889058591883483*^9, 3.8890585989581165`*^9}, {
   3.8890586398201203`*^9, 3.8890586412915077`*^9}, {3.8890586847547903`*^9, 
   3.8890586894029675`*^9}, {3.889059226951191*^9, 3.889059228236294*^9}, {
   3.889059331118971*^9, 3.889059331132559*^9}, {3.8890597949101176`*^9, 
   3.889059809706137*^9}, {3.8890598511338387`*^9, 3.889059968589416*^9}, 
   3.889060009495178*^9, {3.889060075719466*^9, 3.8890600981127143`*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"fcfad0f7-8d74-470f-91b3-73e347e63cc7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"a", "+", "b"}], "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", 
      RowBox[{"a", "+", "b"}]], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"a", "+", "b"}], "2"], ",", 
     FractionBox["1", "x"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "a"}], ",", 
     RowBox[{
      RowBox[{"2", " ", "x"}], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8812419481473436`*^9, 3.8812419884716463`*^9}, {
   3.8812420328120494`*^9, 3.8812420472353463`*^9}, 3.8812423676346383`*^9, 
   3.8812424190123997`*^9, 3.881248926754794*^9, 3.881248960524167*^9, 
   3.881249151692752*^9, 3.8812525093492107`*^9, {3.881263383645153*^9, 
   3.8812633883594255`*^9}, 3.8822005691071963`*^9, 3.8822006145621386`*^9, 
   3.882200678540535*^9, 3.882200807769185*^9, 3.882200958946048*^9, {
   3.8890537747634616`*^9, 3.889053787277115*^9}, {3.889053984226675*^9, 
   3.889054006079468*^9}, 3.8890540812591887`*^9, {3.8890549254876714`*^9, 
   3.889054942607421*^9}, {3.8890550000816965`*^9, 3.8890550199950476`*^9}, 
   3.8890550962967024`*^9, 3.889055129915924*^9, {3.8890553611597753`*^9, 
   3.889055390933779*^9}, {3.889055774265524*^9, 3.8890557874416385`*^9}, 
   3.8890558988916054`*^9, 3.8890559598391476`*^9, 3.889059196527463*^9, 
   3.889059342183187*^9, 3.88905981021385*^9, {3.8890598515791397`*^9, 
   3.8890599691147623`*^9}, 3.889060099212435*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"6cdb8a83-e535-4fc4-a454-50154dbff36a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBP", "Section",
 CellChangeTimes->{
  3.881248909154277*^9},ExpressionUUID->"0870485f-1fbb-4531-ade5-\
39dfcfc3ddc3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "IBP", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IBP", "[", 
    RowBox[{"u_", ",", " ", "v_", ",", " ", "x_Symbol"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coef", ",", "rem"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coef", ",", "rem"}], "}"}], "=", 
       RowBox[{"CoefficientSeparation", "[", 
        RowBox[{
         RowBox[{"v", " ", 
          RowBox[{"D", "[", 
           RowBox[{"u", ",", " ", "x"}], "]"}]}], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"u", " ", "v"}], "-", 
        RowBox[{"coef", 
         TemplateBox[{"rem", "x"},
          "InactiveIntegrate",
          DisplayFunction->(RowBox[{
             StyleBox["\[Integral]", "Inactive"], 
             RowBox[{#, 
               RowBox[{
                 StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
          InterpretationFunction->(RowBox[{
             RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
             RowBox[{#, ",", #2}], "]"}]& )]}]}], "//", "Simplify"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBP", "[", 
     RowBox[{"f_", ",", " ", "x_Symbol"}], "]"}], " ", ":=", " ", 
    RowBox[{"IBP", "[", 
     RowBox[{"f", ",", " ", "x", ",", " ", "x"}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IBP", "[", 
    RowBox[{"u_", ",", " ", "v_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x_Symbol", ",", " ", "a_", ",", " ", "b_"}], "}"}]}], "]"}], 
   " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coef", ",", "rem"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coef", ",", "rem"}], "}"}], "=", 
       RowBox[{"CoefficientSeparation", "[", 
        RowBox[{
         RowBox[{"v", " ", 
          RowBox[{"D", "[", 
           RowBox[{"u", ",", " ", "x"}], "]"}]}], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         UnderscriptBox["\[Limit]", 
          RowBox[{"x", "->", "b"}]], 
         RowBox[{"u", " ", "v"}]}], "-", 
        RowBox[{
         UnderscriptBox["\[Limit]", 
          RowBox[{"x", "->", "a"}]], 
         RowBox[{"u", " ", "v"}]}], "-", 
        RowBox[{"coef", 
         TemplateBox[{"rem", "x", "a", "b"},
          "InactiveIntegrate",
          DisplayFunction->(RowBox[{
             SubsuperscriptBox[
              StyleBox["\[Integral]", "Inactive"], #3, #4], 
             RowBox[{#, 
               RowBox[{
                 StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
          InterpretationFunction->(RowBox[{
             RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
             RowBox[{#, ",", 
               RowBox[{"{", 
                 RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}], "//",
        "Simplify"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBP", "[", 
     RowBox[{"f_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x_Symbol", ",", " ", "a_", ",", " ", "b_"}], "}"}]}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"IBP", "[", 
     RowBox[{"f", ",", " ", "x", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "a", ",", " ", "b"}], "}"}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"IBP", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"b", " ", "x"}], "+", "c"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", " ", "x"}], "]"}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"IBP", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8812410834260216`*^9, 3.881241134149821*^9}, {
   3.881241254961246*^9, 3.8812413680035696`*^9}, {3.881241470517207*^9, 
   3.881241501439555*^9}, {3.8812415507977233`*^9, 3.881241693887342*^9}, {
   3.881241853234975*^9, 3.8812418771560845`*^9}, {3.881242492384276*^9, 
   3.881242534238098*^9}, {3.881242579340028*^9, 3.8812426968652234`*^9}, 
   3.8812521964052157`*^9, 3.8812524928397207`*^9, {3.8822006961253505`*^9, 
   3.882200699226946*^9}, {3.8890585045880475`*^9, 3.8890585203069677`*^9}, {
   3.889059226976026*^9, 3.8890592269810314`*^9}, {3.8890593311390696`*^9, 
   3.8890593311430717`*^9}, {3.889060461027707*^9, 3.8890604634711876`*^9}, {
   3.8890605280058117`*^9, 3.8890605765441027`*^9}, {3.8890606839204807`*^9, 
   3.889060695482535*^9}, 3.8890607917205057`*^9},
 CellLabel->
  "In[317]:=",ExpressionUUID->"d98e5719-a905-4c40-ba62-eee6ff6ca634"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"c", "+", 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"b", "+", 
        RowBox[{"a", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "-", 
  TemplateBox[{
    RowBox[{
      RowBox[{"(", 
        RowBox[{"b", "+", 
          RowBox[{"2", " ", "a", " ", "x"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
        RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "x"},
   "InactiveIntegrate",
   DisplayFunction->(RowBox[{
      StyleBox["\[Integral]", "Inactive"], 
      RowBox[{#, 
        RowBox[{
          StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
      RowBox[{#, ",", #2}], "]"}]& )]}]], "Output",
 CellChangeTimes->{{3.881241096158072*^9, 3.881241103671297*^9}, {
   3.88124146574174*^9, 3.881241471108597*^9}, {3.881241689332575*^9, 
   3.8812416945595427`*^9}, {3.881241854792668*^9, 3.881241877430534*^9}, 
   3.881242445668012*^9, 3.8812424950309677`*^9, {3.881242528865363*^9, 
   3.8812425345635405`*^9}, {3.881242579969435*^9, 3.881242697442633*^9}, 
   3.8812489281468043`*^9, 3.881248962661623*^9, 3.881252510543561*^9, 
   3.8822007001348343`*^9, 3.8890584981049194`*^9, 3.8890605895369253`*^9, 
   3.889060713878621*^9, 3.889060794184311*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"890fef5b-bced-4691-8843-8faf04393a5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
  RowBox[{"\[Alpha]", " ", 
   TemplateBox[{
     RowBox[{"Cos", "[", 
       RowBox[{"\[Alpha]", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}], "x"},
    "InactiveIntegrate",
    DisplayFunction->(RowBox[{
       StyleBox["\[Integral]", "Inactive"], 
       RowBox[{#, 
         RowBox[{
           StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}]}]], "Output",
 CellChangeTimes->{{3.881241096158072*^9, 3.881241103671297*^9}, {
   3.88124146574174*^9, 3.881241471108597*^9}, {3.881241689332575*^9, 
   3.8812416945595427`*^9}, {3.881241854792668*^9, 3.881241877430534*^9}, 
   3.881242445668012*^9, 3.8812424950309677`*^9, {3.881242528865363*^9, 
   3.8812425345635405`*^9}, {3.881242579969435*^9, 3.881242697442633*^9}, 
   3.8812489281468043`*^9, 3.881248962661623*^9, 3.881252510543561*^9, 
   3.8822007001348343`*^9, 3.8890584981049194`*^9, 3.8890605895369253`*^9, 
   3.889060713878621*^9, 3.88906079418931*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"1e500dc7-b054-4386-b34d-c9791aaead1f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBS", "Section",
 CellChangeTimes->{{3.881248913047449*^9, 
  3.8812489142694426`*^9}},ExpressionUUID->"23a1a542-50f0-42ff-bd50-\
712fb6e1df74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "IBS", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "IBS", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"Assumptions", "\[Rule]", "$Assumptions"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"ex_", "\[Rule]", "et_"}], ",", "x_Symbol", ",", "t_Symbol", 
      ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"ex", ",", "t"}], "]"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"assum", "=", 
        RowBox[{"OptionValue", "[", "Assumptions", "]"}]}], ",", "u"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CheckVersion", "[", "13.1", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ex", "===", "x"}], ",", "\[IndentingNewLine]", 
            RowBox[{"f", "/.", 
             RowBox[{"x", "->", "et"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"IntegrateChangeVariables", "[", 
               RowBox[{
                TemplateBox[{"f", "x"},
                 "InactiveIntegrate",
                 DisplayFunction->(RowBox[{
                    StyleBox["\[Integral]", "Inactive"], 
                    RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
                 InterpretationFunction->(RowBox[{
                    RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                    RowBox[{#, ",", #2}], "]"}]& )], ",", "u", ",", 
                RowBox[{"u", "\[Equal]", "ex"}], ",", 
                RowBox[{"Assumptions", "->", "assum"}]}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/.", 
             RowBox[{"u", "->", "et"}]}]}], "\[IndentingNewLine]", "]"}], 
          RowBox[{"D", "[", 
           RowBox[{"et", ",", "t"}], "]"}]}], "/.", 
         RowBox[{
          RowBox[{"C", "[", "_", "]"}], "->", "0"}]}], "\[IndentingNewLine]", 
        ",", "assum"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"x_Symbol", "\[Rule]", "et_"}], ",", "t_Symbol", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", 
   RowBox[{"IBS", "[", 
    RowBox[{"f", ",", 
     RowBox[{"x", "->", "et"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"IBS", "[", 
      RowBox[{"f_", ",", 
       RowBox[{"ex_", "\[Rule]", "t_Symbol"}], ",", "x_Symbol", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
     RowBox[{
      RowBox[{"x", "=!=", "t"}], "&&", 
      RowBox[{"FreeQ", "[", 
       RowBox[{"ex", ",", "t"}], "]"}]}]}], ":=", 
    RowBox[{"IBS", "[", 
     RowBox[{"f", ",", 
      RowBox[{"ex", "->", "t"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], ",", 
      RowBox[{"ex_", "\[Rule]", "et_"}], ",", "x_Symbol", ",", "t_Symbol", 
      ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"ex", ",", "t"}], "]"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"assum", "=", 
        RowBox[{"OptionValue", "[", "Assumptions", "]"}]}], ",", "u", ",", 
       "temp"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CheckVersion", "[", "13.1", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ex", "===", "x"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          TemplateBox[{"f", "x", "a", "b"},
           "InactiveIntegrate",
           DisplayFunction->(RowBox[{
              SubsuperscriptBox[
               StyleBox["\[Integral]", "Inactive"], #3, #4], 
              RowBox[{#, 
                RowBox[{
                  StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
           InterpretationFunction->(RowBox[{
              RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
              RowBox[{#, ",", 
                RowBox[{"{", 
                  RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "/.", 
          RowBox[{"x", "->", "u"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"IntegrateChangeVariables", "[", 
          RowBox[{
           TemplateBox[{"f", "x", "a", "b"},
            "InactiveIntegrate",
            DisplayFunction->(RowBox[{
               SubsuperscriptBox[
                StyleBox["\[Integral]", "Inactive"], #3, #4], 
               RowBox[{#, 
                 RowBox[{
                   StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
            InterpretationFunction->(RowBox[{
               RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
               RowBox[{#, ",", 
                 RowBox[{"{", 
                   RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], ",", 
           "u", ",", 
           RowBox[{"u", "\[Equal]", "ex"}], ",", 
           RowBox[{"Assumptions", "->", "assum"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"et", "===", "t"}], ",", "\[IndentingNewLine]", 
          RowBox[{"temp", "/.", 
           RowBox[{"u", "->", "t"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"IntegrateChangeVariables", "[", 
           RowBox[{"temp", ",", "t", ",", 
            RowBox[{"u", "==", "et"}], ",", 
            RowBox[{"Assumptions", "->", "assum"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", "assum"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], ",", 
      RowBox[{"x_Symbol", "\[Rule]", "et_"}], ",", "t_Symbol", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", 
   RowBox[{"IBS", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"x", "->", "et"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"IBS", "[", 
      RowBox[{"f_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_"}], "}"}], ",", 
       RowBox[{"ex_", "\[Rule]", "t_Symbol"}], ",", "x_Symbol", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
     RowBox[{
      RowBox[{"x", "=!=", "t"}], "&&", 
      RowBox[{"FreeQ", "[", 
       RowBox[{"ex", ",", "t"}], "]"}]}]}], ":=", 
    RowBox[{"IBS", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"ex", "->", "t"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"IBS", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{
    SuperscriptBox["E", "x"], "\[Rule]", 
    SuperscriptBox["E", "t"]}], ",", "x", ",", "t", ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"x", ">", "0"}], "&&", 
     RowBox[{"t", ">", "0"}]}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"IBS", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{
    RowBox[{"2", "x"}], "\[Rule]", 
    SuperscriptBox["E", "t"]}], ",", "x", ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8812501185982747`*^9, 3.8812501595253873`*^9}, {
   3.881250441863079*^9, 3.8812504509665236`*^9}, 3.88125049736209*^9, {
   3.8812505361095486`*^9, 3.88125057562376*^9}, {3.8812506367271*^9, 
   3.881250720217284*^9}, {3.881250982739813*^9, 3.8812510539273024`*^9}, {
   3.88125108999737*^9, 3.881251136919894*^9}, {3.8812511747547426`*^9, 
   3.8812511782688627`*^9}, {3.881251237859644*^9, 3.881251242551485*^9}, {
   3.881251291751128*^9, 3.8812514159179325`*^9}, {3.8812517291469507`*^9, 
   3.881251756013675*^9}, {3.8812519373876343`*^9, 3.881252062230215*^9}, {
   3.8812521740826983`*^9, 3.881252246766799*^9}, {3.8812522894637136`*^9, 
   3.8812522916847997`*^9}, {3.8812523308504343`*^9, 3.881252354906809*^9}, {
   3.8812524346601243`*^9, 3.8812524850068884`*^9}, {3.8812525167804737`*^9, 
   3.8812526299537115`*^9}, {3.8812526683656545`*^9, 3.881252707045879*^9}, {
   3.8812527597048073`*^9, 3.881252793251134*^9}, {3.88125283145623*^9, 
   3.881252888075912*^9}, {3.881253001656077*^9, 3.8812530215196753`*^9}, {
   3.881253062374042*^9, 3.881253081762101*^9}, {3.8812532995850477`*^9, 
   3.8812533421694384`*^9}, {3.881253382453553*^9, 3.8812534757402163`*^9}, {
   3.881253553975247*^9, 3.8812535672880754`*^9}, {3.88125361042743*^9, 
   3.881253756248664*^9}, {3.881253794219369*^9, 3.8812538359813766`*^9}, {
   3.8812538716807528`*^9, 3.8812539531971455`*^9}, {3.8812539990572057`*^9, 
   3.881254087631789*^9}, {3.881254127972443*^9, 3.8812541530296288`*^9}, {
   3.8812542721658278`*^9, 3.8812544258280554`*^9}, {3.8812545072004304`*^9, 
   3.881254519974309*^9}, {3.881254655234125*^9, 3.8812546796198215`*^9}, {
   3.881254723708355*^9, 3.8812547386305695`*^9}, {3.88125481230455*^9, 
   3.881254812729741*^9}, {3.8812548850784864`*^9, 3.8812550107871747`*^9}, {
   3.8812551285847874`*^9, 3.881255165137235*^9}, {3.881255195355729*^9, 
   3.8812552068693247`*^9}, {3.8812552442616286`*^9, 
   3.8812552682985454`*^9}, {3.88125530242895*^9, 3.8812553024692345`*^9}, {
   3.8812553354878483`*^9, 3.881255362908206*^9}, {3.8812555215499744`*^9, 
   3.88125552359336*^9}, {3.881255555356881*^9, 3.88125566324966*^9}, {
   3.881255864832225*^9, 3.8812559721619787`*^9}, {3.8812560566197586`*^9, 
   3.8812561051948843`*^9}, {3.8812562057198954`*^9, 
   3.8812562710189867`*^9}, {3.881256631753805*^9, 3.881256655584632*^9}, {
   3.881256686995875*^9, 3.881257196404513*^9}, {3.8812572436486535`*^9, 
   3.8812572681068573`*^9}, {3.881257318711217*^9, 3.881257361327052*^9}, {
   3.881257434474887*^9, 3.8812574358273134`*^9}, {3.8812575497527356`*^9, 
   3.8812576029089355`*^9}, 3.8812579159987116`*^9, {3.882200489881076*^9, 
   3.8822004954928846`*^9}, {3.8822007138779793`*^9, 3.882200739319167*^9}, {
   3.889058870032848*^9, 3.8890588783356028`*^9}, 3.889060789071501*^9, {
   3.889061717177822*^9, 3.8890617910826645`*^9}, {3.889061867179408*^9, 
   3.889061878100355*^9}, {3.8890619675131736`*^9, 3.8890620899489784`*^9}, {
   3.889062164549316*^9, 3.88906216492441*^9}, {3.889062949346699*^9, 
   3.889062960534238*^9}, {3.8890631525855865`*^9, 
   3.889063155083607*^9}},ExpressionUUID->"3a78e23b-afa1-4afd-b071-\
1979d220226b"],

Cell[BoxData[
 SuperscriptBox["t", "2"]], "Output",
 CellChangeTimes->{{3.8812570375264273`*^9, 3.8812570711812725`*^9}, {
   3.881257110046982*^9, 3.8812571158040648`*^9}, {3.8812571883470535`*^9, 
   3.8812571971375866`*^9}, {3.8812572445727463`*^9, 
   3.8812572684852047`*^9}, {3.8812573228156233`*^9, 3.8812573616958375`*^9}, 
   3.881257436343524*^9, {3.8812575507605095`*^9, 3.881257559200346*^9}, 
   3.881257595417079*^9, 3.8812579163155446`*^9, 3.882200718021447*^9, 
   3.889061735760664*^9, 3.889061791669753*^9, 3.8890619291115685`*^9, 
   3.8890620057909803`*^9, 3.889062135615346*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"cd03747e-6abb-4d83-a05d-6823343737e0"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"3", " ", "t"}]], "8"], "t", 
   RowBox[{"-", "\[Infinity]"}], 
   RowBox[{"Log", "[", "2", "]"}]},
  "InactiveIntegrate",
  DisplayFunction->(RowBox[{
     SubsuperscriptBox[
      StyleBox["\[Integral]", "Inactive"], #3, #4], 
     RowBox[{#, 
       RowBox[{
         StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8812570375264273`*^9, 3.8812570711812725`*^9}, {
   3.881257110046982*^9, 3.8812571158040648`*^9}, {3.8812571883470535`*^9, 
   3.8812571971375866`*^9}, {3.8812572445727463`*^9, 
   3.8812572684852047`*^9}, {3.8812573228156233`*^9, 3.8812573616958375`*^9}, 
   3.881257436343524*^9, {3.8812575507605095`*^9, 3.881257559200346*^9}, 
   3.881257595417079*^9, 3.8812579163155446`*^9, 3.882200718021447*^9, 
   3.889061735760664*^9, 3.889061791669753*^9, 3.8890619291115685`*^9, 
   3.8890620057909803`*^9, 3.88906213569696*^9},
 CellLabel->
  "Out[403]=",ExpressionUUID->"85e292da-5e89-43f2-9f41-09bc7235e962"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ApartArcTan", "Section",
 CellChangeTimes->{
  3.8812490891049585`*^9},ExpressionUUID->"87fd259e-20f9-4879-89a8-\
14ec4ecb826d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "ApartArcTan", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "ApartArcTan", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ApartArcTan", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"GenerateConstant", "\[Rule]", "False"}], ",", 
     RowBox[{"SimplifyFunction", "\[Rule]", "Simplify"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ApartArcTan", "[", 
     RowBox[{"expr_", ",", "x_Symbol", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{"RationalExpressionQ", "[", 
     RowBox[{"expr", ",", "x"}], "]"}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simp", "=", 
        RowBox[{"OptionValue", "[", "SimplifyFunction", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"gene", "=", 
        RowBox[{"OptionValue", "[", "GenerateConstant", "]"}]}], ",", 
       "\[IndentingNewLine]", "roots", ",", "result", ",", "zeros", ",", 
       "offset"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roots", "=", 
       RowBox[{"x", "/.", "\[VeryThinSpace]", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"expr", "\[Equal]", "\[ImaginaryI]"}], ",", "x"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ArcTan", "@", 
          RowBox[{"simp", "@", 
           FractionBox[
            RowBox[{"x", "-", 
             RowBox[{"Re", "@", "r"}]}], 
            RowBox[{"Im", "@", "r"}]]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "roots"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "gene"}], ",", 
        RowBox[{"Return", "@", "result"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"zeros", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"DeleteDuplicates", "@", "\[VeryThinSpace]", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Denominator", "@", 
             RowBox[{"Together", "@", "expr"}]}], "\[Equal]", "0"}], ",", 
           "x"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "+=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "zeros"}], "===", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ArcTan", "@", "expr"}], "-", "result"}], "/.", 
          "\[VeryThinSpace]", 
          RowBox[{"x", "\[Rule]", "0"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"offset", "=", 
           RowBox[{"Append", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 UnderscriptBox["\[Limit]", 
                  TagBox[
                   RowBox[{"x", "\[Rule]", 
                    SuperscriptBox["i", "-"]}],
                   "AlternateLimitDirection"]], 
                 RowBox[{"ArcTan", "[", "expr", "]"}]}], "-", 
                RowBox[{"(", 
                 RowBox[{"result", "/.", "\[VeryThinSpace]", 
                  RowBox[{"x", "\[Rule]", "i"}]}], ")"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "zeros"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               UnderscriptBox["\[Limit]", 
                TagBox[
                 RowBox[{"x", "\[Rule]", 
                  SuperscriptBox[
                   RowBox[{"Last", "[", "zeros", "]"}], "+"]}],
                 "AlternateLimitDirection"]], 
               RowBox[{"ArcTan", "[", "expr", "]"}]}], "-", 
              RowBox[{"(", 
               RowBox[{"result", "/.", "\[VeryThinSpace]", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"Last", "@", "zeros"}]}]}], ")"}]}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Piecewise", "[", "\[IndentingNewLine]", 
           RowBox[{"Append", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"offset", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{
                    "zeros", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "<", "x", "<", 
                    RowBox[{"zeros", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}]}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{
                    RowBox[{"Length", "@", "zeros"}], "-", "1"}]}], "}"}]}], 
                "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"First", "[", "offset", "]"}], ",", 
                 RowBox[{"x", "<", 
                  RowBox[{"First", "[", "zeros", "]"}]}]}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Last", "[", "offset", "]"}], ",", 
               RowBox[{"x", ">", 
                RowBox[{"Last", "[", "zeros", "]"}]}]}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"result", "//", "Simplify"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ApartArcTan", "[", 
     RowBox[{"expr_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"ApartArcTan", "[", 
     RowBox[{"expr", ",", 
      RowBox[{"ExpressionPivot", "@", "expr"}], ",", "opts"}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApartArcTan", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["x", "2"], ",", 
      RowBox[{"t", "+", 
       FractionBox["1", "t"]}], ",", 
      RowBox[{"u", "-", 
       FractionBox["1", "u"]}]}], "}"}], ",", 
    RowBox[{"GenerateConstant", "->", "True"}]}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{{3.8812579937599535`*^9, 3.8812580454554296`*^9}, {
   3.881258091123928*^9, 3.8812581000331306`*^9}, {3.881258400107002*^9, 
   3.88125848916411*^9}, 3.881258529716839*^9, {3.8812586543925095`*^9, 
   3.881258656763394*^9}, {3.8812587169615717`*^9, 3.881258751283495*^9}, {
   3.881258915069893*^9, 3.881259002964484*^9}, {3.8812591023158693`*^9, 
   3.881259106912133*^9}, {3.881259256232505*^9, 3.881259263718057*^9}, {
   3.881260942875499*^9, 3.8812609745674343`*^9}, {3.881261018392753*^9, 
   3.8812610442157116`*^9}, {3.881261083960019*^9, 3.8812612191590977`*^9}, {
   3.881261252393591*^9, 3.881261329037558*^9}, {3.8812613846207304`*^9, 
   3.8812614082953234`*^9}, {3.881261442822*^9, 3.881261442881712*^9}, {
   3.881263409387904*^9, 3.881263469837472*^9}, {3.88126353175771*^9, 
   3.8812635350046625`*^9}, {3.88126358216722*^9, 3.88126371509764*^9}, {
   3.881264007939382*^9, 3.8812640089345365`*^9}, {3.882200625076586*^9, 
   3.882200633522716*^9}, {3.8822008204125423`*^9, 3.882200846872743*^9}, {
   3.8822008821188498`*^9, 3.8822008827757382`*^9}, {3.889062190097275*^9, 
   3.8890622143260984`*^9}, {3.889062410071129*^9, 3.8890624174009476`*^9}, {
   3.8890624944307275`*^9, 3.8890625160054226`*^9}, {3.889062555743532*^9, 
   3.88906268127707*^9}, {3.8890627619787054`*^9, 3.8890627801673503`*^9}, {
   3.889062896028719*^9, 3.889062933833395*^9}, {3.8890631712916107`*^9, 
   3.8890631812766867`*^9}, {3.8890736824513035`*^9, 3.8890736960214252`*^9}},
 CellLabel->
  "In[1149]:=",ExpressionUUID->"c6911c1f-5536-4bac-aab2-4c6f9b5462be"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"1", "-", 
           RowBox[{
            SqrtBox["2"], " ", "x"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"1", "+", 
           RowBox[{
            SqrtBox["2"], " ", "x"}]}], "]"}]}]}], ")"}]}]},
    {
     RowBox[{
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        RowBox[{"1", "-", 
         SqrtBox["5"]}]], "]"}], "+", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        RowBox[{"1", "+", 
         SqrtBox["5"]}]], "]"}], "+", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"-", 
               FractionBox["\[Pi]", "2"]}], 
              RowBox[{"t", "<", "0"}]},
             {
              FractionBox["\[Pi]", "2"], 
              RowBox[{"t", ">", "0"}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}},
            Selectable->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True], ")"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         SqrtBox["3"], "-", 
         RowBox[{"2", " ", "u"}]}], "]"}]}], "+", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        SqrtBox["3"], "+", 
        RowBox[{"2", " ", "u"}]}], "]"}], "+", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              FractionBox["\[Pi]", "2"], 
              RowBox[{"u", "<", "0"}]},
             {
              RowBox[{"-", 
               FractionBox["\[Pi]", "2"]}], 
              RowBox[{"u", ">", "0"}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}},
            Selectable->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True], ")"}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.881261290454566*^9, {3.881261385796606*^9, 3.881261408824586*^9}, 
   3.8812614433943033`*^9, {3.8812634435957384`*^9, 3.881263470177644*^9}, 
   3.881263535313285*^9, {3.8812635835554004`*^9, 3.881263630943241*^9}, 
   3.8812636688401675`*^9, {3.8812637031068983`*^9, 3.881263715439636*^9}, {
   3.882200824540231*^9, 3.8822008472341485`*^9}, 3.8822008837525187`*^9, {
   3.8890621964116263`*^9, 3.8890622169243155`*^9}, 3.889062618282593*^9, 
   3.889062730276738*^9, 3.8890627806631584`*^9, 3.8890631935298014`*^9, 
   3.8890719329844265`*^9, 3.889073698808498*^9},
 CellLabel->
  "Out[1154]=",ExpressionUUID->"cf381d1d-02bf-4545-aa3e-8cf4deadde7c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RealFactor", "Section",
 CellChangeTimes->{
  3.8812491058477163`*^9},ExpressionUUID->"11e84cdc-6ae0-4d8f-ad5f-\
74b77672d2dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "RealFactor", "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "RealFactor", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RealFactor", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"SimplifyFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"RootReduce", "/*", "ToRadicals", "/*", "Simplify"}], ")"}]}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealFactor", "[", 
     RowBox[{"poly_", ",", "x_Symbol", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{"PolynomialQ", "[", 
     RowBox[{"poly", ",", "x"}], "]"}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"simp", "=", 
        RowBox[{"OptionValue", "[", "SimplifyFunction", "]"}]}], ",", "roots",
        ",", 
       RowBox[{"result", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FreeQ", "[", 
         RowBox[{"poly", ",", "x"}], "]"}], ",", 
        RowBox[{"Return", "@", "poly"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{
         RowBox[{"x", "/.", "\[VeryThinSpace]", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"poly", "\[Equal]", "0"}], ",", "x"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"#1", "\[Conjugate]"}], "==", "#2"}], "]"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"poly", ",", "x", ",", 
         RowBox[{"Exponent", "[", 
          RowBox[{"poly", ",", "x"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
       RowBox[{"Times", "@@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"x", "-", "root"}], 
                  RowBox[{"root", "\[Element]", 
                   TemplateBox[{},
                    "Reals"]}]},
                 {
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"Re", "@", "root"}]}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"Im", "@", "root"}], ")"}], "2"]}], "True"}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                Selectable->True]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], "//", "simp"}], ",", 
          RowBox[{"{", 
           RowBox[{"root", ",", "roots"}], "}"}]}], "]"}]}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealFactor", "[", 
     RowBox[{"poly_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"RealFactor", "[", 
     RowBox[{"poly", ",", 
      RowBox[{"ExpressionPivot", "[", "poly", "]"}], ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RealFactor", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "4"], "-", 
      SuperscriptBox["x", "2"], "+", "x", "-", "1"}], ",", 
     RowBox[{
      SuperscriptBox["x", "4"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["x", "5"], "-", "1"}]}], "}"}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{
  3.8812580491683607`*^9, {3.881263966627664*^9, 3.881263969261916*^9}, 
   3.8812640734317923`*^9, {3.881264231738807*^9, 3.8812642858785086`*^9}, {
   3.8812643224956493`*^9, 3.8812643747459936`*^9}, {3.8812645412010183`*^9, 
   3.8812645532896304`*^9}, {3.8812646007263856`*^9, 
   3.8812646645781016`*^9}, {3.8812654068297653`*^9, 
   3.8812654805697947`*^9}, {3.881265515385543*^9, 3.8812656484654913`*^9}, {
   3.881265684440327*^9, 3.8812657084259996`*^9}, {3.8812657541001334`*^9, 
   3.8812658204188547`*^9}, {3.8812658768175325`*^9, 
   3.8812658814140096`*^9}, {3.8812659535759387`*^9, 
   3.8812660192784824`*^9}, {3.8812660870251684`*^9, 3.8812663212734404`*^9}, 
   3.8812663617997694`*^9, {3.8812667388641176`*^9, 3.8812668408070326`*^9}, {
   3.8812669414644504`*^9, 3.881266952569973*^9}, {3.8812670371818304`*^9, 
   3.8812673389672956`*^9}, {3.8812673760999093`*^9, 
   3.8812674060054393`*^9}, {3.8812674786771097`*^9, 3.88126758441547*^9}, {
   3.8813888028648195`*^9, 3.8813888047747216`*^9}, {3.8821882642438083`*^9, 
   3.8821882644274273`*^9}, {3.8822008519990673`*^9, 
   3.8822008755694294`*^9}, {3.8890622700363526`*^9, 
   3.8890622809350915`*^9}, {3.889063406169979*^9, 3.889063556769661*^9}, {
   3.889064390693195*^9, 3.889064440554367*^9}, {3.889067113605857*^9, 
   3.8890671237570047`*^9}, 3.889067172800167*^9, {3.8890672595806823`*^9, 
   3.889067330322604*^9}, {3.889067367207037*^9, 3.889067387381624*^9}, {
   3.8890674420354147`*^9, 3.8890674692047625`*^9}, {3.8890684150220013`*^9, 
   3.889068544281705*^9}, {3.889068587627345*^9, 3.8890686291851873`*^9}, {
   3.8890687802315445`*^9, 3.889068789160838*^9}, {3.889069643192693*^9, 
   3.8890697419813986`*^9}, {3.8890698602418704`*^9, 3.889069867443205*^9}, {
   3.8890700155417075`*^9, 3.8890701923329983`*^9}, {3.8890702260309925`*^9, 
   3.889070267033826*^9}, {3.8890703146105804`*^9, 3.8890703306473455`*^9}, {
   3.8890703747003484`*^9, 3.8890704668172913`*^9}, {3.8890705393665533`*^9, 
   3.8890706275687304`*^9}, {3.889070787525052*^9, 3.8890707959442616`*^9}, {
   3.8890708276563687`*^9, 3.88907086774119*^9}, {3.8890709153327303`*^9, 
   3.889071043488144*^9}, {3.889071284711914*^9, 3.8890715435927467`*^9}, {
   3.889071589413921*^9, 3.889071589563225*^9}, {3.8890719717316427`*^9, 
   3.889072000978933*^9}, {3.889072066333835*^9, 3.889072080233167*^9}, {
   3.889072740583477*^9, 3.889072878573455*^9}, {3.8890729350417075`*^9, 
   3.8890729834793925`*^9}, {3.889073671626507*^9, 3.8890736750053225`*^9}, {
   3.8890740869936304`*^9, 3.8890740970854273`*^9}},
 CellLabel->
  "In[1143]:=",ExpressionUUID->"4c9516ba-7077-4b96-8726-f5628ebd60bf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      FractionBox["1", "72"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"2", "/", "3"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"839", "-", 
               RowBox[{"87", " ", 
                SqrtBox["93"]}]}], ")"}], 
             RowBox[{"1", "/", "3"}]]}], "+", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"2", "/", "3"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"839", "+", 
               RowBox[{"87", " ", 
                SqrtBox["93"]}]}], ")"}], 
             RowBox[{"1", "/", "3"}]]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"29", "-", 
                 RowBox[{"3", " ", 
                  SqrtBox["93"]}]}], ")"}]}], ")"}], 
             RowBox[{"1", "/", "3"}]], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"29", "+", 
                 RowBox[{"3", " ", 
                  SqrtBox["93"]}]}], ")"}]}], ")"}], 
             RowBox[{"1", "/", "3"}]], "-", 
            RowBox[{"6", " ", "x"}]}], ")"}], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"29", "-", 
                RowBox[{"3", " ", 
                 SqrtBox["93"]}]}], ")"}]}], ")"}], 
            RowBox[{"1", "/", "3"}]], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"29", "+", 
                RowBox[{"3", " ", 
                 SqrtBox["93"]}]}], ")"}]}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], ")"}]}], "+", "x"}], ")"}]}]},
    {
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SqrtBox["2"], " ", "x"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SqrtBox["2"], " ", "x"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}]}]},
    {
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "x", "-", 
        RowBox[{
         SqrtBox["5"], " ", "x"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "x", "+", 
        RowBox[{
         SqrtBox["5"], " ", "x"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "2"]}]}], ")"}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.8890706438581524`*^9, 3.8890707975343037`*^9, {3.8890708340388536`*^9, 
   3.889070868233267*^9}, {3.8890709158507566`*^9, 3.8890709648381386`*^9}, {
   3.889070996889553*^9, 3.8890710329881725`*^9}, 3.8890712924997516`*^9, {
   3.889071460363001*^9, 3.8890714864727182`*^9}, {3.8890715226589894`*^9, 
   3.889071543868573*^9}, 3.889071589850163*^9, 3.889071940954754*^9, {
   3.8890719762681513`*^9, 3.8890720014376287`*^9}, {3.889072862923274*^9, 
   3.889072884239982*^9}, {3.8890729383780093`*^9, 3.8890729838492856`*^9}, 
   3.8890736767645307`*^9},
 CellLabel->
  "Out[1148]=",ExpressionUUID->"42ae4c69-ff9e-4437-87a0-0e4ea0a4206e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RealApart", "Section",
 CellChangeTimes->{
  3.881249117933973*^9},ExpressionUUID->"090ecfcf-eec3-4fc4-a926-\
55581966e032"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "RealApart", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "RealApart", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RealApart", "]"}], ":=", 
   RowBox[{"Options", "[", "RealFactor", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealApart", "[", 
     RowBox[{"poly_", ",", "x_Symbol", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{"RationalExpressionQ", "[", 
     RowBox[{"poly", ",", "x"}], "]"}]}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"Numerator", "@", "poly"}], 
     RowBox[{"RealFactor", "[", 
      RowBox[{
       RowBox[{"Denominator", "@", "poly"}], ",", "opts"}], "]"}]], "//", 
    "Apart"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealApart", "[", 
     RowBox[{"poly_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"RealApart", "[", 
     RowBox[{"poly", ",", 
      RowBox[{"ExpressionPivot", "[", "poly", "]"}], ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RealApart", "[", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "4"], "+", "1"}]], ",", 
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", "5"}]], ",", 
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "4"], "+", 
       SuperscriptBox["x", "2"], "-", "1"}]]}], "}"}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{
  3.8812580521312733`*^9, {3.881263971472271*^9, 3.881263973162546*^9}, {
   3.881264076293928*^9, 3.8812640770577106`*^9}, {3.881267635295848*^9, 
   3.881267740411018*^9}, {3.882200901044587*^9, 3.88220091575585*^9}, {
   3.889071592387395*^9, 3.889071593135217*^9}, {3.889071656958829*^9, 
   3.889071659757134*^9}},
 CellLabel->
  "In[1104]:=",ExpressionUUID->"ad4da761-711f-4c1e-b169-b98f33f3076e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         SqrtBox["2"]}], "+", "x"}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SqrtBox["2"], " ", "x"}], "-", 
          SuperscriptBox["x", "2"]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        SqrtBox["2"], "+", "x"}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SqrtBox["2"], " ", "x"}], "+", 
          SuperscriptBox["x", "2"]}], ")"}]}]]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["5"], " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox["5"], "-", "x"}], ")"}]}]]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["5"], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox["5"], "+", "x"}], ")"}]}]]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         FractionBox["2", 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["5"]}], ")"}]}]]], 
        RowBox[{
         SqrtBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["5"]}], ")"}]}]], "-", 
         RowBox[{"2", " ", "x"}]}]]}], "-", 
      FractionBox[
       SqrtBox[
        FractionBox["2", 
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["5"]}], ")"}]}]]], 
       RowBox[{
        SqrtBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["5"]}], ")"}]}]], "+", 
        RowBox[{"2", " ", "x"}]}]], "-", 
      FractionBox["2", 
       RowBox[{
        SqrtBox["5"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.88907299101025*^9},
 CellLabel->
  "Out[1109]=",ExpressionUUID->"e78fd9e1-2801-4fbf-80e5-c346b2513034"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CorrectionTest", "Section",
 CellChangeTimes->{
  3.881249142658318*^9},ExpressionUUID->"bf1f2ecb-cd6e-4229-9641-\
c2b700125777"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "CorrectionTest", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], "=", 
    "\"\<`` \:8ba1\:7b97\:8d85\:65f6\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CorrectionTest", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Skip", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TimeConstraint", "\[Rule]", "\[Infinity]"}], ",", 
     RowBox[{"VerifyDiscontinuities", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "$MinPrecision"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CorrectionTest", "[", 
     RowBox[{"org_", ",", "res_", ",", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"table", "=", GridBox[{
           {
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\:5b9a\:4e49\:57df\>\"", ",", "Bold"}], "]"}], 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\:95f4\:65ad\:70b9\>\"", ",", "Bold"}], "]"}]},
           {
            RowBox[{"Style", "[", 
             RowBox[{"True", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}], 
            RowBox[{"Style", "[", 
             RowBox[{"False", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}]},
           {
            RowBox[{"Style", "[", 
             RowBox[{"True", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}], 
            RowBox[{"Style", "[", 
             RowBox[{"False", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}]},
           {
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\:56fe\:50cf\>\"", ",", "Bold"}], "]"}], 
            "\[SpanFromLeft]"},
           {"Null", "\[SpanFromLeft]"}
          }]}], ",", "\[IndentingNewLine]", 
        RowBox[{"skip", "=", 
         RowBox[{"OptionValue", "[", "Skip", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"cons", "=", 
         RowBox[{"OptionValue", "[", "TimeConstraint", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"veri", "=", 
         RowBox[{"OptionValue", "[", "VerifyDiscontinuities", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"prec", "=", 
         RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"dom", "=", "True"}]}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CheckVersion", "[", "12.2", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "[", "skip", "]"}]}], ",", 
         RowBox[{"skip", "=", 
          RowBox[{"{", "skip", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "[", "veri", "]"}]}], ",", 
         RowBox[{"veri", "=", 
          RowBox[{"{", "veri", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"AssociationQ", "[", "cons", "]"}]}], ",", 
         RowBox[{"cons", "=", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"\"\<\:5b9a\:4e49\:57df\>\"", "\[Rule]", "cons"}], ",", 
            RowBox[{"\"\<\:95f4\:65ad\:70b9\>\"", "\[Rule]", "cons"}], ",", 
            RowBox[{"\"\<\:56fe\:50cf\>\"", "\[Rule]", "cons"}]}], "]"}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"skip", ",", "\"\<\:5b9a\:4e49\:57df\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"dom", "=", 
                   RowBox[{"Reduce", "[", 
                    RowBox[{
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{"org", ",", "x"}], "]"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}]}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Reduce", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{"res", ",", "x"}], "]"}], "&&", "dom"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], 
             ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"cons", "[", "\"\<\:5b9a\:4e49\:57df\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], 
               ",", "\"\<\:5b9a\:4e49\:57df\>\""}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"skip", ",", "\"\<\:95f4\:65ad\:70b9\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Reduce", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FunctionDiscontinuities", "[", 
                    RowBox[{"org", ",", "x"}], "]"}], "&&", "dom"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Reduce", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FunctionDiscontinuities", "[", 
                    RowBox[{"res", ",", "x"}], "]"}], "&&", "dom"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], 
             ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"cons", "[", "\"\<\:95f4\:65ad\:70b9\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], 
               ",", "\"\<\:95f4\:65ad\:70b9\>\""}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"skip", ",", "\"\<\:56fe\:50cf\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"table", "\[LeftDoubleBracket]", 
              RowBox[{"5", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"Plot", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"org", ",", "res", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   SubscriptBox["\[PartialD]", "x"], 
                   RowBox[{"(", 
                    RowBox[{"res", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", "p_", "]"}], "\[Rule]", 
                    TagBox[GridBox[{
                    {"\[Piecewise]", GridBox[{
                    {"p", 
                    RowBox[{"p", ">", "0"}]},
                    {
                    RowBox[{"-", "p"}], 
                    RowBox[{"p", "<", "0"}]}
                    },
                    AllowedDimensions->{2, Automatic},
                    Editable->True,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                    Selectable->True]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
                    "Piecewise",
                    DeleteWithContents->True,
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False,
                    StripWrapperBoxes->True]}], ",", 
                    RowBox[{
                    RowBox[{"Sign", "[", "p_", "]"}], "\[Rule]", 
                    TagBox[GridBox[{
                    {"\[Piecewise]", GridBox[{
                    {"1", 
                    RowBox[{"p", ">", "0"}]},
                    {
                    RowBox[{"-", "1"}], 
                    RowBox[{"p", "<", "0"}]}
                    },
                    AllowedDimensions->{2, Automatic},
                    Editable->True,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                    Selectable->True]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
                    "Piecewise",
                    DeleteWithContents->True,
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False,
                    StripWrapperBoxes->True]}]}], "}"}]}], ")"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", "96"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Black", ",", 
                  RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                  RowBox[{"Point", "[", "\[IndentingNewLine]", 
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$MinPrecision", "=", "prec"}], "}"}], ",", 
                    RowBox[{"N", "@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"res", "/.", "\[VeryThinSpace]", 
                    RowBox[{"x", "\[Rule]", "i"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "veri"}], "}"}]}], "]"}]}]}], "]"}], 
                   "\[IndentingNewLine]", "]"}]}], "}"}]}]}], 
              "\[IndentingNewLine]", "]"}]}], ",", 
            RowBox[{"cons", "[", "\"\<\:56fe\:50cf\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], 
               ",", "\"\<\:56fe\:50cf\>\""}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Grid", "[", 
         RowBox[{"table", ",", 
          RowBox[{"Alignment", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
          RowBox[{"Spacings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", 
          RowBox[{"ItemSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", "0.5", "]"}], ",", "Automatic"}], "}"}]}],
           ",", 
          RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CorrectionTest", "[", 
  RowBox[{"x", ",", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8812580555141573`*^9, 3.8812638517804313`*^9, 3.881264079722681*^9, {
   3.8812678234642253`*^9, 3.8812678299343767`*^9}, 3.8812681404165487`*^9, {
   3.881268229655447*^9, 3.881268398341589*^9}, {3.8812684529980655`*^9, 
   3.881268759114216*^9}, {3.882200925828741*^9, 3.8822009319937315`*^9}, {
   3.889058870052693*^9, 3.889058878347475*^9}, {3.8971325288478365`*^9, 
   3.8971325289852533`*^9}},
 CellLabel->
  "In[991]:=",ExpressionUUID->"b0d91778-42e8-4862-8bdb-9a37ac55d0ba"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"\:5b9a\:4e49\:57df\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\:95f4\:65ad\:70b9\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     ItemBox[
      StyleBox[
       RowBox[{"x", "\[Element]", 
        TemplateBox[{},
         "Reals"]}],
       StripOnInput->False,
       LineColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FrontFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       BackFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       GraphicsColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FontWeight->Bold,
       FontColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.]],
      ItemSize->Automatic,
      StripOnInput->False], 
     ItemBox[
      StyleBox["False",
       StripOnInput->False,
       LineColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FrontFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       BackFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       GraphicsColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FontWeight->Bold,
       FontColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.]],
      ItemSize->Automatic,
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox[
       RowBox[{"x", "\[Element]", 
        TemplateBox[{},
         "Reals"]}],
       StripOnInput->False,
       LineColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FrontFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       BackFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       GraphicsColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FontWeight->Bold,
       FontColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.]],
      ItemSize->Automatic,
      StripOnInput->False], 
     ItemBox[
      StyleBox["False",
       StripOnInput->False,
       LineColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FrontFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       BackFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       GraphicsColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FontWeight->Bold,
       FontColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.]],
      ItemSize->Automatic,
      StripOnInput->False]},
    {
     StyleBox["\<\"\:56fe\:50cf\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]"},
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.23780781740448254`, 0.6887454706969063, 1.], 
          AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF1O0vFAAcwPG74xhxL7rO1tku7nba0fQwT3MqTDFjxSHWVbccye6mmTw1
mkZcoZuhOi21PBNJWapDXDqTTrFMGi4x5yHGdWd3nGrrfr8X333+g6/zxZTI
BBKBQAj/2z/j26SrOzvWvWb3GOku3C1UcbKWn76Jukx1DS6voYt2s08m1OiV
ZM/Yjn40l/2tN7EQlVWxyoYpaPV0UUqEjRXoMMI7xaGRQeVpXtAQ2xIM4bDT
WEwL0LeVX6c6SAINtxKpRzhE8Le+puL8fgKoYJZ5dItNPWa55OsdbsItsNzf
2zsgxwDGP4idW6zeBFX1DBuiTAcy7J4d7unUgrZO8ypN0zooiiq419CwBgr6
p4cYZSsg86gp4n2eBmxM6lC/6ZwDkzfa+bdlatA9lxxnxZoEqVljuyqrRsFx
oci1bXYAzMh2LR2saAWb7vj41xx6etxs6eW8r4IbH0B7bRi3JWIUnEkb8EjP
nwR/dYX3ZSjVYF3hY4FQMgeydc3UzCoNOPV8n5ybtAJG350pWpKugQ9ri+Vh
leug5VnxCjlLC34SNNZH5uvAl/b0c3rRJugic16wDjOAhvT87WbeFrhkcKQ0
+JjAR5cKxxxZBH+z0oCPxXvZRJCS0hzYTyOB3UGv5J10C3BbfMErhmIJEq2/
3HfbRr1CUvtCCVag4XvLAm0dDRIppeE6tMQ461NgQJ3ojhItyRoMPiPhjFLR
8s8JyVJP1H2AsWybhWZG+5YH5qDvfkb7ZeehURYlxRoJes3feEApQ5Wvx8UF
b9HdoRs0eS/Kn6B0axXoqv4ERTiMOni+aA2cQgUKVUz2D7SRt2Rqn0f9Upmn
nFfRm8Rj+tgNdEQaVy3Vo3Snq8FKI/r/W+AfYipULQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$77847#1"]& ], 
        TagBox[
         {RGBColor[1., 0.519599248047801, 0.3096774660909407], 
          AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
h/wPW9xgsw==
           "]]},
         Annotation[#, "Charting`Private`Tag$77847#2"]& ], 
        TagBox[
         {RGBColor[0., 0.7904116386138192, 0.7051174262187454], 
          AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF1O0vFAAcwPG74xhxL7rO1tku7nba0fQwT3MqTDFjxSHWVbccye6mmTw1
mkZcoZuhOi21PBNJWapDXDqTTrFMGi4x5yHGdWd3nGrrfr8X333+g6/zxZTI
BBKBQAj/2z/j26SrOzvWvWb3GOku3C1UcbKWn76Jukx1DS6voYt2s08m1OiV
ZM/Yjn40l/2tN7EQlVWxyoYpaPV0UUqEjRXoMMI7xaGRQeVpXtAQ2xIM4bDT
WEwL0LeVX6c6SAINtxKpRzhE8Le+puL8fgKoYJZ5dItNPWa55OsdbsItsNzf
2zsgxwDGP4idW6zeBFX1DBuiTAcy7J4d7unUgrZO8ypN0zooiiq419CwBgr6
p4cYZSsg86gp4n2eBmxM6lC/6ZwDkzfa+bdlatA9lxxnxZoEqVljuyqrRsFx
oci1bXYAzMh2LR2saAWb7vj41xx6etxs6eW8r4IbH0B7bRi3JWIUnEkb8EjP
nwR/dYX3ZSjVYF3hY4FQMgeydc3UzCoNOPV8n5ybtAJG350pWpKugQ9ri+Vh
leug5VnxCjlLC34SNNZH5uvAl/b0c3rRJugic16wDjOAhvT87WbeFrhkcKQ0
+JjAR5cKxxxZBH+z0oCPxXvZRJCS0hzYTyOB3UGv5J10C3BbfMErhmIJEq2/
3HfbRr1CUvtCCVag4XvLAm0dDRIppeE6tMQ461NgQJ3ojhItyRoMPiPhjFLR
8s8JyVJP1H2AsWybhWZG+5YH5qDvfkb7ZeehURYlxRoJes3feEApQ5Wvx8UF
b9HdoRs0eS/Kn6B0axXoqv4ERTiMOni+aA2cQgUKVUz2D7SRt2Rqn0f9Upmn
nFfRm8Rj+tgNdEQaVy3Vo3Snq8FKI/r/W+AfYipULQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$77847#3"]& ]}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        GrayLevel[0], 
        PointSize[Medium], 
        PointBox[{}]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-3, 3}, {-2.9999998775510206`, 4.499999632653069}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], "\[SpanFromLeft]"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.5]}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Print",
 CellChangeTimes->{
  3.881268572352216*^9, {3.8812686075001817`*^9, 3.881268621485462*^9}, 
   3.8812687669116983`*^9, 3.8822009391160803`*^9, 3.8890716299821095`*^9},
 CellLabel->
  "During evaluation of \
In[991]:=",ExpressionUUID->"afb8b7c5-32f9-4f90-914a-909d23f110e4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindIdentities", "Section",
 CellChangeTimes->{{3.888798203493131*^9, 
  3.8887982076011333`*^9}},ExpressionUUID->"6a80edf5-fc8e-4cd2-ba32-\
96d03eb74cf4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "FindIdentities", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindIdentities", "[", 
      RowBox[{"expr1_", ",", "expr2_", ",", "x_Symbol"}], "]"}], "/;", 
     RowBox[{
      RowBox[{"RationalExpressionQ", "[", 
       RowBox[{"expr1", ",", "x"}], "]"}], "&&", 
      RowBox[{"RationalExpressionQ", "[", 
       RowBox[{"expr2", ",", "x"}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "roots", ",", "limit"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p1", "=", 
        RowBox[{
         RowBox[{"Numerator", "@", 
          RowBox[{"Simplify", "@", "expr1"}]}], " ", 
         RowBox[{"Denominator", "@", 
          RowBox[{"Simplify", "@", "expr2"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p2", "=", 
        RowBox[{
         RowBox[{"Numerator", "@", 
          RowBox[{"Simplify", "@", "expr2"}]}], " ", 
         RowBox[{"Denominator", "@", 
          RowBox[{"Simplify", "@", "expr1"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"roots", "=", 
        RowBox[{"x", "/.", " ", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[PartialD]", "x"], 
             FractionBox["p1", "p2"]}], "==", "0"}], ",", "x"}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "@", "roots"}]}], ",", 
         RowBox[{"Return", "@", 
          RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{
          RowBox[{"Reap", "[", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"limit", "=", 
               RowBox[{
                RowBox[{
                 UnderscriptBox["\[Limit]", 
                  RowBox[{"x", "->", "i"}]], 
                 FractionBox["p1", "p2"]}], "//", "Simplify"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"limit", "=!=", "0"}], "&&", 
                 RowBox[{"limit", "\[Element]", 
                  TemplateBox[{},
                   "Rationals"]}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"Sow", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Defer", "@", 
                    RowBox[{"Evaluate", "@", "p1"}]}], "-", 
                   RowBox[{"limit", " ", "p2"}]}], "==", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p1", "-", 
                    RowBox[{"limit", " ", "p2"}]}], "//", "Factor"}], ")"}]}],
                  "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "roots"}], "}"}]}], "\[IndentingNewLine]", 
            "]"}], "\[IndentingNewLine]", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "-", "1"}], ",", 
   RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", "x"}], "+", "5"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "x"}], "+", "3"}], ")"}], "2"], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"3", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"21", "x"}], "-", "25"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", "3"}], ")"}], "3"], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"9", "x"}], "+", "3"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "2"], "-", "3"}], 
      RowBox[{"x", "+", "1"}]], ")"}], "3"], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8887981841090336`*^9, 3.888798223317091*^9}, {
   3.888798570490137*^9, 3.8887985957897587`*^9}, {3.8887986438360105`*^9, 
   3.8887986832512817`*^9}, {3.8887987454163723`*^9, 
   3.8887989180634303`*^9}, {3.8887989769969673`*^9, 3.888799150112078*^9}, 
   3.888799202522771*^9, {3.8887992327924194`*^9, 3.888799254345852*^9}, {
   3.888799290638255*^9, 3.8887994517706633`*^9}, {3.8888382143889923`*^9, 
   3.8888382399266505`*^9}, {3.888838309087253*^9, 3.8888383099609127`*^9}, {
   3.88883835504439*^9, 3.8888384084622993`*^9}, {3.8888384766580877`*^9, 
   3.888838495081313*^9}, {3.888838546855976*^9, 3.888838708369732*^9}, {
   3.889073741170879*^9, 3.8890738298097725`*^9}, {3.8893039813168144`*^9, 
   3.8893040438246555`*^9}, {3.889304075577129*^9, 3.8893040797270985`*^9}, 
   3.8893041765234394`*^9, {3.8893042188123226`*^9, 3.8893042719908457`*^9}, {
   3.889304316898409*^9, 3.8893043636930833`*^9}, {3.8893044267763233`*^9, 
   3.889304505887692*^9}, {3.8893045624883966`*^9, 3.8893045650004816`*^9}, {
   3.8893046184274554`*^9, 3.8893047078716707`*^9}, {3.88930474633215*^9, 
   3.889304802754823*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"14fe0ea8-b87a-4d7c-8dca-4496bba5ab9e"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.88930480310003*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"5720f030-a941-4960-be8c-5fee8b5f4d82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["4", "17"]}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "x"}]}], ")"}], "2"]}], "+", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"2", " ", "x"}], "+", 
      SuperscriptBox["x", "2"]}], ")"}]}], "\[Equal]", 
   RowBox[{
    FractionBox["1", "17"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "7"}], "+", "x"}], ")"}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.889304803106553*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"dacbedb0-7b1c-41b5-b248-a105f5cffcd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"3", "+", "x"}], ")"}], "3"], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "25"}], "-", 
      RowBox[{"21", " ", "x"}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      SuperscriptBox["x", "3"]}], ")"}]}], "\[Equal]", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "3"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.8893048031125603`*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"25012b3c-48fb-45b4-b28a-91a97d6cdb00"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SuperscriptBox["x", "2"]}], ")"}], "3"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"9", " ", "x"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"]}]}], ")"}]}]}], "\[Equal]", 
    RowBox[{
     FractionBox["1", "9"], " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "135"}], "-", 
       RowBox[{"180", " ", "x"}], "+", 
       RowBox[{"18", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"108", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"37", " ", 
        SuperscriptBox["x", "4"]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["8", "3"]}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SuperscriptBox["x", "2"]}], ")"}], "3"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"9", " ", "x"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"]}]}], ")"}]}]}], "\[Equal]", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "15"}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["x", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "3"]}]}], ")"}], "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.8893048031180716`*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"25306060-4b30-41e0-a320-8799a3ddc420"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Li2Transform", "Section",
 CellChangeTimes->{
  3.890209886147686*^9},ExpressionUUID->"c90c1727-4a52-4082-8bb7-\
c975e7ea6866"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "Li2Transform", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"PolynomialQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"ft", ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       RowBox[{"1", "-", "z"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", "z", "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", "1", "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       FractionBox["1", "z"]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}], " ", 
     RowBox[{"Log", "[", "z", "]"}]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", "z", "]"}], "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "3"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      RowBox[{"1", "-", 
       FractionBox["1", "z"]}]}], "]"}], "+", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", "z"]}], "]"}], " ", 
     RowBox[{"Log", "[", 
      FractionBox["1", "z"], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}], " ", 
     RowBox[{"Log", "[", "z", "]"}]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", "z", "]"}], "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", "1", "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      FractionBox["1", 
       RowBox[{"1", "-", "z"}]]}], "]"}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "z"}], "]"}], "2"]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], "-", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       FractionBox["z", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "z"}]]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "z"}], "]"}], "2"]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "z"}], "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "-", "z"}]], "]"}], " ", 
     RowBox[{"Log", "[", 
      FractionBox["z", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "z"}]], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Li2Transform", "[", 
      RowBox[{"z1_", ",", "z2_"}], "]"}], "/;", 
     RowBox[{"PossibleZeroQ", "[", 
      RowBox[{"z1", "+", "z2"}], "]"}]}], ":=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       SuperscriptBox["z1", "2"]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ComplexPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", "z"}], "]"}], "+", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "z"}]}], "]"}], "-", 
     RowBox[{"Li2Transform", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "z"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "10"}], "-", 
      RowBox[{"10", "I"}]}], ",", 
     RowBox[{"10", "+", 
      RowBox[{"10", "I"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8902098971128583`*^9, 3.8902098981641135`*^9}, {
  3.8902099720471773`*^9, 3.890209976902581*^9}, {3.8902100525519133`*^9, 
  3.890210067512229*^9}, {3.890210234874273*^9, 3.8902102495922394`*^9}, {
  3.890210285902672*^9, 3.8902103735788965`*^9}, {3.890223122512968*^9, 
  3.8902231255486574`*^9}},ExpressionUUID->"9a461511-9375-49c5-824c-\
113359620a0c"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nHmUVcW1hxtwjBMITo/3EMThBQQHTBQ8TZcvPgUHNHEIiTyjOGGMwzJL
jZoEjK7gLIrLtFGxI4MQE2jUGKa2bwP2EyFZDTKJooiRhUMcQZKg+LrvOb9d
b3+1jv/0uj83u6p2fWdX3XOrdp/R137vss41NTVjd6qp6dL+t3bz65u//rpv
RX//cuLYyyc1rM5uuuzNa96ddIjp07f85rGb3lmezd64YcsrtX1Mr6n+V8lW
NbduvWjuwYn9sHlLOx257d9hX1Mz//m2vbYd92+JPnDWqoMWXn9A0p/fzVh3
2H2NPZJ2e0x565iRH3VL/Oxdu+TWU0buDX1DtuWYVye+8epuprfNu7huw8Eb
snWHr3/m+rO6wP7lbNzxfx3f7ZHtzRzXGX02/rn2vk+avf2cbPSRa598uttq
05sf6L/7XResyH6S63XSm869pe3ZY9qyEbmfOu9ncfarvF3oK7PX834Grzdm
W/NxBY53nzwOgeMt4hYYtyLOgXEu5iVwXop5TPwU857oBSehhKuk3YLDxL74
nPRHn8Vv7qfNeKYunqXLv3j29jYu07/86JIrB616X3FI/Itn+hfP9C+evV7J
xDN18ez1l41n6bv+fdbl+/yyzXj29o3Gs/Shg/e79/uL2oxnbz/HePb6IuNZ
es5bm/FMXTwzbuKZ4xXPHK94pr14ZpzFM+dFPLM/4pnzLp7pXzzTv3imf/Fc
olfEKXmmrs9et+cOesXyM/2IZ9qLZ+nkmX7EM+3FM+3FM3XxzP6IZ69HnqWL
f/Es/boe536wtVub8Sz98/rnXnl/UszP0if3mDl9/P7LjWfGWTyzn+KZ4xLP
Xl9pPJfEOfEjnmkvnkvmPfEjnmkvnjle8Uw/4rlEr4hH8ixd+Vz/nro+6y/3
G/Qvnr0e9xtet7yR+BfPtBfPXm80nr2+0nhmf8SzdOVJ8UxdPEsnz9LFv3im
H/EsXZyLZ/oRz4yPeOa4xHNJnBM/4pn24pn+xTPnXTzTv3gmV+KZunimf/Es
7vBcmJ63+7bx7O03GM/St/zg4pP7r33DePb2kWfq4tnra41n2otnr0eeOS7x
THvxTHvxTHvx7PW4f/b6OOPZ69ONZ683GM9ebzSeGQfxzH6KZ45LPNNePJfM
S+C8iGfai2fq4pmciGdyJZ7JoXjmuMSz+IIf05mfpcu/ePZ+4v7Z29s6Bfu4
3/B6m/FMe/HMdsUz2xXP3r7ReKZ/8Sz9pPGjW499c4XxTD/iWfqezwx7qrbv
q8az9F1+O2Xmwb1WGM9sVzxzXOKZ8RHP0pW3xTPtxTP9i+eSeUn8iGfai2fG
XzyzXfFMrsQzORTP5FY8iyP1UzxTF8/UxTN18ex1W6cSe332usU58SOepXP/
TP/imX7EM/2IZ/oRz9TFs/T8/cZC49nbzzOepXO/IV18imfq4pnjEs8cl3im
Lp7pRzxzXsRzybwnfsRzCVeJLp6pi+cSvSJeyLN05mfai2evx/xMXTxL17qj
/tFen9mueJZOnulHPHs95mc/3lbj2dvH/Yb0nKuK8eztFxvP0odvviBMfGKx
8Ux78cz+i2fpn782fcqYu1cZzxyXeOa4xDPjJp4ZZ/FcMo+B8yieaS+eqYvn
Eg4DORTPtBfP4kL+xbN07p9pL55pL55pL56pi2evx/2GdMwL7OP+mfbimfbi
mfbi2Y+rxXj2fuL+WfrHew3/9PNBS41n6fn7vYrx7P3E/TPbFc+Mj3jmuMQz
4yyeaS+eGQfxzHbFM/2L5xJOQglXib14pr14pr141vyTZ+riWTrfb1AXz9TF
s/cf989sVzxL5/sN+tFn+hHPtBfPXm80nqmLZ683GM9+vK3Gs7efYDzTv3j2
4408e/uXjWeOSzyzP+KZ9uKZcRbPjKd4ph/xXMJJootn6uKZ7YrnEr2iecY+
3PTcOu6fvR7zs3TyTHvxTHvx7O3j+zrq4tn3P+43vP+Yn+lHPHs/LcYz/Yhn
7yfmZ69PMJ693mg8S9e+RTyzXfFMP+KZcRbPjI94pi6eGR/xTF08l8x70h/x
THvxTHvxTA7FM7kVz5pP2Ytn6dw/e/vIs9fj7ym0F89sVzxLz/eH7xrP0pmf
2a54Zrsav3R9n9Jnbx/zs9dfNp59f2Ybz94+8kx78ezj3Go8sz/i2ftpMZ6p
i+eSuAXGTTzTXjxzXsQz51E8l3CStCueaS+eyaF4ZrviWfMGP6bz/IZ07je8
n/h+w+vx/Qb9iGdvv8F4Zn/Es/fTajx7P/H3FOqKC/3rs/f/gvEsnd8HGU/x
7O1jfvb2cf/s9ZeNZ8ZTPPv+R57pRzwzbuKZcRDPnBfxzHkUz+yneCYn4pl+
xDP7I54ZZ/Gs+VG74lk6vw96+/h+g37Es3Tun6mLZ1vPi+/L4pntimevNxrP
3n/cb3j7BuOZ/Ve8vD7dePbxiflZ+jkXrBsy8oy5lp+9n3rjmX7Es3R9rxTP
0vUciWfz//WTjy57fInxzHGJZ8ZNPDPO4pnzIp45j+KZunhmf8Qz2xXP5FA8
04941jyQZ+laX8SzdOZn+hHPXo+/D1IXz16Pvw96PZ5H8nrkWbrylXj2/W81
nr2fBuPZ63G/4fXFxrP+XnL6+s1vv/G48Sz9o8Pr9p96ykTjmX7Es+//bONZ
+rd63zXtL0tWGM/Oz7j4vk56/p4wnt9g3MQz4yyeOS/imfMonqmLZ3IinsmV
eCaH4pl+xLPiTZ69vtZ49nrcP0vn+Q1vH3mmf/FMe/HMdsWz198wnqXrPa14
lj5gxo0nvNm63HiWfuM/ljfe8dEq49n7X2Y8S39s4IQ+Y65baDxL/26vygc/
veFh41l/8/Oi8f2G97PCeOa8iGfp+e8vMT9LH3XYth07rom/D0rv+tz/LLno
1Pj7IOMmnhln8Vwyj4HzKJ5pL57JiXhmu+KZ/sUz4yOeFVfyLJ37DenMz94+
8uz9R57pRzzb937sN+hHPHs95meOSzxL13otnmkvnn1/FhjPfrwtxrPXHzSe
pX/yzb5n3HXQ88azb3e68ezj84Lx7O0bjGevLzaevZ/4vo5xE8+Ms3jmvIhn
zqN4ph/xTE7EM/2IZ3Ionjlf4lnxw3MB3dYF08kz/Yhn+hHPtBfP0vP953vG
s3R+H6R/8ez1+H3Q6/H8M/2IZ/oRzz4O04xn388W45l+NB+012fGRzz7dluN
Z/oXz9TFM8crnhln8cx5Ec8l8574F8+0F8/kSjzTj3imH/GsOOk5Es/UxbPX
435DOvMz7cWz1+PvKV6P+2fpeTxfM57ZT/HMdsWz1+P7DenKh+KZ9uLZjzfm
Z+naD4hn6VoXxDP9aJ6o6zP7I57t/XQ1fy4znhln8cy4iWfGWTxzXsQz/Yvn
Ek4CORHPtBfP7Kd4LtErikc+j5uMZ+nk2euRZ+8n/p5CP+LZ6xuMZ6/H31Oo
i2fq4pm6eKYunqmLZz+u+HuKt4+/D1IXz16P50Wl8/cUxlnz5/XIM/svntl/
8VwS50QXz9TFM+dRPHPexTM5Ec8cr3imH/FMbsWzxg0/0CPP1MWzdPJMXTx7
PzE/UxfP7Kd4pr14pi6epSs/iGevx98HvZ+Yn70e32/48cbfu719i/Hs9fj+
mf0Xz9Q1r9T1uSRuib14pr14pr14pi6eOe/imbp4Jlfimbp4Zj9xHinhWXrJ
eSSzx3kks8d5JLPHeSTGDXpyHol5BvbJeaTA98+0x3kks8d5JOMc55EKP8l5
pFByHimUnEdKeGa7OI9k8cF5pIRnxhnnkRKeGQecR7J2cR7J/OM8EjkJJVwl
9jiPFPh9kPY4L8rnwvSS86Jmj/OiHFei47xoKDkvavY4L2rt4ryo5VucFzU/
OC9a6Ml50YRnb5+cFw0l50UL++S8aCg5L2r2OC9q/cd50VByXtTGhfOiyX6D
ccN5UYszzotyHgPnEedFE56p47woOQzkEOdFzR7n+ROeqeM8f8IzdZznNx5w
np9xg56c5zc/OM+f8Ez/OM9vfnCe3/zgPL/5wXl+03GeP5Sc5y/sk/P8oeQ8
fyg5zx9KzvPbuHCeP+C9UKLjPL/5wXn+hOeSeU/84Dw/uUp0nOcnt2W67hkV
enLfKsnP0kvuW9l4cd/K4ob7Vowb9OS+VcIz28V9K2sX960K++S+lfnHfatQ
ct/K/OC+VSi5bxVK7ltZu7hvZePCfSuLD+5bhZL7VmaP+1bmH/etEp7pB/et
zB73rSz+uG9l7eK+lXGF+1ZJfia3uA9r/nEfNtk/e/vkPizXHdgn92FNx33Y
Qk/uw3JeoCf3YW1cuA9r9rgPa/a4D2v2uA9b6Ml92EJP7sMWenIfttCT+7CF
ntyHtTjgPqz1E/dhbVy4D2v2uA/LeQmcF9yHNXvchzUd92FDyX1Y4wr3YZP9
M8eFegXWLuoVJPmZOuoVJO+f6R/1Cqw/qFfAOCf+Ua/A7FGvwHhAvYJCT+oV
JDxLL6lXEErqFYSSegWhpF5Bst+QXlKvINlvMD6oV5DwXBLnxA/qFZg96hWY
f9QrSHimf9QrCPw9hTrqFZh/1JNJeKaOejLWf9STsfGinkzCM+1RT4b7usQP
6skk+2fao56M6agnY/1BPRl7LlBPJpTUk0l4ll5ST8a4RT0ZizPqyVg/UU/G
xoV6Mvb8op5Msn+mH9ST4b4x6Q/qySQ80x71ZGy8qCdDbst01blKeKaOel/c
F8E+qfcVSup9MW6Jf9T7Mv+o92XxQb0v01Hvq9CTel+hpN5XwrP0knpfhX1S
76vQk3pfSX6mjnpfFjfU+7Lxot6XjRf1vswe9b4szqj3lfDM/qDeVyip92X+
Ue/L/KPeV8Jzia46hMzzppfUY7Q4oB5jst/w9kk9RsYt6Q/qMVq7qMdoflCP
sdCTeoyhpB6jzTvqMdq4UI/RuEU9xlBSjzGU1GMs/CT1GAs9qcdY6Ek9Rhsv
6jGGknqMFjfUY7Q4ox4jfxdL/KAeo+mox5jsN9gu6jGaPeoxWn/yedR9K9V1
jJxTLz6HEvtEh//kOaIO/4nO+ZJ/1tWEPfWEc/Tf2r13/KjT5j7dt6K/0EOJ
Lnv6CdTVP/07zYvsWJ9TduREn/Xv4Cepvwr7pD5niZ+Ezyuqz+mm5rFbjvrT
Z2u2nLh3VW3ILs/1unGF/tXXHf89meX/KgzOinaGfrbiwydOWV7oZ89VHt1R
tX/R7JVHn13d5YLrRrYV+tGDVxd5dEFN5xmdh7WZH+XRvN3HzM+CIo/e/dSN
02c2rDBdebRSzT/N8j9XefTQLQMaloxYbPbKo/V9Z704dftLanew8mhbNW5z
zF55NB/XZOu/8ui06nM61dodW+TRnar7hAbzozx6fvVczSzzozzab/D9Yxd1
q8/cufCG9naeH/F+vxn1mT9f+7cTVjeN+rz/ggczzaf+/52D/+PCiec8ZLry
7gFH7D7oioemm668+/tq/+earrz74au7vbptRMV0f25hiulF3MLmJ+oGndW2
yHTlXR/nmHcxL3OVd/081tTMK/LuXW7eRw5W3v3ScVJTU3AVPFdhrvKu5zDu
i8Ht3ILzIM7vH3N65+cGnNd0xxF5HvpOfXs/X1+aHfvIhUeeufx7TX+ojrdP
ZeMDHd9HWrPz/7z0hXNvPKtpWTX+vSsPF/2Zf0XLozt+fGrTK9W49aqM7tnx
vWZRNnPFxRN3PW9I04fVeelZqTw8ZebBkxZmZz/4j/ce7FPT9GU1/gdWLuh4
7zp5Sd7Px9YMGVOd9/0rOy1YdOj9Py/if+fsIfk8dq80PP6N1mcuXpi9vvWw
z05e88emr0Z19Kdr5aazz/z080FNWf3AjS9+dtq0plkTOtrdozK5x23t/L+Y
Ne3+wMBOrzzS9K8fdPjfpTJwn8j5OV0/O/HM6rhqKl2qnBc8fH/9iXle+aJ5
ezWe47Nf9h4+9b6Vl76457w/PN+Rb0bs2PfpTr1mZvfm+tC9cr1uyeZRl2z6
9oyqn6/PXz8/z0Nf1B3x1bub1v+s6n9ce7vzi3bD2k/63rbo6JZs8i0TOvpZ
uz3vZ7ine8e6/0L294er46r9Yz6ucNyUTu0u/pT989FDO+JQ+2Ueh/D0/OH/
/NfsIm4TZs/Ln+vuodetK+oXbf7fqj7unjXzrszjnPM/rpJNGLPt0/Z5qS3m
JRw0esigv52+NFu428aH2uex9r18HkOY1vGevDVbc2mn37bPe20x72Hs1va4
7ahkP3zpgw5OagtOwjsFn+dNGtrBVe3vc67Cmr3bOXlwSdZ6xfwODmsLDsNt
F3bsr1qz24p8rb/7tj0z6rTxj2T5fLQ2S7/hv34xeUj9b6TXSd9yyk7/Ob/P
w7YfnnT19dcf+8Q03iusPJXrdu5a+Z322idLz+3tPBX0tkz5nX6U32nfUOR3
r9t5XdP1fU353dvH731ej/eqrD8377n7aze+bftk6fk5ySW2T5ber8uHR31n
32W27zU/Xcd2+mqPtdntRf5lf5R/pW/oll391zFrbN/r49OicQX6Uf5lHJ4q
8i915d+SeQmcF+Vf2mvfy3lX/qUf5d8S3hL/w26feM4Xg/tWBkyYPHzkz6ca
h7+ueeS119f2MV3vq+f+ov5HLTf1ruzh7CvZJ1u/tfTMAb0qJzi9puaiT4as
OfCqnvDf/o3k/bp33pl+oOnaXw1/9+SPZ27az3T1f95bw7fffGj3ykno55Hr
Ruz636O7wv+cbOiMpw/vHfbw+rgFWb9Js4e+MH/nxH+3ifPPP+P4msogjGvz
PvesX3zZ1mbGZ9Oww0bf3fRFnfRtR+37o8suW5k9NGu3g456pyYcX+g6jzF5
3o6aR6/YJci/3jM0v7Rlc+cP9zD7vJ/PZdeOuWHMt+d0Db7dBdn2q68bddUt
3QPHe+dPrzq7Ids/6tV7rK9lPW6+/ORVOw4MJ2G8k3958QnfaOkZOF/H3DHq
yLrbewXO11uL+3ed91TvwDj87tRv3r2yyyHhJMTtJ68cvtPHl/aFvemVfrlu
z1fhpzICetFu+wLx//W2bFDez8TP1Hxcpmu8++VxMD/S78njBj8rFWfoc7Lr
8nmB3pBV8nmsHFfoh3x59DUbf7Za814ZWOia94IT8yNOCq6a2Z+Cw7qBiEPB
bWAc+ueca37NvjZ/Lsx+9LplfW7dsy3rnz9H4dBC1+/Xc/Pnzuz1nJ6aP6ch
c/1vy1bkz3Xw49qQFXnA/Iurj/K8ETi/c/I8EzpjXEVeMv/2e2uexxCH+H5V
6yzfR1HXOuvX5bjOcr3WOks/Wmdpr3XW63GdlY7f5WH/rK2zXo/rrNfX2Tor
neusdK6z0r97+aNLZ3RfZ+us9x/XWa8vs3XWxyfWi+C4tM4yDlpnqWudLZmX
wHnROkt7rbOcd62z9KN1lrr2dVxntf6yXa2/5Fb5sCSvVphXtV7zuVD+5Lqp
dZzPl/Iq/Wt9z/D8Kt9yPdW6z+ddeZjrkfYDzDN3F/lZ9pr304p9Qob+K29z
fSzyWOJf+dzbN9i+wvd/juV5t17XPG/7DTeP7fsN5X+u+0V+rjA/a13g/kH7
E+Z5rRfch2jfQq4qPZ8YNr3x4+aeE26/dpfOH88fMXHnX5+6c2O2MNfr+hZ6
y5UHPNt9vwZbd45Ff7T/4Tql9Yj7KO2LuN4V+7FAfrRf4rqp9Uv2Wr+0j9L6
Wz/sx513/HC1rWuy17qm/ZXv/wLtMwOfF+27uB84pVgHPT+Nth/z9m/Y+jjA
xXOD7dO4P9G6yf2Y9m/HOf9xPT0B/de+rh/stc5yP6/9HvnR+svvBdoHcv+m
dZn7Ru0PyfP/AaDDtJw=
    "], {{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJztyMEJwkAUBNAlXjzagl14ErwEvEZSQIJr8LKBTUDsIm3aRTbgORU8ePOZ
+ed+bF5VCGE6ltN0n1vO3fdxKqNN03tI8XlPcxxivvSH8lz+2fqvvgIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAALBjBcshkTw=
           "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {144., 144.}, PlotRange -> {{0, 144.}, {0, 144.}}]], 
       EdgeForm[None], GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxNnHf8TuX/x+/7nNPeu2gQQioyQikrI3slIbusjJAUISqaQklKSkMpWW1p
oL2VJKm099RO/a7n93qex/374937vsb7Gs/3dc59f855pXy/EZ2GJ4VCYcBO
hUIa/GXhP5TLBasUbMdgoalQMdgOlssXYh/6H2X7zsEq63cJVi3Y7sH2CHZs
sD2D7RVsVgiaHmxasCMdIwtWNdiuwXYLdrSe+CqOR9spwY5wbRWMY017B3sq
DLQgWO3w+YBgBwarFWx/yzWC7RNs32B1bD8o2An6g4OdGKxssEODVXdcYk6y
7rBgx7gn9lMv2CHBygSrrye+ruPRdrxz7hesoWuHX8dgNV1j40JkwZ4a2U65
iXWwP8v9M0YzucO7hYzg19r1wfs0OZKHU80lMS3tS1tzxyC+lX2J7+S6YNnU
+YlvG+w42XSRI/w625dyB/fM3k63HR5d9TDrLtMGwdqbG2LaOXYN53k65PO2
YN3kS37O1BN/huPVd779zHfPYCfLq5fM4DpAduy7v1wo9zEH8D7bdrieo4dZ
m2DPhLXcHuxcWbDeCeaGefo6BswGmQO4DtaTn4GOR9vFxvUO1s841jTMsWEz
WtawHCVryiNkzTkaYzuMz9fD5qJgPeQx3PGIGW8d6x7q3tjPBYXIGsbj9ORq
rOPRNtH1wmyma2KN1wU7z3JvecN0slzY3yTjKF8qaxhfLheYXemaYHyZ7bTd
LGuYXeJ45HBIsDUhJwuDXWGZ+GmOB/up5p75phhH+Srngff1smOvN+jhMVu+
tM0INtJ9znLftNUIN8N9gu0bbJ58WetN5oDy1c5DHq41f4x1jXWU5zgn7OcG
u9D4W9w37G+VI1x/CPZGsDeDLXSfcF1gO5xu07PvO2yH65162N+lh9m95gA2
i4JNL0SutzvGVOvWBt53BLvPvbGPe+xL/CrXPT/YYsej3+PmkrblcoTxA/Ll
HC3Vc75W2E5+VurJz4N6mD1WiNwZ9xHZwf5+1wXvh4PdaNsS65jvUfsS/4Tr
hfFq/QIZL3ctT8kUHk/aTvlp68jDZsdijLWyhvGzwe6W64tygd/zsoP9GvNE
zHP2vce4dYH3ncFesC/xzzgnMS85Hvt+Wc9e18sOZm8He0geb7on2l4Ptsx9
vmYOlmkzzdMG42D8qjmj3yvOQ3mTOSb/G+VLft7V0/aOY9DGNcA9jO+c94zL
88B556xvlQssPzAH8P5QD4N18A1s7gr2SV4O9qkell/KHU6fyx2WHzkGc3xm
X9q+liP7+8K+xP9ljt8P9pXj0e9P90Dbj/KF/XcyhfH3es7Uz8HeMie/6GG8
TQ+nP2TKuL/JFJbfuC7y8Kt9afvWOub73b7E/+16twT7Rw/LvYuFwk+u5V+Z
wmO77ZT/s26rcU+ag6QYWcM4K0Z2cN25GLnAb8diZAf7Yvj8cSHG7FCMfWlL
i3EM4ncqxr7E0/e5kM+7g+1SjOOx712L0bPXfYuRHcz2K0YPj32KcU+07VmM
90pyskcx5uAHeax2P/sXYxyMdy/GnNFvt2Kch/LBxZhj8n9gMfIlPwcVo6ft
gGIcgza+JzjXfGcfUoxx5KFMMXryUL4YOcKgXDEyonxYMeYD9kfaDuMKevhV
LkbWsKlajFxYb/1inKNsEejhLAd+i4JVKsZ8wPgoPfEVHY+2E407NNgRxrOm
ox0bNscXI3d41yhG1pSPKUa+8K5pO1xr6WFTtxg5wqOa4xFTzzrWXcU9sZ86
xcgaxifoia/teLSd5Hph1t41scZ2wapbHhfsZb6vgp0cPh/u/vAvhLp7gjUu
RtYwbioXmLVwTTBuYjttNzruhcFOcTxy2Ey+5Ke5nvhTHY+2RsWYe+ZraBzl
ls4D706yY6+d9fDoKF/a2gY7zn12cN81rdurGK/vM+TLuehqDiif5jzkoU2w
Y41rZR357OKcsD9dT/xc932Rc+/tOTizGM8QOentPuHasxi5w+ksPfvuYztc
++ph308Ps3PMAWwGyBeuvRyDOfrbl7ZB7o19nG1f4nsEa+A6Bjoe/S4I1s21
j5AjjM+VL+domJ7zNdJ28nOenvyM0sNsrNwZd4zsYD8kWGt5j7YvbUOtY77z
7Ut892AvhbO5OI2se8jymmDDXe8kOcJvotwpj7cvvCfbDtdL9DC7TL7wmB5s
sGuE04thznuDTXAMeE81B3C9VE/8FMej7WL7so7LHZucXOHY7HWGHOF3nR5+
17on2q6WO/u8ynwMkylnmXM20zhYXunY9LtQdvC6wXyQ59nmA8bX62mb5Ri0
He9v+f2C3VSM3GG5Yyh/EfyXwW6VO1zny53yPPvCbIHt8L5ND6c75Q6bRXKH
zcPFeE/h2rrZMWC5UO7wvkNP/O2OR9sjxrHeW4xjTfc4NmwekDu8l8ia8mL5
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
obJEKzYoLWnFBpuDYfaD6XDLcBlhuYvjjUpLmrCR8j7H9XW0jpjZwa5Mowat
s3HnuV50Yk/KDh3Y2DTqiPi3s/h3k9g/OrBcOzbOfrC5yLa5wa5Po54Lpui0
JsgMHdhEeaD9miIz/l+pyeaDvuPTklZskqwnOlZ/4y4xl+Od+yrHZL8zg12T
Rg3ZDPc6SM/eT5P5FX5GKzLNPV7rntFNtTE/Q2R5lePf4Bzo1NBfMU+54Oek
8d8au9a+V7umy1wPXz/XW087mjz0jWj0bjQ3rLeebV0tz3at8xz/cNc5y7Ve
J3PGvMXPl7pG1srjLT7f5DpmO9/AYDdbHuh4cxx/tm1XOt5cx+TdF++w7rX/
PM8H7wZ5b8j7QzRu6OLQx/EMkP+vleeWD3nN8twSTRa6L/Rf6JLQIKFFQqOB
Tga9DO97eYfLu9y1hahDuMv13CJHtCFoQtCGrHQunrVuLcT3/rz/570Q74N4
L8R7DN533Of6nna9xPJMmGfDPI/nOTzP499P47NX2i+XKfnk2RDPiHiGwd/S
/E3N35H8FuQ3Ib9Z+HuGv2v4fc0zNZ6t8fyGvxX5m5G/Y3g+wnMS/nbn9zq/
2/ktyXNSnpfyjI7fMfye4Tuc71e+Zw+V1xr5wWut/GAKTxjz79ORC/4dPK5t
rvGxnoWZng3YrZPlas8k9wC+w/guO9G8vmCeYUpetvqe/XlzRW6eNVf8ruM3
NL+dOSsvenbg/rJ5eNd9nOi++bsj/1sQz9/WsOR3Nm0bZXCobNb7DPMdedNG
nraE8mZ50w7zTc7TTZb83mNc8sA8PBd52dznZwSfnx0862dMnovmz7PxnO33
HHusZ4Hx8mdg+PyZIp74VzxTzLfZc0b5dc8I5+pNzwXn6svw+awsvu/4JHzu
nMV3IXWD75XFZ/ZfhPoeWXxXckLwPbP4nP6rUN87i+9Hjgn+9zS+X6gRPnfI
4nuD44PvlMX3BnWC757F9wacXXLDWf4cDll8L/NZ+HxGFt/fvO0ZX+N+WXsr
c0fdR3JmH5ebXzwxXJMvybdmGK9LFt9FfBrqTs/iu6FawXfN4ruL2sF3y+J7
iX2z+P8A8Mw+H/dhzxRna5XnjnfAvNvkbK5TV8J5/9+/b+X9A90YZc4A7954
F8QZp2/Bex7v3RuYa74vz/Ds004b1yLavune/9D15v+mIB7NI7ne4tl9wLwv
s26p9e/r83rOxZL/17bZ65vxmA9+7G+c9zDWzj12k2vMf5Pi89/pZb0GWCf3
P+4P6z3Ty7xuOOvLveaIedw1sqYlnlPO6wpzTu5Xei1yjT1mzsn9Q55lzvSD
Xous7wnPCGeF+98L3ie4z6zzXnKXDLmfsVa4zZcL67lVNjDhXtja7xDuhYPN
L2NM8/uEexX3Lq5XcrnaPDLnf35v0M7c1cL5+i2N7+b+DH5SFp+FHRv8H2l8
JrZ/+Nwyi+9DywX/dRrfPx6RxWuP6+4vzkAW3+ntHXyzLL6bKmbxeuNaOyyL
1zDX737h82lZ/HcJymbxeuNaOySL1z/XPgL32l4L/6TxeuZaPiD4D9L4LnV7
Gq9truuDgt+axvewB4fPH6fxXep/abzGuL7+Dp+rZ/G9YpksXodcgweyljS+
o02yeH/h3rJb8I2y+I7uyOC/S+P71F3C51Oy+E5vz+CbZvE9YeXgf07j+9Eq
4fMvaXwfunP4fHIW3wfuFfypWXzfWCH479P43vbQLN6DuP8cnsV7IvfDLHyu
l8V3gxWD/yGN72p3DZ8bZvE9YaXgf0zj+9ndw+fGWXxPeFTwP6XxXe0O4XP9
LL5LTLN4b+W+ukfwTbL4TrJq8NvS+B733zTes7hf8VuBa4/7OWsf5/p/DXUX
ZPE9LwzGyoF9j87i3jlfF2bxjLGuUa6N83VxFs8Y5+Uiz8zRWRyXMVnXGNfG
us7P4trYRz/3Qs7bZzHvnMHWnkPOSKssnhPOQscsngfy384z8CH3mSy+K+Zc
983i2YZ3H5lzLtpm8Wzw3TI+i98v5Pm8LOa6efATsvgOFt4jssi8QfCDsvhO
mHM00rNUPvhv0/ibkXMxxLNBPoebU87F4CyeDc7auZ438j80i2eAnA/LYt6/
CZ/7Z/H34Y7Bn5jF36f7ZHF9rO2k4M/J4t+VO2VxfayNcz0wi2f7/wB1Rde8

           "]], Polygon3DBox[CompressedData["
1:eJwt0llXT1EYx/FzOg8pUkioUJnKcN/iHaSBiDSSWSqzULySuqMysxYyVKYm
DVorc4bu8wpQfJ/1c/H999mnffaZdmZNQ3F9TBAEuWSUx08yXQ2D4BqV4pCG
8Bu6jBfRJP5BFTiiETxMu0wL+dxBKsIp1IbbqQAvNq3txwrxnygI+nAvFTOe
YTyA+ymf8S/Gr/Er2sr4d6S5fmwb4+lIc32NnYz/Rrq2r7Gd8RLTtTvoAJ7i
//dxC38PMt5C44xbGe/AS01zr9N5nENduJsq8XK6je/QSbyWnuCndBqvM/kZ
ncXZJvsazXgjPccv6BLeQD2hjjXgNfQ41JpHcRY9xI+oFq8yuZPq8GqT/ZzD
OJMehDpnH15Jd/E9uoDXm57Fr1mNV5iexedsNr0jfzdjjK/gTaZ7fUk//78z
f1d+jRN4Hn3Gn6gezzX5I53CCfQl1JyLeAF9x9+oDMeY9o7vsXM4kb7iCdqD
0+gmvkXlON1k/wZNeKFpL/qau3Eq3Qh1TgleZvqWfqwGzzY921uqwkajofZw
I04y3Zvfwxk833Qv/gx78SzTuX7OcRxvetYPdATPoff4HR3CsSb7HjuG40xz
fc5+nGH6Nr4n/wERD3rj
           "]]},
         Annotation[#, 
          "Charting`Private`Tag$1455299#1"]& ]]}, {}, {}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{921, 1, 917, 902, 31, 61, 91, 121, 151, 181, 211, 241, 271, 
        301, 331, 361, 391, 421, 1096}], Line3DBox[{3, 2, 909, 921}], 
       Line3DBox[{3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 927, 16, 17, 
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 910, 918, 30, 922, 
        904, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360, 390, 420, 
        450, 1017}], 
       Line3DBox[{991, 451, 481, 511, 541, 571, 601, 631, 661, 691, 721, 751, 
        781, 811, 841, 906, 923, 871, 919, 911, 872, 873, 874, 875, 876, 877, 
        878, 879, 880, 881, 882, 883, 884, 885, 958, 886, 887, 888, 889, 890, 
        891, 892, 893, 894, 895, 896, 897, 898, 899, 908, 924, 900, 920, 912, 
        870, 840, 810, 780, 750, 720, 690, 660, 630, 600, 570, 540, 510, 480, 
        1097}]}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
LzSueL1sesDvh/Z85wJgcLok+XA9jRPifQrth5znarfMtP4a6k/2NYfwmq3b
JnL9BKwPFG+m5xoxniHyO9jzIBTPhxvHPo7itZi+URQ3swGITvhXoXMcjnNj
+iK9uf4/Y2fCU+23W3ueHwDwuU/00eoBA+ZpdrjlYkXmg/1nMR91wt9FNW9p
wnoNIKNnJ5j5XI6DZ6k/zbLUXWmeyBS9p+y60HeA7fR/Xi+Vm6S9pnIO3Lb7
lMlrAFm94HGsHvn0njctSnpF7hDe8wKLK+RvQBaHGM+sfqE4Xgd0RfuVD+HD
5z8/NF8fuPqqL6Hj8SjuA74t2Ls4IozGr3B8AcXJyHP7hxyvmS9rBcX2kvqH
OC4kaW+oXydpX4mdAfqi+TvSfWHgvmvPL5nDzTtzX3QdMo7Q0TjI8hkdd/L8
7cE20K/zutK+i6j/uVf24mXXfK5+cX6QzVPsW1SwMt9yMqwV5etsyHpdq/VH
fbnuAcX41eOcoxcfGDfuqjX1A2drT/Upi3bhyL8S5TEHlitVe43w5bynaL0c
3LJ5DRy3Z+WG87CsfDAfVi/ovA1YPfLpnQ8ndaI4sCcHV3w47CPKa47l4BaP
E++39BzNF3/ugvIpcUO62+/KCyTndBTfBAUrM+9IBdH36JT2vPwHdZNgQ+mP
EtfK6RDnC/jiPHo7D33aNM0PRN8qq1conQc+MPYZ8SdywPsm8hfY8yDcKpon
jYs+qDbqMlXREFaJ82yEj5ivFeJD/Yc5SqvywiYJwLi0nn1drSluG5W+e5eN
N4Ti3xlw8Cx8WP/6Q/tR5LmlqrpfPz314OirJkY1/YjiKDhYunCRwwsXwme3
6D3Sg3hemB5+bmVjcBdVMA99Yno7UT6lN1CL1Li4LHAM3V/E5whwBcntP+ud
yo1PzvF9Hihkx5uD1UgvOM8uGe+gesxBfuYPpHe8T/U7v6Rg4Rl3iOZD5NMF
5VNYXPHhsKDJNOZdsweci3DLrmuFaF+dDzF+xPFnABqifWU6/qY4x3Fvsd2i
8vdEeF5ZFx4ZV+jH2Y9Ch6XLXfkRwKG/ct/+MS2Snq/3aA/7VQIA9A9Tvh/r
H8CJM7DrkvR3ufvXRpRnw3R9dG6aLZoPfe9izzy45mFsAs+Kz2EcvYvlQOsE
ekUX7hJ0tANHRfnwsYSeUb9z95K37oiPHZHzasHlu1LnR4C5mioRq2ZTf/UV
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
     "],
    VertexTextureCoordinates->CompressedData["
1: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
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  ImageSize->{376.13022843427314`, 232.48206136799357`},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-10., 10.}, {-10., 10.}, {0., 2.9790409838967277`*^-15}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.5935864818626337`, -2.5486835238624233`, 1.5539287049336885`},
  ViewVertical->{-0.24346277080495343`, 0.38937927730110194`, 
   0.8883184438254372}]], "Output",
 CellChangeTimes->{3.890210960994906*^9},
 CellLabel->"Out[441]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJysnQecbVdV/0/OvXfa6+/lpb4kN+WlEFIgCQEDLxMIJZJASAhBEJiAlAAC
UkQEHAUs2EGQ7qDYwE4XkEGKFEUBUQHL2MWuCAlN7n99196/fdfZc+68l/h/
n8+8mblzyt6r/Nbaa6+91jU3PfMJj/32m55582NuGt/36Tc97Qk3P+YZ4/s8
9en20eCopmmf0TRHvWjcDO3nSdP0//espvm/fPAa/3EwbsK/0fSz5fzV/OHm
e1btvw3dM/D/57hnNV+3kb+v29fHj+j2+ZX82Ur+eJzvWeOXPziiZwzK9fxr
02cr+T6f5u8f5jntdPoTTT8/ezl/tnIbnqN74nP07NvznPH/8TkrWzxntX7O
K/3H0bKuz9dshHtv0/zy8yQiq/F5w3Rvua9n7sv1817lPw71PImdP6pdnw5o
LRIiPuDV3QGHgczrpWt5QHqJD65HGJfjO9IznHDr+fP1/IyOMvz/0OFNH/xC
GsIpxx577CN+6Zd+6bUveMELnv2Sl7wkzvsNaY5c8ryXvvSlX37sYx/7rmc9
61kvtUv/5vGPf/zad37ndzYfC9e/3n9c0PVc+9lv//Zv52c+44+XfOxjHxtw
40fDfa/zH+c0FO774uMe97hP2b2HPv7xj2eec6u/kn8tP31kE319rK/5vu/7
Pt7Ld55XbkyYNXfC3r1732V/Fxv424vs2g+Hx71yOiSGz+PiVNqeIeVhdp6e
r9Mb/LcPhde8fPPMNXJmPup5ZN9rBtPXXPsLv5A4+8HwmpdOX8NjawIt3LbX
8Fl5VXzNT/qPoz6iNdt6npen92njtXgR38HnULj5QHjHj22m2K0ml8//yZ/8
Saa2c8qY8shhz2uGPa95f3jND/uPC3pNpBivYfrcsys9ZtyEf32vG02HVV73
u+F1P9SlHJrG63h1ZG6Z1s7peydbvXeu573vC+99QLqT56w0U6i9aErkPkUe
3bYRwW8I7b/N94xoPYzomvTq6B+sh58vmI6sjy/Hd0cxnjWKheko+NxH8d4w
iqvT35ebYPKCydeomjv6Z6MaIZ1vB45wLIvdsfhvv7N5LCvNZjdmJT777Clp
GMu7jTt/8eQnP1lMO7k7nOVZw1lKn6HcZTjvCcO5rksaf85B/2y+D8Ye+su/
/Mv+nHH3vpXw/o4gZaB4oil0ef+7D/P+0/2zUR/4i1QdtTj5CMeyPX0GdBeY
f1cYSxCTdY2lEhNn2an+2Uxr0oeD1RBXZw1xh7+Tj+LAXIta/3FUq9Dy9PEz
Dc853bevzXr7zvL2367f3sxtNFNEWc1khiwHpu/us0Z3nP1uGFEM3K7y7ndu
evdgvQkO/kn+f9HSz5lW/GXWjAwo5W3rs962ezr7Ysnfvvm9a/qdfyf4/5vU
gvcWtbgwvP/gwYPRye28f8/0/aiG//a2ze9faaZObnKTEy3Kvz1T4vcBaJbe
jpmOJLrLXe4yOcwQO+5BzxDHzVQk0uojDbv8S0a13xhmgxbdt+b8WeNrodS+
nlG9NYzq0V2CRCZBkLv5n4f+8EsvvXRy1llnMYFBef7R0+cXg/aW8PxHbU3w
JFfzIoogY/VOd7rTys0337z8e7/3exletxjD/p4xvDmM4RGbKfoFuw5/Pwv2
Hh4IFxwpTjnllMkVV1wxufbaa/3n973vfZM/+qM/mnzqU5+a/Mmf/MnGP//z
P2/827/929ppp522es0116w+6EEPWv6P//iPjCrTgd7tbndb7gz0mDTQjvX/
rTDQh/mPM1cQMlQ7Ek015jWN2d43sbEMJo94xCOaff7rz/7sz05+//d/f/KH
f/iHk09+8pOTT3/605M/+7M/m/z5n//55K/+6q8mf/M3fzP5+7//+8k//dM/
Tf71X//VwfLEE09cNdqv2tuWjz/++PFwOGzSyIe8bnLllVdO7nOf+6xoasla
Fljom+Rvhkne2C9xkoj8yB6jPJKUuIaPx+PJ/e9//2Y0eeQjH9nsZc6Tb/7m
b548//nPn3z4wx+e2Gsn9rjJJz7xickf//EfT/70T/908rnPfW7yl3/5l5O/
/uu/nvzd3/3d5B//8R8n//Iv/zL593//98l//dd/Tf7nf/6nndx6663NPD9u
tG27vn///rULLrgAHq+88IUvXLZHZA2dEuO+973vLGIc20OM3wjEuGEqmptM
d1Z2nlV5S+6xbpxxxhmTe9/73pNv+ZZvGU0e9ahHDZ0SYxeFd7zjHRPTnclH
P/rRyR/8wR8U8YUKn/3sZyd/8Rd/MdnY2Jj87d/+rVPBRHpiIj35z//8z8kX
vvAFpu8U4TP+9g//8A9+LfcgO5/5zGc2TG42TH7WlpaWVs8555wV1ODVr371
QkWd6667bnUGdY6bUqf4ob8eqHPdVFT6HIeMPa5vF1544WRlZaUZ8r+TozkD
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
fT5vmNg/CTrbBZNjiU22dYtz+yNGBkJuQgM87b27IQ+x0naNS/jI94gSxCHX
GR7OVMylmDO2QtYZJ8MAg0nlvW4INbtoTJ+wcoxdIscaZ+wIUTVGlWaY1IAj
TLLp+p7ntEjL2bPcn3766SSMGJhkNzNMIhwK5T7YomTgC+XRyiMePg5KHmbV
jX+T5IvbW9TsyNjqw1yk6/z+oUAXCuL+MjSerRI0J+tst7+26eCPxC9JmiFx
sQ0aH8LidpScKzdt+Ho2rpoRxO98xvEy1+0HHq1pCTwCkxhvVTKgL+NvFIPc
j8hjLIwDloNGLc0HWiC6xpafdt/x9MzYonWu+LgXDLTJ+Y+rak39H0I2MgGY
BKYw2cP+o3P5FLmmsYfIZE0NqoWxU0DF/y/WVH7mTsx2PmJR0K0JdsKCjaUM
0WmgDQvNM3mXMAfXMA4+R9wKzcKiHMoGgQnIRzaZefM3Gz/CIusg1ylMDD8f
D89qnBazWcJFi2fapwYiwpQJx7L5NkW2FAiapk10eJ/eoTltkt9ZU9YCgmPN
RtOqfabto5PNuZzN7JcDbhDlCzNBQ2il7AnaJc+0cI/HM2sud/9jqJL4Gmvr
KWjQRnmabVl/e5HnohLaUfQuWHOddbAiAHTH02tm/fcv1WHlyMVc2N8cKMXc
eUfriR02Hq5jTyxoZP8m/ZHWyxwzL9h3zyjuwz8XHKGn6lnEWrTfAS6BXLmS
tjkvBQ9ngIQmEGpLoGh+lboC18EnrtUoA0xR1t++Dbm50Y+68keusyY6sj4e
M2tPL9wZb0163YuQq5ZzoasSeDKZ3pIyoifrn92RCvRRkVxtQ3AuoSO0a48t
BLtYs58g8pNPPuH+DpFRZ2aSVhil08AjEwLjGU9vAfFMrKqAuOe1xsykjHo1
y3LK67f3/wbNMP5LBeAGSNyYeR9/VSPwh+eIUch7CQ9zwY6cewg58DvkYz+T
JUyElTVgjngI3BjLx+EE1kYMWjTElEFICfLErLOrJWnLKlo3wwpTaD6I8lf9
P49sx71VLY3z1sTPmI+Lu/IuxiOj0S7ZrrpUTiY3ZL/Crto45P3u3LAxPFuD
RGLZWL4xEgfUYHnYUtYA7uV9cCf3spxwIuNg7lw7IqPdNbgeVOAYgvRn6yyP
OYeMc1a1FIXeshV/33M9ICO20AzLERntapBDQEEK0IgxeGa24jX3WAfYvdml
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
v/baayfFwDph7bOHkQGqIWx3AJKZtu3OaJufSsGEg7ynUD20yIfHYsG495w/
KquIXf4oXi1HbA9lxsxnIF5rg9llKzmkhthKFJJxT1QFKJrUxJXZHP7pDqgR
ttkvT/dCrBbPkrMhmg1HsuDlXhU5ipFnIT1ZRSA5qGFVhNUpch8vjzVMRcxe
qQVydxjbjDf7cY7xWfzOFxkE+gGPt7VMWkb36PAAdOU99QDX43JhB5BL/PA5
OnDX5oJB87uxVp62sZKG17rjtakM7h+QBw5FWYDyE4XRY5zQDGwXMG55360D
rwXVFnE4fT1sYkM2AT7WLndPgKkYGuvE8FHj8ALtjuNEo2xHURQwlylGrBNT
R9WiJCAX5LF+ZN60wwOQlmFj43C9tkxOwUpKouaWPBEsYHrZrpwST8Itejbn
jEKvQj0o6sYrNw20qsbP//zPr9nWlZ81leDRK2wtCjVP7rrrrmpiv3/1vve9
75jbMVtVBSl/UNGigDAbj2YYDAnVpRptkLvJSWz26vKwz8Aad9yIPXG+Qy/x
he643Bu/a8TOBFvVgwyM7BoyjAAnTXFckC1rithBIJTG86Lpv/CFL6gpjpum
WAVoVzgfZS4+mzTF4k9GlgW/9oDfpiaWIKCdTXlGi0/YlFUd7oovx1cusjf5
FWHUlrF6KgrdDkMrXA7mYW4CBPcHoWFE7dDCNfuwTdkoFd5dgob81J7O144N
tcQI8GCDYZnhworpLoMha6Q1KuFw9mQ7ooG56ImePgDysJhz2eOWHc3eplzq
cdqyGD63V3mOWhTWs7cpxwIVnFygFPZSVMp5dg6MUwUNSdzGWI7E7Q82F4iF
jNnMExk1ddf4elvXcM/cp0qV4JklMGISFjTJZYjNPJy4nIqVELPk1ObO7m5j
Eqb1Z98ShpGJFPqWAA3s9uiyTsmq+0PALRvMWK1pq9NZO1ObwR2DZad5D9sc
jmf90EBtx9qcRofdaQS6G2VUAKai+bOnlAJ/m4eBf0nvCUoBxAf5DRD1GJvP
DLSxpSHUYDggN0ukQwcSQ9K8ZTAJPVe2ZjoW/iqwugAciwViKTwCE2s34eeC
GyAy+g/KcHs4aBcHWmp/10l2Ln2pXs/x0jyL4wWPe8xl8DQfKM8Nz7lPee4y
IKjCw8nBwYG7hWXZbVW8ODoq6nZ9zz33bLwttwKV4DMYgdVAC9i6HYYpt+/x
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
19px4eFKtIs90ARUzX3Q2n6qnuUezp7lFo5dcM1wLTCat2Aii1ROMR65TD6b
hvE3R/a71TVBM7gIpt+FWM2FP0JhhNGGU0AUZk44xyZY/88GzufDYqP0ctT6
9AnAAyLjyS7iDj4DMYoMmglSA2zGbQKK+jPQBeA8Ysn9dAkBHxnX59ooMjsA
F/3Dc8z2ym1f7EHGsp/Hn+8BKM+xzqUlyzLg8zv+ezPK5rK8oB+8ZDst9CCG
sPnD0NU88BauYEBnGKzMBTmHSyqHYAvcDEjchfTm7okptslsrB7rBxdAb+hq
VhHzZvcHTWo91ujyFxhkZhZG/e/93u8VS6FsF4Zne5aWCRg679XVthgzfzqX
XYU3ck09Q4DgP5NxzRHM2X5FikxA3dgKlHVnYwCPoWLgT3iKdSsbLVGe/Q1L
pfumTXVnFZ7CPoBcCywJ3ENJFeovOzTWpiowmE6ZLcDfyDv0AGueZt16weW8
ET5l8ieIbkP3wFKIUwh3LnTfPxq2lvoW2zsoHyfwzhg/e1ybQH7qs5kD+VF6
1mOnQd5qCR3kr7X7F85ZFy7LIH9cuEVnTd5ZBMjXXgpsng4CPyEsqV+Fs49e
f/31RrzLG3uNWSB3Lnyn8H9Npvrw6HRWM56/dSAK7R7rZ5iHSad193kV5nmU
5avwCCD809ShXYCFYQoAWt/R2ueAJ8JGg+2tz36oW+Vs1cNADBZawYCT4+CR
9WsQjOV0MVl5qNErakk7X+bt+9RzbXNYq5eZh2n1dFAJZAGZCGMB7fMenGdZ
QtQiyp7o3spbj5YCAniO1WZAKbTLHOLznhE8LFhO/crdAdDP3BtD0t4r0A9r
To+3JYpNkfc4vhX13qt9HTiwubvvWDLCuzcU4WEqzzRhEJ7VCjhbeqFWUrga
U2HaDIklYyhGDoBBLCXKGVIXpNwD6ReRuvXBSAHAQ8QBgalIudAMysRdzLTv
uIfWTNlIHqal9yqDe2FJYwJXsCFTzfGd3Bv2YpyQmbF+//vfrwB/LVYJPSuX
INGa79O6Om+99VYglGGDQytKU7gnofsGJhLhm4S3dMkbI7PdWG07TM51stoV
rdOOcNZE5FfgDl96UG3YQvsoeapBe30Jw30jPqfAzNUEmzt+b987WKW3OsbP
+d/n8L3h9HJItXXqdfs+f90+a44hbP1/pIvpkfh/Z12Fu9qoy1L3GpdNC4SJ
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
JSpzhKO35faPjiNPo7PnIR5B1mlHi53JJjt4tlXSy4eS8OyX6ts5+QS7sbLr
1c6uFr6cCy1rZx2wyaXGqUwrn2+YvZf3vej0t956q3HqB/rRIp9bvyKnvxsS
bJlvODVveM+Ka9GnZEdbuEvPrM2iWCbGHTZBJP88MOJUC0fwTJ7DBgBOyIg7
x6kWscucWhaAJMu6cbu8fOmll0J5cTuECCY1HAemKp+ddB493KAr4FPuiDzC
f2V2CyB0AfcOl/qRij5XZ85oh2ZaNwaNGnEwJIyZmTPlTR49//zzjS1HAfw3
drNqreMwaaM3fi9AdhFj2dPKiZ+27R2doM8lu7bwtQ3mdfOvUGmzmjxX4rGG
I03Dt9JBAxWzmvP1yhHaT8eslnOOyC+su/nyl7/8HuFdlXUf7/k7dqmYZoar
uzAO7EuT95Zn+WqmhfiyOxTWhZW5JjI14dqbp/aWP9kKRYP7CDDT5iu2R7sd
zi0SsMa+qg7lS8sf/uEfDl3A8JCiFrAbdk2xgWKFG98eX758OTDX5HqmVZ67
ADyL1rWnVHlriFYihb68Z3mS8tWA6nV79JtvvhlsaoFfO8y1eMMNoN0M3VFA
fDMTRsfR452g/DlsebY23Un/glfrkdypEiZz3pMWHbaCyIWfNrTju3eGT6cx
UhgD8ESZHSWZu9cSHmsGbe1kWqjVdnYbSmFDnS2Pvh6MkJtZ8H2TpKGeWzoj
Jabbuqn/Y25bl8989SeytYMZmPdXvvKVOEmwfeOUSRm/wcdoGGAb5mzFL87F
pNyjzC/yZK0FThtrxgj4IT/Qm/sVeV1u+XPFMHRHMP3GkLX8/OVe79xzfqXS
8hzU3iv3+ZfrQ3toLsLNK6zZIvg25dIHt1zYOTNt1foBVePMWt9qru7l+L36
x+G0ZIePabFW+OpAtqjzl7nQglFyobkPzccNpyzvu+8+64xvsilqAENT8Cdl
NRjNe4888ohMyGJ7Upsz9a2+727KE7LpjspatGftqIQLnXDWCHd3hIVavn/y
1a9+dV2YHQggFf6EnShjYvg8G8aC0WE4NeccE5oRkZmw1QynslivrkazLuCN
MUGWgpTAWV3zgw2bP3QSQ2icVuQ6JD7kx8JRdg+xqCKyVgzz9ZbzjqEAo7IN
EAvZwuBOylce2nJe9zM3zhsdi9bgn+EvjTGO+ABCbS5v79K/8Vp9b8MJC3kf
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
gETIbAbqDhKflL8biTcF405owcvPi/HM4LmxK+CJTNwLyMNm2AZJQ+yT9l4L
BT/l9KmndHV/36qw0xCmHinfoBFBnNxijgAxwCHExBr1hNXCMbk4JGYNk1Oz
QtCioZZEQTY1NJqIBOVazCwWhW1PIugKqzXHyWHp3oKgx2VMjaCUwjzGhcrP
S+298vifK/9iEzdyefbA8jgsTwHoPRYyZb3OuF9iv+/PRxON2bEXjiEYvUap
hfN4YzEUxm1amw1mtPAxFwFIO7Yiv60a3PpjH/tYcvxMyXrM19lw8LXGGJI1
eu3myC549SyyFhZYl9E3sq7e//73r//gD/5gy6fDPqLCMP5G4Zq/U6S1UfY/
qN9gTVftX43fi1FGvGkj9CjoNKVC3iqY7+VE6DfeeCPKKf72b/92THe4vmZ2
bKVymrsmH4xrdwIkFdsAo7psl9aUzTncSd19mCxkB6XYOeNaj1Rizcyk2EXU
YklSzL6p/j1qTHb2qabcRROpAVWGwKwFXD4bUzkcBO1fVVGV8v0n2CXC0lvQ
wdRdIWVfqTc0np0c0tZP8toRG1+opwGn+wDKGYLvUVcxgtcf/ehHh1S4dUrJ
cBvgoCR2ZEvJjXUUdRPuomQrnxDZGY2SR5Qp86cacJfkT4T0uIk/M9UwDqus
Na4NaF2shlNZVgGyN7a8SSjNt1oQ1oRk1KxsUH2Zqq59E4iSt28j2rcFkB1f
u3YtVeOcUmmFv5ntEQCXqOShgO7xs6hUbL8jCiH/5q15iyG8kIix5a0Q0UUQ
Yk8DOH7uH5NFjvro+OsAX0Pdi0e/9Vu/hbrrHbp0YxBdXFD70hnkwJH3yU9+
kt3EupPj6jE86CbMQpZTcrSytpvy+hu3wRsvzZIjCLHY9PeOJMfNLTnybjcB
dufQZ7a37NSsXHu4JpInOck3v/Ebv3FUzMdGmpFB20hDoON7n/jEJ4yBa6RZ
w2doWkBvjlOQN0hTDFQ2TP/L2UwCqZjEx0ZUWQ2pmFElxamK5nMY3jpTQswT
KVDt/v2j119//aQwyuZb3/rWUSHk5d0z54HvFaUIYxxtZx6i4xk8bJZnjlSm
mZ8UQ/B/3DIFTzmTKV4bTf9oSMmYFS5PZSM77+dmpvzqzrn1Wyez7iqug376
PF3SycTWBYn/dtwv/GgXzlpTDfN6ZBhS7ha3cukkzrmGk/Uy22j/n9/6XBWu
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
hhTufm5YGN73/wIdzI/l\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"47f2840d-bd76-47ff-b413-1437f812c9dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ti2Transform", "Section",
 CellChangeTimes->{
  3.890212943377419*^9},ExpressionUUID->"47fa7330-a06a-491f-bcb2-\
e643bcefe8b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "Ti2Transform", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "Ti2Transform", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"Defer", "->", "True"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ti2Transform", "[", 
    RowBox[{"z_", ",", "\"\<\:5012\:6570\>\"", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ti2", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "Defer", "]"}], ",", "Defer", ",", 
          "Identity"}], "]"}], "@", "Ti2"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"ti2", "[", 
       FractionBox["1", "z"], "]"}], "+", 
      RowBox[{
       RowBox[{"Sign", "[", "z", "]"}], 
       FractionBox["\[Pi]", "2"], 
       RowBox[{"Log", "@", 
        RowBox[{"Abs", "[", "z", "]"}]}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ti2Transform", "[", 
    RowBox[{"z_", ",", "a_", ",", "\"\<\:5012\:6570\>\"", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ti2", "=", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "Defer", "]"}], ",", "Defer", ",", 
          "Identity"}], "]"}], "@", "Ti2"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"ti2", "[", 
        RowBox[{
         FractionBox["1", "z"], ",", 
         FractionBox["1", "a"]}], "]"}]}], "+", 
      RowBox[{"ti2", "[", "z", "]"}], "-", 
      RowBox[{"ti2", "[", "a", "]"}], "+", 
      RowBox[{
       RowBox[{"ArcTan", "[", "a", "]"}], 
       RowBox[{"Log", "@", 
        RowBox[{"Abs", "[", "a", "]"}]}]}], "-", 
      RowBox[{
       RowBox[{"Sign", "[", "a", "]"}], 
       FractionBox["\[Pi]", "2"], 
       RowBox[{"Log", "[", 
        FractionBox[
         RowBox[{"z", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["a", "2"], "+", "1"}]]}], 
         RowBox[{"z", "+", "a"}]], "]"}]}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Ti2Transform", "[", 
     RowBox[{"z_", ",", "a_", ",", "\"\<\:4ea4\:6362\>\"", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ti2", "=", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "Defer", "]"}], ",", "Defer", ",", 
           "Identity"}], "]"}], "@", "Ti2"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"ti2", "[", 
        RowBox[{"a", ",", "z"}], "]"}], "+", 
       RowBox[{"ti2", "[", "z", "]"}], "-", 
       RowBox[{"ti2", "[", "a", "]"}], "+", 
       RowBox[{
        RowBox[{"ArcTan", "[", "a", "]"}], 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"a", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["z", "2"], "+", "1"}]]}], 
          RowBox[{"z", "+", "a"}]], "]"}]}], "-", 
       RowBox[{
        RowBox[{"ArcTan", "[", "z", "]"}], 
        RowBox[{"Log", "[", 
         FractionBox[
          RowBox[{"z", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["a", "2"], "+", "1"}]]}], 
          RowBox[{"z", "+", "a"}]], "]"}]}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Ti2", "[", 
        RowBox[{"z", ",", "a"}], "]"}], ",", 
       RowBox[{"Ti2Transform", "[", 
        RowBox[{"z", ",", "a", ",", "\"\<\:4ea4\:6362\>\"", ",", 
         RowBox[{"Defer", "->", "False"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"z", ",", 
       RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8902129353724527`*^9, 3.890212940841504*^9}, {
  3.890213064493428*^9, 3.8902131041930895`*^9}, {3.890213149175033*^9, 
  3.8902133292927513`*^9}, {3.8902229257498465`*^9, 3.8902230551423674`*^9}, {
  3.8902230930596943`*^9, 3.890223418014475*^9}, {3.8902237021988573`*^9, 
  3.8902237072279577`*^9}, {3.8902237390625896`*^9, 3.890223881052518*^9}},
 CellLabel->
  "In[514]:=",ExpressionUUID->"3a840ebf-a475-4613-94cb-a7a3a5a1500c"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = -5.3999999999999995`, Typeset`show$$ =
     True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], -10, 10}}, Typeset`size$$ = {
    360., {109., 113.36877329834758`}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = -10}, 
      "ControllerVariables" :> {}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[{
         $CellContext`Ti2[$CellContext`z, $CellContext`a$$], 
         Mirion`Ti2Transform[$CellContext`z, $CellContext`a$$, "\:4ea4\:6362",
           Defer -> False]}, {$CellContext`z, -10, 10}], 
      "Specifications" :> {{$CellContext`a$$, -10, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{628., {138.63403328722342`, 144.36596671277658`}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.890213223571952*^9, 3.890213231135846*^9}, {
   3.8902132673985105`*^9, 3.8902133303660574`*^9}, 3.8902229412776036`*^9, 
   3.8902230093701515`*^9, {3.890223050437976*^9, 3.890223055659602*^9}, 
   3.8902230934051895`*^9, {3.8902231723330655`*^9, 3.8902231806510572`*^9}, {
   3.8902232587636876`*^9, 3.890223304112429*^9}, {3.8902238420393963`*^9, 
   3.8902238814057093`*^9}, 3.890226761370049*^9},
 CellLabel->
  "Out[519]=",ExpressionUUID->"ad4d1b84-ef72-4727-808c-4d7fef134d93"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["BivarablePlot", "Section",
 CellChangeTimes->{
  3.8971325629470787`*^9},ExpressionUUID->"c2e9f83e-251d-478a-acd7-\
5d8ec0104088"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "BivariablePlot", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "BivariablePlot", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"PlotLabels", "->", "None"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BivariablePlot", "[", 
     RowBox[{"list_List", ",", "x_Symbol", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "labels", ",", "isValid", ",", "const", ",", "constQ", ",", "edges", 
        ",", "vertexes", ",", "usedVertexes", ",", "edgeStylize", ",", 
        "vertexStylize"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"labels", "=", 
        RowBox[{"OptionValue", "@", "PlotLabels"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"isValid", "=", 
        RowBox[{
         RowBox[{"labels", "=!=", "None"}], "&&", 
         RowBox[{
          RowBox[{"Length", "@", "list"}], "===", 
          RowBox[{"Length", "@", "labels"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"constQ", "[", "value_", "]"}], ":=", 
        RowBox[{
         RowBox[{"FreeQ", "[", 
          RowBox[{"value", ",", "x"}], "]"}], "&&", 
         RowBox[{"!", 
          RowBox[{"PossibleZeroQ", "@", "value"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"edgeStylize", "[", 
         RowBox[{"edge_", ",", "value_"}], "]"}], ":=", 
        RowBox[{"Labeled", "[", 
         RowBox[{"edge", ",", 
          RowBox[{"Placed", "[", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"value", ",", "14", ",", 
              RowBox[{"FontFamily", "->", "\"\<CMU Serif\>\""}]}], "]"}], ",",
             ".5"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vertexStylize", "[", "value_", "]"}], ":=", 
        RowBox[{"Framed", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"value", ",", "Black", ",", "14", ",", 
            RowBox[{"FontFamily", "->", "\"\<CMU Serif\>\""}]}], "]"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", "None"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"edges", "=", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          TagBox[GridBox[{
             {"\[Piecewise]", GridBox[{
                {
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"bivars", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
                    RowBox[{"bivars", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "const"}], "}"}], 
                 RowBox[{"constQ", "[", 
                  RowBox[{"const", "=", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"bivars", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "2"], "+", 
                    SuperscriptBox[
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"bivars", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "2"]}], "//",
                     "Simplify"}]}], "]"}]},
                {
                 TagBox[GridBox[{
                    {"\[Piecewise]", GridBox[{
                    {
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"bivars", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "\[DirectedEdge]", 
                    RowBox[{"bivars", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], ",", 
                    RowBox[{"-", "const"}]}], "}"}], 
                    RowBox[{
                    RowBox[{"const", "<", "0"}], "//", "TrueQ"}]},
                    {
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"bivars", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "\[DirectedEdge]", 
                    RowBox[{"bivars", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], ",", "const"}], "}"}], 
                    "True"}
                    },
                    AllowedDimensions->{2, Automatic},
                    Editable->True,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                    Selectable->True]}
                   },
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
                  "Piecewise",
                  DeleteWithContents->True,
                  Editable->False,
                  SelectWithContents->True,
                  Selectable->False,
                  StripWrapperBoxes->True], 
                 RowBox[{"constQ", "[", 
                  RowBox[{"const", "=", 
                   RowBox[{
                    RowBox[{
                    SuperscriptBox[
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"bivars", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "2"], "-", 
                    SuperscriptBox[
                    RowBox[{"list", "[", 
                    RowBox[{"[", 
                    RowBox[{"bivars", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], "2"]}], "//",
                     "Simplify"}]}], "]"}]},
                {"Nothing", "True"}
               },
               AllowedDimensions->{2, Automatic},
               Editable->True,
               
               GridBoxAlignment->{
                "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
               
               GridBoxItemSize->{
                "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {{1.}}, "RowsIndexed" -> {}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                   Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                 "Rows" -> {
                   Offset[0.2], {
                    Offset[0.4]}, 
                   Offset[0.2]}, "RowsIndexed" -> {}},
               Selectable->True]}
            },
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.35]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}}],
           "Piecewise",
           DeleteWithContents->True,
           Editable->False,
           SelectWithContents->True,
           Selectable->False,
           StripWrapperBoxes->True], "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"bivars", ",", 
            RowBox[{"Subsets", "[", 
             RowBox[{
              RowBox[{"Range", "@", 
               RowBox[{"Length", "@", "list"}]}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"usedVertexes", "=", 
        RowBox[{"DeleteDuplicates", "@", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"edges", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "_Integer", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"vertexes", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"i", "->", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Evaluate", "@", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"vertexStylize", "@", 
                 TagBox[GridBox[{
                    {"\[Piecewise]", GridBox[{
                    {
                    RowBox[{
                    RowBox[{"labels", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "==", 
                    RowBox[{"list", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "isValid"},
                    {
                    RowBox[{"list", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "True"}
                    },
                    AllowedDimensions->{2, Automatic},
                    Editable->True,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                    Selectable->True]}
                   },
                   
                   GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                   GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
                  "Piecewise",
                  DeleteWithContents->True,
                  Editable->False,
                  SelectWithContents->True,
                  Selectable->False,
                  StripWrapperBoxes->True]}], ",", "#"}], "]"}]}], "&"}], 
            ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "usedVertexes"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"edges", "=", 
        RowBox[{"edgeStylize", "@@@", "edges"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Graph", "[", 
        RowBox[{"edges", ",", 
         RowBox[{"PlotTheme", "->", "\"\<DiagramBlack\>\""}], ",", 
         RowBox[{"VertexLabels", "->", "None"}], ",", 
         RowBox[{"VertexShapeFunction", "->", "vertexes"}], ",", 
         RowBox[{"PlotRangePadding", "->", 
          RowBox[{"Scaled", "@", ".1"}]}]}], "]"}]}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"BivariablePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "+", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["x", "2"]}]]}], ",", 
     RowBox[{"x", "-", 
      SqrtBox[
       RowBox[{"1", "-", 
        SuperscriptBox["x", "2"]}]]}], ",", 
     SqrtBox[
      RowBox[{"2", "x", 
       SqrtBox[
        RowBox[{"1", "-", 
         SuperscriptBox["x", "2"]}]]}]]}], "}"}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BivariablePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], "-", 
      RowBox[{"Sin", "[", "x", "]"}]}], ",", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"Cos", "[", "x", "]"}]}], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}], ",", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], "-", 
      RowBox[{"2", 
       RowBox[{"Sin", "[", "x", "]"}]}]}]}], "}"}], ",", "x", ",", 
   RowBox[{"PlotLabels", "->", 
    RowBox[{"{", 
     RowBox[{"p", ",", "q", ",", "m"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"BivariablePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SqrtBox["x"], "+", 
      FractionBox["a", 
       SqrtBox["x"]]}], ",", 
     RowBox[{
      SqrtBox["x"], "-", 
      FractionBox["a", 
       SqrtBox["x"]]}], ",", 
     SqrtBox[
      RowBox[{"x", "+", 
       FractionBox[
        SuperscriptBox["a", "2"], "x"], "+", "b"}]], ",", 
     SqrtBox[
      RowBox[{"x", "+", 
       FractionBox[
        SuperscriptBox["a", "2"], "x"], "+", "c"}]]}], "}"}], ",", "x", ",", 
   RowBox[{"PlotLabels", "->", 
    RowBox[{"{", 
     RowBox[{"p", ",", "q", ",", "r", ",", "s"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.89713258350723*^9, 3.897132590631109*^9}, {
   3.8971326441847553`*^9, 3.897132824058077*^9}, {3.8971329746198406`*^9, 
   3.8971332488728004`*^9}, {3.8971332816461663`*^9, 3.89713346987568*^9}, {
   3.897133536097275*^9, 3.897133595630211*^9}, {3.897133636306964*^9, 
   3.8971336722022*^9}, {3.8971338789615574`*^9, 3.897133991369816*^9}, {
   3.8971340834865265`*^9, 3.8971340840692587`*^9}, {3.897135269726754*^9, 
   3.8971352720918255`*^9}, {3.897135494144314*^9, 3.8971360017600193`*^9}, {
   3.8971360338985615`*^9, 3.8971360354803443`*^9}, {3.8971360835430975`*^9, 
   3.897136274044393*^9}, {3.89713636741555*^9, 3.8971365274743195`*^9}, {
   3.89713663767802*^9, 3.8971367285725594`*^9}, {3.8971368684650917`*^9, 
   3.897136871658323*^9}, {3.8971369832076387`*^9, 3.8971370939059057`*^9}, {
   3.897137140798411*^9, 3.897137238556945*^9}, {3.8971372722208967`*^9, 
   3.897137322907445*^9}, {3.897137403944906*^9, 3.89713740535839*^9}, {
   3.8971374479513025`*^9, 3.897137448578264*^9}, {3.8971378302426853`*^9, 
   3.897138063168198*^9}, {3.8971381223033895`*^9, 3.8971382460892625`*^9}, {
   3.8971383241610765`*^9, 3.8971383585178328`*^9}, {3.8971384223787594`*^9, 
   3.897138436899356*^9}, {3.897138528405959*^9, 3.8971385307313924`*^9}, {
   3.897138578095092*^9, 3.8971386812020206`*^9}, {3.897138769020999*^9, 
   3.8971388249812307`*^9}, {3.897138863979987*^9, 3.897138894131927*^9}, {
   3.8971389763218083`*^9, 3.8971389850454473`*^9}, {3.8971390733913*^9, 
   3.897139174523696*^9}, {3.897139242453991*^9, 3.897139436101257*^9}, {
   3.897139468183134*^9, 3.8971394731935463`*^9}, {3.8971395095558853`*^9, 
   3.8971395493982263`*^9}, {3.897139680930293*^9, 3.897139770615717*^9}, {
   3.8971398158540864`*^9, 3.897139834280877*^9}, {3.897140098871627*^9, 
   3.8971401631739244`*^9}, {3.8971402078480415`*^9, 
   3.8971402846786036`*^9}, {3.897140392739169*^9, 3.8971404793303537`*^9}, {
   3.8971405114579997`*^9, 3.8971406545072126`*^9}, {3.897140692774316*^9, 
   3.897140735097418*^9}, 3.8971407848540416`*^9, {3.8971408160824456`*^9, 
   3.8971409759656467`*^9}, {3.8971410384937325`*^9, 3.897141158242482*^9}, {
   3.8971415295681896`*^9, 3.8971415426165495`*^9}, {3.8971416706017075`*^9, 
   3.897141848628089*^9}, {3.8971420161118746`*^9, 3.8971420220775213`*^9}, {
   3.8971421017436996`*^9, 3.897142260701926*^9}, {3.8971423339400735`*^9, 
   3.897142349721608*^9}, {3.8971424405610385`*^9, 3.8971425315619774`*^9}, {
   3.8971425719843736`*^9, 3.8971425917281184`*^9}, {3.897142655624471*^9, 
   3.897142665142785*^9}, {3.8971427055080175`*^9, 3.8971427597153196`*^9}, {
   3.8971427950828943`*^9, 3.897142893513237*^9}, {3.8971429545133743`*^9, 
   3.897143138319398*^9}, {3.897143186452774*^9, 3.8971434882002273`*^9}, {
   3.897143519732413*^9, 3.8971435267316008`*^9}, {3.897143587749651*^9, 
   3.8971435884180284`*^9}, {3.897143651586954*^9, 3.8971436713111053`*^9}, {
   3.8971437030660715`*^9, 3.8971437935160513`*^9}, {3.8971438940400352`*^9, 
   3.897143961730298*^9}, {3.8971439960569115`*^9, 3.897143996215457*^9}, {
   3.897144065581887*^9, 3.8971440810409975`*^9}, 3.8971441427971544`*^9, {
   3.89714418340646*^9, 3.897144202948496*^9}, {3.897144265086794*^9, 
   3.897144267210192*^9}, {3.897144492172229*^9, 3.8971446776640205`*^9}, {
   3.8971447497445917`*^9, 3.8971448437693834`*^9}, {3.897144889483274*^9, 
   3.8971448903602486`*^9}, {3.897144938625188*^9, 3.8971451348927574`*^9}, {
   3.8971451741987653`*^9, 3.897145179472826*^9}, {3.8971452454963355`*^9, 
   3.897145298939077*^9}, {3.897145333810322*^9, 3.8971453572500257`*^9}, {
   3.897145572097472*^9, 3.897145609994191*^9}, {3.897145726019478*^9, 
   3.897145768605815*^9}, {3.897145832728712*^9, 3.897145902745533*^9}, {
   3.8971460083704123`*^9, 3.8971460834361887`*^9}, {3.897146113508729*^9, 
   3.897146207694341*^9}, {3.897146265888006*^9, 3.8971463789855623`*^9}, {
   3.897146752399742*^9, 3.8971467542673187`*^9}, {3.897146791367017*^9, 
   3.897146921350214*^9}, {3.8971470289247465`*^9, 3.897147268165481*^9}, {
   3.8971473072219944`*^9, 3.897147488300501*^9}, {3.8971476282757473`*^9, 
   3.8971476677679753`*^9}, {3.89714780588647*^9, 3.8971478060814404`*^9}, 
   3.897147865974041*^9, {3.8971481204924245`*^9, 3.8971481290729246`*^9}, {
   3.897148165020427*^9, 3.897148229636345*^9}, {3.8971483778461676`*^9, 
   3.897148391890093*^9}},
 CellLabel->"In[53]:=",ExpressionUUID->"84021d6c-ebd2-4e47-a44d-19788734ab13"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3}, {{{1, 3}}, {{1, 2}, {2, 3}}}, {
      EdgeLabels -> {UndirectedEdge[2, 3] -> Placed[
           Style[1, 14, FontFamily -> "CMU Serif"], 0.5], 
         UndirectedEdge[1, 2] -> Placed[
           Style[2, 14, FontFamily -> "CMU Serif"], 0.5], DirectedEdge[1, 3] -> 
         Placed[
           Style[1, 14, FontFamily -> "CMU Serif"], 0.5]}, PlotRangePadding -> 
       Scaled[0.1], PlotTheme -> "DiagramBlack", VertexLabels -> {None}, 
       VertexShapeFunction -> {3 -> (Inset[
           Framed[
            Style[
            2^Rational[
               1, 2] ($CellContext`x (1 - $CellContext`x^2)^Rational[1, 2])^
              Rational[1, 2], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& ), 1 -> (Inset[
           Framed[
            Style[$CellContext`x + (1 - $CellContext`x^2)^Rational[1, 2], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& ), 2 -> (Inset[
           Framed[
            Style[$CellContext`x - (1 - $CellContext`x^2)^Rational[1, 2], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& )}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Opacity[1], {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
            "VertexID$2", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$1"], InsetBox[
          StyleBox["2",
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$1", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {Arrowheads[{{0.035, 1, {
               GraphicsBox[
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{-0.6196492749623843, -0.30983120782659546`}, \
{-0.6666666666666666, -0.21579642441803149`}, {-0.23506067713979562`, 
                 0.}, {-0.6666666666666666, 
                 0.21579642441803237`}, {-0.6196492749623843, 
                 0.3098312078265959}, {0., 0.}}}]], 0.23506067713979562`}}}], 
           ArrowBox[{
            DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
             "VertexID$3", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$2"], InsetBox[
          StyleBox["1",
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$2", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
            "VertexID$3", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$3"], InsetBox[
          StyleBox["1",
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$3", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}}, 
       {GrayLevel[0.7], EdgeForm[None], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["x", "2"]}]], "+", "x"}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {0.4969222153812606, 0.}],
         "DynamicName",
         BoxID -> "VertexID$1"], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{"x", "-", 
             SqrtBox[
              RowBox[{"1", "-", 
               SuperscriptBox["x", "2"]}]]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {0.9999936568025142, 0.8642449403459487}],
         "DynamicName",
         BoxID -> "VertexID$2"], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{
             SqrtBox["2"], " ", 
             SqrtBox[
              RowBox[{"x", " ", 
               SqrtBox[
                RowBox[{"1", "-", 
                 SuperscriptBox["x", "2"]}]]}]]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {0., 0.8677950236298684}],
         "DynamicName",
         BoxID -> "VertexID$3"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.8971430691892233`*^9, 3.8971431385807743`*^9}, 
   3.897143186986519*^9, {3.8971435171219416`*^9, 3.897143528038904*^9}, 
   3.897143588844904*^9, 3.897143671696023*^9, 3.897143712071889*^9, {
   3.8971437531102247`*^9, 3.897143793815359*^9}, {3.8971439489899387`*^9, 
   3.8971439621662855`*^9}, 3.8971439982967215`*^9, {3.8971441212341633`*^9, 
   3.8971441454279957`*^9}, {3.897144188078329*^9, 3.8971442038512793`*^9}, 
   3.8971442675382967`*^9, {3.8971472393720055`*^9, 3.89714729072727*^9}, {
   3.897147335062069*^9, 3.897147365373086*^9}, {3.897147419614764*^9, 
   3.897147429845771*^9}, {3.8971474735275593`*^9, 3.8971474886737413`*^9}, {
   3.8971476318290153`*^9, 3.8971476681056547`*^9}, 3.897147809612213*^9, 
   3.897147868261174*^9, {3.897148121365678*^9, 3.897148129675482*^9}, {
   3.8971481841324797`*^9, 3.8971481897346573`*^9}, {3.897148370404993*^9, 
   3.897148392349042*^9}},
 CellLabel->"Out[56]=",ExpressionUUID->"22e622c8-9fa0-4911-971a-249de12edc07"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4}, {Null, {{1, 2}, {3, 4}}}, {
      EdgeLabels -> {UndirectedEdge[1, 2] -> Placed[
           Style[2, 14, FontFamily -> "CMU Serif"], 0.5], 
         UndirectedEdge[3, 4] -> Placed[
           Style[5, 14, FontFamily -> "CMU Serif"], 0.5]}, PlotRangePadding -> 
       Scaled[0.1], PlotTheme -> "DiagramBlack", VertexLabels -> {None}, 
       VertexShapeFunction -> {3 -> (Inset[
           Framed[
            Style[2 Cos[$CellContext`x] + Sin[$CellContext`x], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& ), 1 -> (Inset[
           Framed[
            Style[Cos[$CellContext`x] + Sin[$CellContext`x], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& ), 4 -> (Inset[
           Framed[
            Style[Cos[$CellContext`x] - 2 Sin[$CellContext`x], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& ), 2 -> (Inset[
           Framed[
            Style[Cos[$CellContext`x] - Sin[$CellContext`x], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& )}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Opacity[1], {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
            "VertexID$2", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$1"], InsetBox[
          StyleBox["2",
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$1", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          LineBox[{
           DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
            "VertexID$4", Automatic, Center]}],
          "DynamicName",
          BoxID -> "EdgeLabelID$2"], InsetBox[
          StyleBox["5",
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$2", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}}, 
       {GrayLevel[0.7], EdgeForm[None], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{
             RowBox[{"sin", "(", "x", ")"}], "+", 
             RowBox[{"cos", "(", "x", ")"}]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {1.12501, -0.37503000000000003}],
         "DynamicName",
         BoxID -> "VertexID$1"], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{
             RowBox[{"cos", "(", "x", ")"}], "-", 
             RowBox[{"sin", "(", "x", ")"}]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {0.12501000000000007, -0.37503000000000003}],
         "DynamicName",
         BoxID -> "VertexID$2"], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{
             RowBox[{"sin", "(", "x", ")"}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"cos", "(", "x", ")"}]}]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {1.12501, -0.12501}],
         "DynamicName",
         BoxID -> "VertexID$3"], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{
             RowBox[{"cos", "(", "x", ")"}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"sin", "(", "x", ")"}]}]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {0.12501000000000007, -0.12501}],
         "DynamicName",
         BoxID -> "VertexID$4"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.8971430691892233`*^9, 3.8971431385807743`*^9}, 
   3.897143186986519*^9, {3.8971435171219416`*^9, 3.897143528038904*^9}, 
   3.897143588844904*^9, 3.897143671696023*^9, 3.897143712071889*^9, {
   3.8971437531102247`*^9, 3.897143793815359*^9}, {3.8971439489899387`*^9, 
   3.8971439621662855`*^9}, 3.8971439982967215`*^9, {3.8971441212341633`*^9, 
   3.8971441454279957`*^9}, {3.897144188078329*^9, 3.8971442038512793`*^9}, 
   3.8971442675382967`*^9, {3.8971472393720055`*^9, 3.89714729072727*^9}, {
   3.897147335062069*^9, 3.897147365373086*^9}, {3.897147419614764*^9, 
   3.897147429845771*^9}, {3.8971474735275593`*^9, 3.8971474886737413`*^9}, {
   3.8971476318290153`*^9, 3.8971476681056547`*^9}, 3.897147809612213*^9, 
   3.897147868261174*^9, {3.897148121365678*^9, 3.897148129675482*^9}, {
   3.8971481841324797`*^9, 3.8971481897346573`*^9}, {3.897148370404993*^9, 
   3.8971483923747673`*^9}},
 CellLabel->"Out[57]=",ExpressionUUID->"0c98960c-bf1d-4838-85d6-628cfc115e73"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 
      4}, {{{1, 2}, {1, 3}, {1, 4}, {2, 3}, {2, 4}, {3, 4}}, Null}, {
      EdgeLabels -> {DirectedEdge[3, 4] -> Placed[
           
           Style[$CellContext`b - $CellContext`c, 14, FontFamily -> 
            "CMU Serif"], 0.5], DirectedEdge[2, 4] -> Placed[
           
           Style[(-2) $CellContext`a - $CellContext`c, 14, FontFamily -> 
            "CMU Serif"], 0.5], DirectedEdge[2, 3] -> Placed[
           
           Style[(-2) $CellContext`a - $CellContext`b, 14, FontFamily -> 
            "CMU Serif"], 0.5], DirectedEdge[1, 4] -> Placed[
           Style[
           2 $CellContext`a - $CellContext`c, 14, FontFamily -> "CMU Serif"], 
           0.5], DirectedEdge[1, 3] -> Placed[
           Style[
           2 $CellContext`a - $CellContext`b, 14, FontFamily -> "CMU Serif"], 
           0.5], DirectedEdge[1, 2] -> Placed[
           Style[4 $CellContext`a, 14, FontFamily -> "CMU Serif"], 0.5]}, 
       PlotRangePadding -> Scaled[0.1], PlotTheme -> "DiagramBlack", 
       VertexLabels -> {None}, VertexShapeFunction -> {3 -> (Inset[
           Framed[
            
            Style[$CellContext`r == ($CellContext`b + \
$CellContext`a^2/$CellContext`x + $CellContext`x)^Rational[1, 2], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& ), 1 -> (Inset[
           Framed[
            
            Style[$CellContext`p == $CellContext`a $CellContext`x^
                Rational[-1, 2] + $CellContext`x^Rational[1, 2], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& ), 4 -> (Inset[
           Framed[
            
            Style[$CellContext`s == ($CellContext`c + \
$CellContext`a^2/$CellContext`x + $CellContext`x)^Rational[1, 2], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& ), 2 -> (Inset[
           Framed[
            
            Style[$CellContext`q == -$CellContext`a $CellContext`x^
                Rational[-1, 2] + $CellContext`x^Rational[1, 2], 
             GrayLevel[0], 14, FontFamily -> "CMU Serif"], FrameStyle -> 
            None], #]& )}}]]}, 
    TagBox[GraphicsGroupBox[{
       {GrayLevel[0], Opacity[1], {
         TagBox[
          {Arrowheads[{{0.035, 1, {
               GraphicsBox[
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{-0.6196492749623843, -0.30983120782659546`}, \
{-0.6666666666666666, -0.21579642441803149`}, {-0.23506067713979562`, 
                 0.}, {-0.6666666666666666, 
                 0.21579642441803237`}, {-0.6196492749623843, 
                 0.3098312078265959}, {0., 0.}}}]], 0.23506067713979562`}}}], 
           ArrowBox[{
            DynamicLocation["VertexID$1", Automatic, Center], DynamicLocation[
             "VertexID$2", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$1"], InsetBox[
          StyleBox[
           RowBox[{"4", " ", "a"}],
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$1", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {Arrowheads[{{0.035, 1, {
               GraphicsBox[
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{-0.6196492749623843, -0.30983120782659546`}, \
{-0.6666666666666666, -0.21579642441803149`}, {-0.23506067713979562`, 
                 0.}, {-0.6666666666666666, 
                 0.21579642441803237`}, {-0.6196492749623843, 
                 0.3098312078265959}, {0., 0.}}}]], 0.23506067713979562`}}}], 
           ArrowBox[
            BezierCurveBox[{
             DynamicLocation[
              "VertexID$1", Automatic, Center], {-0.24042613086921105`, 
              2.759573869130789}, {-0.32011027392758673`, 
              2.679889726072413}, {-0.4076254611223915, 
              2.5923745388776087`}, {-0.5029716924536255, 
              2.4970283075463744`}, {-0.6061489679212887, 
              2.3938510320787114`}, {-0.717157287525381, 
              2.282842712474619}, {-0.7765193382916591, 
              2.2185423901034023`}, {-0.8288976183795513, 
              2.151349295200695}, {-0.8742921277890583, 
              2.0812634277664976`}, {-0.9127028665201794, 
              2.0082847878008083`}, {-0.9441298345729148, 
              1.9324133753036286`}, {-0.9685730319472646, 
              1.853649190274958}, {-0.9860324586432287, 
              1.771992232714796}, {-0.9965081146608072, 
              1.6874425026231437`}, {-1., 1.6}, {-1., 
              1.5135802469135802`}, {-1., 
              1.4320987654320987`}, {-1.0000000000000002`, 
              1.3555555555555558`}, {-1., 1.2839506172839508`}, {-1., 
              1.217283950617284}, DynamicLocation[
              "VertexID$3", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$2"], InsetBox[
          StyleBox[
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", "b"}],
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$2", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {Arrowheads[{{0.035, 1, {
               GraphicsBox[
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{-0.6196492749623843, -0.30983120782659546`}, \
{-0.6666666666666666, -0.21579642441803149`}, {-0.23506067713979562`, 
                 0.}, {-0.6666666666666666, 
                 0.21579642441803237`}, {-0.6196492749623843, 
                 0.3098312078265959}, {0., 0.}}}]], 0.23506067713979562`}}}], 
           ArrowBox[
            BezierCurveBox[{
             DynamicLocation["VertexID$1", Automatic, Center], {
              0.24042613086921105`, 2.759573869130789}, {0.32011027392758673`,
               2.679889726072413}, {0.4076254611223915, 
              2.5923745388776087`}, {0.5029716924536255, 
              2.4970283075463744`}, {0.6061489679212887, 
              2.3938510320787114`}, {0.717157287525381, 2.282842712474619}, {
              0.7765193382916591, 2.2185423901034023`}, {0.8288976183795513, 
              2.151349295200695}, {0.8742921277890583, 2.0812634277664976`}, {
              0.9127028665201794, 2.0082847878008083`}, {0.9441298345729148, 
              1.9324133753036286`}, {0.9685730319472646, 1.853649190274958}, {
              0.9860324586432287, 1.771992232714796}, {0.9965081146608072, 
              1.6874425026231437`}, {1., 1.4}, {0.9965081146608071, 
              1.3125574973768561`}, {0.9860324586432287, 
              1.2280077672852039`}, {0.9685730319472647, 
              1.1463508097250426`}, {0.9441298345729148, 
              1.0675866246963714`}, {0.9127028665201793, 
              0.9917152121991917}, {0.8742921277890583, 0.9187365722335026}, {
              0.8288976183795514, 0.8486507047993046}, {0.7765193382916591, 
              0.7814576098965974}, {0.717157287525381, 0.717157287525381}, {
              0.6061489679212886, 0.6061489679212886}, {0.5029716924536255, 
              0.5029716924536255}, {0.4076254611223916, 0.4076254611223916}, {
              0.32011027392758673`, 0.32011027392758673`}, {
              0.24042613086921102`, 0.24042613086921102`}, DynamicLocation[
              "VertexID$4", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$3"], InsetBox[
          StyleBox[
           RowBox[{
            RowBox[{"2", " ", "a"}], "-", "c"}],
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$3", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {Arrowheads[{{0.035, 1, {
               GraphicsBox[
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{-0.6196492749623843, -0.30983120782659546`}, \
{-0.6666666666666666, -0.21579642441803149`}, {-0.23506067713979562`, 
                 0.}, {-0.6666666666666666, 
                 0.21579642441803237`}, {-0.6196492749623843, 
                 0.3098312078265959}, {0., 0.}}}]], 0.23506067713979562`}}}], 
           ArrowBox[{
            DynamicLocation["VertexID$2", Automatic, Center], DynamicLocation[
             "VertexID$3", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$4"], InsetBox[
          StyleBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"2", " ", "a"}]}], "-", "b"}],
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$4", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {Arrowheads[{{0.035, 1, {
               GraphicsBox[
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{-0.6196492749623843, -0.30983120782659546`}, \
{-0.6666666666666666, -0.21579642441803149`}, {-0.23506067713979562`, 
                 0.}, {-0.6666666666666666, 
                 0.21579642441803237`}, {-0.6196492749623843, 
                 0.3098312078265959}, {0., 0.}}}]], 0.23506067713979562`}}}], 
           ArrowBox[
            BezierCurveBox[{
             DynamicLocation["VertexID$2", Automatic, Center], {0., 
              1.7827160493827163`}, {0., 1.7160493827160495`}, {0., 
              1.6444444444444444`}, {0., 1.567901234567901}, {0., 
              1.4864197530864198`}, {0., 1.4}, {0., 1.3111111111111107`}, {0.,
               1.222222222222222}, {0., 1.1333333333333335`}, {0., 
              1.0444444444444445`}, {0., 0.9555555555555556}, {0., 
              0.8666666666666667}, {0., 0.7777777777777778}, {0., 
              0.6888888888888889}, {0., 0.6}, {0., 0.5135802469135802}, {0., 
              0.4320987654320988}, {0., 0.35555555555555557`}, {0., 
              0.2839506172839506}, {0., 0.2172839506172839}, DynamicLocation[
              "VertexID$4", Automatic, Center]}]]},
          "DynamicName",
          BoxID -> "EdgeLabelID$5"], InsetBox[
          StyleBox[
           RowBox[{
            RowBox[{"-", 
             RowBox[{"2", " ", "a"}]}], "-", "c"}],
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$5", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}, {
         TagBox[
          {Arrowheads[{{0.035, 1, {
               GraphicsBox[
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}}}, {{{-0.6196492749623843, -0.30983120782659546`}, \
{-0.6666666666666666, -0.21579642441803149`}, {-0.23506067713979562`, 
                 0.}, {-0.6666666666666666, 
                 0.21579642441803237`}, {-0.6196492749623843, 
                 0.3098312078265959}, {0., 0.}}}]], 0.23506067713979562`}}}], 
           ArrowBox[{
            DynamicLocation["VertexID$3", Automatic, Center], DynamicLocation[
             "VertexID$4", Automatic, Center]}]},
          "DynamicName",
          BoxID -> "EdgeLabelID$6"], InsetBox[
          StyleBox[
           RowBox[{"b", "-", "c"}],
           StripOnInput->False,
           FontFamily->"CMU Serif",
           FontSize->14], 
          Offset[{0, 2}, DynamicLocation[
           "EdgeLabelID$6", Automatic, Scaled[0.5]]], ImageScaled[{0.5, 0}],
          BaseStyle->"Graphics"]}}, 
       {GrayLevel[0.7], EdgeForm[None], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{"p", "\[LongEqual]", 
             RowBox[{
              FractionBox["a", 
               SqrtBox["x"]], "+", 
              SqrtBox["x"]}]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {0., 3.}],
         "DynamicName",
         BoxID -> "VertexID$1"], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{"q", "\[LongEqual]", 
             RowBox[{
              SqrtBox["x"], "-", 
              FractionBox["a", 
               SqrtBox["x"]]}]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {0., 2.}],
         "DynamicName",
         BoxID -> "VertexID$2"], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{"r", "\[LongEqual]", 
             SqrtBox[
              RowBox[{
               FractionBox[
                SuperscriptBox["a", "2"], "x"], "+", "b", "+", "x"}]]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {-1., 1.}],
         "DynamicName",
         BoxID -> "VertexID$3"], 
        TagBox[InsetBox[
          FrameBox[
           StyleBox[
            RowBox[{"s", "\[LongEqual]", 
             SqrtBox[
              RowBox[{
               FractionBox[
                SuperscriptBox["a", "2"], "x"], "+", "c", "+", "x"}]]}],
            StripOnInput->False,
            LineColor->GrayLevel[0],
            FrontFaceColor->GrayLevel[0],
            BackFaceColor->GrayLevel[0],
            GraphicsColor->GrayLevel[0],
            FontFamily->"CMU Serif",
            FontSize->14,
            FontColor->GrayLevel[0]],
           FrameStyle->None,
           StripOnInput->False], {0., 0.}],
         "DynamicName",
         BoxID -> "VertexID$4"]}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  PlotRangePadding->Scaled[0.1]]], "Output",
 CellChangeTimes->{{3.8971430691892233`*^9, 3.8971431385807743`*^9}, 
   3.897143186986519*^9, {3.8971435171219416`*^9, 3.897143528038904*^9}, 
   3.897143588844904*^9, 3.897143671696023*^9, 3.897143712071889*^9, {
   3.8971437531102247`*^9, 3.897143793815359*^9}, {3.8971439489899387`*^9, 
   3.8971439621662855`*^9}, 3.8971439982967215`*^9, {3.8971441212341633`*^9, 
   3.8971441454279957`*^9}, {3.897144188078329*^9, 3.8971442038512793`*^9}, 
   3.8971442675382967`*^9, {3.8971472393720055`*^9, 3.89714729072727*^9}, {
   3.897147335062069*^9, 3.897147365373086*^9}, {3.897147419614764*^9, 
   3.897147429845771*^9}, {3.8971474735275593`*^9, 3.8971474886737413`*^9}, {
   3.8971476318290153`*^9, 3.8971476681056547`*^9}, 3.897147809612213*^9, 
   3.897147868261174*^9, {3.897148121365678*^9, 3.897148129675482*^9}, {
   3.8971481841324797`*^9, 3.8971481897346573`*^9}, {3.897148370404993*^9, 
   3.8971483924029026`*^9}},
 CellLabel->"Out[58]=",ExpressionUUID->"ed1d483e-ab84-4df2-b71e-47bf819f7bf2"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 606.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (June 3, 2023)",
StyleDefinitions->"style.nb",
ExpressionUUID->"a163f4b3-f4d9-472b-8962-64ed1464bf9e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 157, 3, 67, "Section",ExpressionUUID->"0acdbdfb-68ad-4f8d-93da-7584d7bec660"],
Cell[CellGroupData[{
Cell[762, 29, 1420, 33, 197, "Input",ExpressionUUID->"8802847e-0aa3-4fbe-b871-0e48b98e1472"],
Cell[2185, 64, 756, 15, 28, "Message",ExpressionUUID->"094ac411-85e5-4cde-9c58-7d4487fc07e9"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2990, 85, 136, 3, 67, "Section",ExpressionUUID->"784fc19c-62f8-4bad-881c-fca2328794d0"],
Cell[CellGroupData[{
Cell[3151, 92, 2053, 41, 153, "Input",ExpressionUUID->"2cf80ff6-bf72-4d35-b1f5-f03543c34b66"],
Cell[5207, 135, 865, 14, 32, "Output",ExpressionUUID->"e149b0d4-3fc0-4f34-8565-f6cb022db2c0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6121, 155, 250, 5, 67, "Section",ExpressionUUID->"f82db896-cd4c-4cc8-84ca-4dbb44229ec2"],
Cell[CellGroupData[{
Cell[6396, 164, 3372, 77, 245, "Input",ExpressionUUID->"fcfad0f7-8d74-470f-91b3-73e347e63cc7"],
Cell[9771, 243, 1875, 44, 48, "Output",ExpressionUUID->"6cdb8a83-e535-4fc4-a454-50154dbff36a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11695, 293, 124, 3, 67, "Section",ExpressionUUID->"0870485f-1fbb-4531-ade5-39dfcfc3ddc3"],
Cell[CellGroupData[{
Cell[11844, 300, 4963, 132, 401, "Input",ExpressionUUID->"d98e5719-a905-4c40-ba62-eee6ff6ca634"],
Cell[16810, 434, 1480, 36, 47, "Output",ExpressionUUID->"890fef5b-bced-4691-8843-8faf04393a5d"],
Cell[18293, 472, 1306, 29, 47, "Output",ExpressionUUID->"1e500dc7-b054-4386-b34d-c9791aaead1f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19648, 507, 150, 3, 67, "Section",ExpressionUUID->"23a1a542-50f0-42ff-bd50-712fb6e1df74"],
Cell[CellGroupData[{
Cell[19823, 514, 11913, 277, 834, "Input",ExpressionUUID->"3a78e23b-afa1-4afd-b071-1979d220226b"],
Cell[31739, 793, 682, 11, 32, "Output",ExpressionUUID->"cd03747e-6abb-4d83-a05d-6823343737e0"],
Cell[32424, 806, 1259, 28, 51, "Output",ExpressionUUID->"85e292da-5e89-43f2-9f41-09bc7235e962"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33732, 840, 134, 3, 67, "Section",ExpressionUUID->"87fd259e-20f9-4879-89a8-14ec4ecb826d"],
Cell[CellGroupData[{
Cell[33891, 847, 8435, 196, 781, "Input",ExpressionUUID->"c6911c1f-5536-4bac-aab2-4c6f9b5462be"],
Cell[42329, 1045, 5111, 141, 163, "Output",ExpressionUUID->"cf381d1d-02bf-4545-aa3e-8cf4deadde7c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47489, 1192, 133, 3, 67, "Section",ExpressionUUID->"11e84cdc-6ae0-4d8f-ad5f-74b77672d2dc"],
Cell[CellGroupData[{
Cell[47647, 1199, 8022, 183, 331, "Input",ExpressionUUID->"4c9516ba-7077-4b96-8726-f5628ebd60bf"],
Cell[55672, 1384, 4293, 125, 110, "Output",ExpressionUUID->"42ae4c69-ff9e-4437-87a0-0e4ea0a4206e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60014, 1515, 130, 3, 67, "Section",ExpressionUUID->"090ecfcf-eec3-4fc4-a926-55581966e032"],
Cell[CellGroupData[{
Cell[60169, 1522, 2181, 62, 216, "Input",ExpressionUUID->"ad4da761-711f-4c1e-b169-b98f33f3076e"],
Cell[62353, 1586, 2540, 91, 120, "Output",ExpressionUUID->"e78fd9e1-2801-4fbf-80e5-c346b2513034"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64942, 1683, 135, 3, 67, "Section",ExpressionUUID->"bf1f2ecb-cd6e-4229-9641-c2b700125777"],
Cell[CellGroupData[{
Cell[65102, 1690, 17788, 411, 1147, "Input",ExpressionUUID->"b0d91778-42e8-4862-8bdb-9a37ac55d0ba"],
Cell[82893, 2103, 13247, 265, 337, "Print",ExpressionUUID->"afb8b7c5-32f9-4f90-914a-909d23f110e4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96189, 2374, 161, 3, 67, "Section",ExpressionUUID->"6a80edf5-fc8e-4cd2-ba32-96d03eb74cf4"],
Cell[CellGroupData[{
Cell[96375, 2381, 5774, 144, 584, "Input",ExpressionUUID->"14fe0ea8-b87a-4d7c-8dca-4496bba5ab9e"],
Cell[102152, 2527, 267, 5, 32, "Output",ExpressionUUID->"5720f030-a941-4960-be8c-5fee8b5f4d82"],
Cell[102422, 2534, 776, 24, 47, "Output",ExpressionUUID->"dacbedb0-7b1c-41b5-b248-a105f5cffcd9"],
Cell[103201, 2560, 717, 21, 35, "Output",ExpressionUUID->"25012b3c-48fb-45b4-b28a-91a97d6cdb00"],
Cell[103921, 2583, 2035, 66, 48, "Output",ExpressionUUID->"25306060-4b30-41e0-a320-8799a3ddc420"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[106005, 2655, 133, 3, 67, "Section",ExpressionUUID->"c90c1727-4a52-4082-8bb7-c975e7ea6866"],
Cell[CellGroupData[{
Cell[106163, 2662, 8582, 266, 505, "Input",ExpressionUUID->"9a461511-9375-49c5-824c-113359620a0c"],
Cell[114748, 2930, 172223, 2841, 249, 42492, 713, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"47f2840d-bd76-47ff-b413-1437f812c9dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[287020, 5777, 133, 3, 67, "Section",ExpressionUUID->"47fa7330-a06a-491f-bcb2-e643bcefe8b0"],
Cell[CellGroupData[{
Cell[287178, 5784, 4653, 135, 310, "Input",ExpressionUUID->"3a840ebf-a475-4613-94cb-a7a3a5a1500c"],
Cell[291834, 5921, 2181, 41, 302, "Output",ExpressionUUID->"ad4d1b84-ef72-4727-808c-4d7fef134d93"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[294064, 5968, 136, 3, 67, "Section",ExpressionUUID->"c2e9f83e-251d-478a-acd7-5d8ec0104088"],
Cell[CellGroupData[{
Cell[294225, 5975, 19247, 430, 615, "Input",ExpressionUUID->"84021d6c-ebd2-4e47-a44d-19788734ab13"],
Cell[313475, 6407, 6691, 158, 303, "Output",ExpressionUUID->"22e622c8-9fa0-4911-971a-249de12edc07"],
Cell[320169, 6567, 6248, 149, 113, "Output",ExpressionUUID->"0c98960c-bf1d-4838-85d6-628cfc115e73"],
Cell[326420, 6718, 16057, 348, 449, "Output",ExpressionUUID->"ed1d483e-ab84-4df2-b71e-47bf819f7bf2"]
}, Open  ]]
}, Open  ]]
}
]
*)

