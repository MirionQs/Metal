(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    333269,       6621]
NotebookOptionsPosition[    328145,       6518]
NotebookOutlinePosition[    328579,       6535]
CellTagsIndexPosition[    328536,       6532]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["CheckVersion", "Section",
 CellChangeTimes->{3.8812489500300703`*^9, 
  3.889058898547368*^9},ExpressionUUID->"0acdbdfb-68ad-4f8d-93da-\
7584d7bec660"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "CheckVersion", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CheckVersion", "::", "vtl"}], " ", "=", " ", 
    "\"\<Mathematica \:7248\:672c\:8fc7\:4f4e. \:5f53\:524d\:7684\:7248\:672c\
\:4e3a ``, \:8981\:6c42\:7684\:7248\:672c\:4e3a ``.\>\""}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CheckVersion", "[", 
     RowBox[{"v_", "?", "NumericQ"}], "]"}], " ", ":=", "\[IndentingNewLine]",
     " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"TrueQ", "[", 
       RowBox[{"$VersionNumber", " ", "<", " ", "v"}], "]"}], ",", " ", 
      RowBox[{"Message", "[", 
       RowBox[{
        RowBox[{"CheckVersion", "::", "vtl"}], ",", " ", "$VersionNumber", 
        ",", " ", "v"}], "]"}]}], "]"}]}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CheckVersion", "[", "10", "]"}], "\[IndentingNewLine]", 
 RowBox[{"CheckVersion", "[", "20", "]"}]}], "Input",
 CellChangeTimes->{{3.881249153968047*^9, 3.8812491653774567`*^9}, {
  3.881254836613456*^9, 3.8812548409438276`*^9}, {3.882200662580675*^9, 
  3.8822006680866556`*^9}, {3.8822009476508985`*^9, 3.8822009555863943`*^9}, {
  3.889058869949606*^9, 3.8890588904645743`*^9}},
 CellLabel->
  "In[228]:=",ExpressionUUID->"8802847e-0aa3-4fbe-b871-0e48b98e1472"],

Cell[BoxData[
 TemplateBox[{
  "CheckVersion", "vtl", 
   "\"Mathematica \:7248\:672c\:8fc7\:4f4e. \:5f53\:524d\:7684\:7248\:672c\
\:4e3a \\!\\(\\*RowBox[{\\\"13.2`\\\"}]\\), \:8981\:6c42\:7684\:7248\:672c\
\:4e3a \\!\\(\\*RowBox[{\\\"20\\\"}]\\).\"", 2, 232, 32, 22164631493275300820,
    "Local", "Global`CheckVersion"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{
  3.8812491658678274`*^9, 3.8812526572892103`*^9, 3.8812548521047754`*^9, 
   3.881264216757911*^9, 3.8822005344848256`*^9, 3.882200668798619*^9, {
   3.882200948121871*^9, 3.882200956172943*^9}, 3.88905889258403*^9},
 CellLabel->
  "During evaluation of \
In[228]:=",ExpressionUUID->"66cd9868-369a-4aea-942d-e9cb4caebf61"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ExpressionPivot", "Section",
 CellChangeTimes->{
  3.881261571343264*^9},ExpressionUUID->"784fc19c-62f8-4bad-881c-\
fca2328794d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "ExpressionPivot", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "ExpressionPivot", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExpressionPivot", "[", "expr_", "]"}], ":=", 
    RowBox[{"FirstCase", "[", 
     RowBox[{"expr", ",", "_Symbol", ",", "False", ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "Infinity"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ExpressionPivot", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "x", ",", 
    FractionBox["a", 
     RowBox[{"a", "+", "b"}]]}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8812615801230173`*^9, 3.88126167633887*^9}, {
   3.8812617663621626`*^9, 3.8812618238386993`*^9}, {3.8812620068443146`*^9, 
   3.8812620165175595`*^9}, {3.8812620479419527`*^9, 
   3.8812620815899687`*^9}, {3.8812621946866293`*^9, 3.881262209021083*^9}, {
   3.881262315054818*^9, 3.881262438736573*^9}, {3.881262498457862*^9, 
   3.8812625557944126`*^9}, {3.8812626485340843`*^9, 
   3.8812627685465975`*^9}, {3.8812628909450665`*^9, 
   3.8812629314502225`*^9}, {3.881262961971888*^9, 3.8812631580806475`*^9}, {
   3.8812632173477902`*^9, 3.881263309160058*^9}, {3.8822005740689077`*^9, 
   3.882200605935709*^9}, {3.8822006542479105`*^9, 3.882200690746396*^9}, 
   3.8822008109922595`*^9, {3.889057643315501*^9, 3.8890576531716785`*^9}, {
   3.8890577545740843`*^9, 3.889057757051575*^9}, {3.8890577877598405`*^9, 
   3.8890578377002153`*^9}, 3.889057934251857*^9, {3.889057973843111*^9, 
   3.889057992623109*^9}, {3.889058041097636*^9, 3.889058125047696*^9}, {
   3.8890581726753273`*^9, 3.889058185687188*^9}, {3.8890711078797207`*^9, 
   3.8890711545777483`*^9}, {3.889071782661847*^9, 3.889071796142689*^9}, {
   3.889071867712634*^9, 3.8890718895424705`*^9}},
 CellLabel->
  "In[1016]:=",ExpressionUUID->"2cf80ff6-bf72-4d35-b1f5-f03543c34b66"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"False", ",", "x", ",", "a"}], "}"}]], "Output",
 CellChangeTimes->{{3.881263029681779*^9, 3.881263158365161*^9}, {
   3.8812632194657574`*^9, 3.8812633097171683`*^9}, 3.881263392397648*^9, 
   3.881265552205414*^9, {3.8822005831546483`*^9, 3.882200609133211*^9}, 
   3.882200656635619*^9, 3.88220069118622*^9, 3.8822008113864794`*^9, {
   3.8890576393829947`*^9, 3.8890576534921494`*^9}, 3.8890577573947535`*^9, 
   3.889057838372447*^9, 3.8890579351322865`*^9, {3.8890579797600126`*^9, 
   3.889057993077814*^9}, {3.889058076797559*^9, 3.8890581384728007`*^9}, {
   3.88905817566448*^9, 3.8890581861029434`*^9}, 3.889059198965727*^9, 
   3.8890711635083895`*^9, 3.8890717966608677`*^9, {3.8890718777454143`*^9, 
   3.8890718899799433`*^9}},
 CellLabel->
  "Out[1019]=",ExpressionUUID->"e149b0d4-3fc0-4f34-8565-f6cb022db2c0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CoefficientSeparation", "Section",
 CellChangeTimes->{
  3.8812488993542643`*^9, {3.889059222842462*^9, 3.8890592303488493`*^9}, {
   3.8890593346512423`*^9, 
   3.8890593390963335`*^9}},ExpressionUUID->"f82db896-cd4c-4cc8-84ca-\
4dbb44229ec2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "CoefficientSeparation", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "CoefficientSeparation", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CoefficientSeparation", "[", 
     RowBox[{"expr_", ",", "x_Symbol"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "coef", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"FreeQ", "[", 
          RowBox[{"expr", ",", "x"}], "]"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", 
           RowBox[{"expr", ",", "1"}], "}"}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"#", ",", 
            FractionBox["expr", "#"]}], "}"}], "&"}], "@", 
         RowBox[{
          RowBox[{"Replace", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"c_.", "_"}], "/;", 
             RowBox[{"FreeQ", "[", 
              RowBox[{"c", ",", "x"}], "]"}]}], "\[Rule]", "c"}], "]"}], "@", 
          RowBox[{"Simplify", "@", "expr"}]}]}], "//", "Simplify"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CoefficientSeparation", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox[
      RowBox[{"a", "+", "b"}], "2"], ",", 
     FractionBox["2", 
      RowBox[{"a", "+", "b"}]], ",", 
     FractionBox[
      RowBox[{"a", "+", "b"}], 
      RowBox[{"2", "x"}]], ",", "x", ",", 
     RowBox[{"-", "x"}], ",", 
     RowBox[{
      RowBox[{"2", "a", " ", 
       RowBox[{"Sin", "[", "x", "]"}]}], "+", 
      RowBox[{"4", "a", " ", "x"}]}]}], "}"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.881241904847962*^9, 3.881241987198187*^9}, {
   3.8812420312408314`*^9, 3.881242046928899*^9}, {3.8812423871845837`*^9, 
   3.881242405022174*^9}, 3.8812525017519813`*^9, {3.8812633706399508`*^9, 
   3.8812633878811007`*^9}, {3.882200537029644*^9, 3.882200563996333*^9}, {
   3.8822006123689237`*^9, 3.882200614089099*^9}, {3.882200672506434*^9, 
   3.8822006780377517`*^9}, 3.882200806127757*^9, {3.8890537514115505`*^9, 
   3.889053808475528*^9}, {3.8890539727361536`*^9, 3.8890540057319794`*^9}, {
   3.8890540808730783`*^9, 3.889054096899433*^9}, 3.8890545487134547`*^9, {
   3.8890549209593997`*^9, 3.889054935737418*^9}, {3.889054994449294*^9, 
   3.889055019502039*^9}, 3.8890550958059497`*^9, {3.889055129243005*^9, 
   3.889055150173757*^9}, {3.8890553599907513`*^9, 3.889055390612606*^9}, {
   3.8890557736609335`*^9, 3.889055786978454*^9}, {3.8890558981639132`*^9, 
   3.889055938055687*^9}, {3.889058591883483*^9, 3.8890585989581165`*^9}, {
   3.8890586398201203`*^9, 3.8890586412915077`*^9}, {3.8890586847547903`*^9, 
   3.8890586894029675`*^9}, {3.889059226951191*^9, 3.889059228236294*^9}, {
   3.889059331118971*^9, 3.889059331132559*^9}, {3.8890597949101176`*^9, 
   3.889059809706137*^9}, {3.8890598511338387`*^9, 3.889059968589416*^9}, 
   3.889060009495178*^9, {3.889060075719466*^9, 3.8890600981127143`*^9}},
 CellLabel->
  "In[299]:=",ExpressionUUID->"fcfad0f7-8d74-470f-91b3-73e347e63cc7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"a", "+", "b"}], "2"], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["2", 
      RowBox[{"a", "+", "b"}]], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"a", "+", "b"}], "2"], ",", 
     FractionBox["1", "x"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "x"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "a"}], ",", 
     RowBox[{
      RowBox[{"2", " ", "x"}], "+", 
      RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8812419481473436`*^9, 3.8812419884716463`*^9}, {
   3.8812420328120494`*^9, 3.8812420472353463`*^9}, 3.8812423676346383`*^9, 
   3.8812424190123997`*^9, 3.881248926754794*^9, 3.881248960524167*^9, 
   3.881249151692752*^9, 3.8812525093492107`*^9, {3.881263383645153*^9, 
   3.8812633883594255`*^9}, 3.8822005691071963`*^9, 3.8822006145621386`*^9, 
   3.882200678540535*^9, 3.882200807769185*^9, 3.882200958946048*^9, {
   3.8890537747634616`*^9, 3.889053787277115*^9}, {3.889053984226675*^9, 
   3.889054006079468*^9}, 3.8890540812591887`*^9, {3.8890549254876714`*^9, 
   3.889054942607421*^9}, {3.8890550000816965`*^9, 3.8890550199950476`*^9}, 
   3.8890550962967024`*^9, 3.889055129915924*^9, {3.8890553611597753`*^9, 
   3.889055390933779*^9}, {3.889055774265524*^9, 3.8890557874416385`*^9}, 
   3.8890558988916054`*^9, 3.8890559598391476`*^9, 3.889059196527463*^9, 
   3.889059342183187*^9, 3.88905981021385*^9, {3.8890598515791397`*^9, 
   3.8890599691147623`*^9}, 3.889060099212435*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"6cdb8a83-e535-4fc4-a454-50154dbff36a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBP", "Section",
 CellChangeTimes->{
  3.881248909154277*^9},ExpressionUUID->"0870485f-1fbb-4531-ade5-\
39dfcfc3ddc3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "IBP", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IBP", "[", 
    RowBox[{"u_", ",", " ", "v_", ",", " ", "x_Symbol"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coef", ",", "rem"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coef", ",", "rem"}], "}"}], "=", 
       RowBox[{"CoefficientSeparation", "[", 
        RowBox[{
         RowBox[{"v", " ", 
          RowBox[{"D", "[", 
           RowBox[{"u", ",", " ", "x"}], "]"}]}], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"u", " ", "v"}], "-", 
        RowBox[{"coef", 
         TemplateBox[{"rem", "x"},
          "InactiveIntegrate",
          DisplayFunction->(RowBox[{
             StyleBox["\[Integral]", "Inactive"], 
             RowBox[{#, 
               RowBox[{
                 StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
          InterpretationFunction->(RowBox[{
             RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
             RowBox[{#, ",", #2}], "]"}]& )]}]}], "//", "Simplify"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBP", "[", 
     RowBox[{"f_", ",", " ", "x_Symbol"}], "]"}], " ", ":=", " ", 
    RowBox[{"IBP", "[", 
     RowBox[{"f", ",", " ", "x", ",", " ", "x"}], "]"}]}], ";"}], " ", 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IBP", "[", 
    RowBox[{"u_", ",", " ", "v_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x_Symbol", ",", " ", "a_", ",", " ", "b_"}], "}"}]}], "]"}], 
   " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"coef", ",", "rem"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"coef", ",", "rem"}], "}"}], "=", 
       RowBox[{"CoefficientSeparation", "[", 
        RowBox[{
         RowBox[{"v", " ", 
          RowBox[{"D", "[", 
           RowBox[{"u", ",", " ", "x"}], "]"}]}], ",", "x"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         UnderscriptBox["\[Limit]", 
          RowBox[{"x", "->", "b"}]], 
         RowBox[{"u", " ", "v"}]}], "-", 
        RowBox[{
         UnderscriptBox["\[Limit]", 
          RowBox[{"x", "->", "a"}]], 
         RowBox[{"u", " ", "v"}]}], "-", 
        RowBox[{"coef", 
         TemplateBox[{"rem", "x", "a", "b"},
          "InactiveIntegrate",
          DisplayFunction->(RowBox[{
             SubsuperscriptBox[
              StyleBox["\[Integral]", "Inactive"], #3, #4], 
             RowBox[{#, 
               RowBox[{
                 StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
          InterpretationFunction->(RowBox[{
             RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
             RowBox[{#, ",", 
               RowBox[{"{", 
                 RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]}]}], "//",
        "Simplify"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBP", "[", 
     RowBox[{"f_", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x_Symbol", ",", " ", "a_", ",", " ", "b_"}], "}"}]}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"IBP", "[", 
     RowBox[{"f", ",", " ", "x", ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", "a", ",", " ", "b"}], "}"}]}], "]"}]}], ";"}], 
  " ", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"IBP", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"a", " ", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"b", " ", "x"}], "+", "c"}], ",", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", " ", "x"}], "]"}], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"IBP", "[", 
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8812410834260216`*^9, 3.881241134149821*^9}, {
   3.881241254961246*^9, 3.8812413680035696`*^9}, {3.881241470517207*^9, 
   3.881241501439555*^9}, {3.8812415507977233`*^9, 3.881241693887342*^9}, {
   3.881241853234975*^9, 3.8812418771560845`*^9}, {3.881242492384276*^9, 
   3.881242534238098*^9}, {3.881242579340028*^9, 3.8812426968652234`*^9}, 
   3.8812521964052157`*^9, 3.8812524928397207`*^9, {3.8822006961253505`*^9, 
   3.882200699226946*^9}, {3.8890585045880475`*^9, 3.8890585203069677`*^9}, {
   3.889059226976026*^9, 3.8890592269810314`*^9}, {3.8890593311390696`*^9, 
   3.8890593311430717`*^9}, {3.889060461027707*^9, 3.8890604634711876`*^9}, {
   3.8890605280058117`*^9, 3.8890605765441027`*^9}, {3.8890606839204807`*^9, 
   3.889060695482535*^9}, 3.8890607917205057`*^9},
 CellLabel->
  "In[317]:=",ExpressionUUID->"d98e5719-a905-4c40-ba62-eee6ff6ca634"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"c", "+", 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"b", "+", 
        RowBox[{"a", " ", "x"}]}], ")"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "-", 
  TemplateBox[{
    RowBox[{
      RowBox[{"(", 
        RowBox[{"b", "+", 
          RowBox[{"2", " ", "a", " ", "x"}]}], ")"}], " ", 
      RowBox[{"Sin", "[", 
        RowBox[{"x", " ", "\[Alpha]"}], "]"}]}], "x"},
   "InactiveIntegrate",
   DisplayFunction->(RowBox[{
      StyleBox["\[Integral]", "Inactive"], 
      RowBox[{#, 
        RowBox[{
          StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
   InterpretationFunction->(RowBox[{
      RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
      RowBox[{#, ",", #2}], "]"}]& )]}]], "Output",
 CellChangeTimes->{{3.881241096158072*^9, 3.881241103671297*^9}, {
   3.88124146574174*^9, 3.881241471108597*^9}, {3.881241689332575*^9, 
   3.8812416945595427`*^9}, {3.881241854792668*^9, 3.881241877430534*^9}, 
   3.881242445668012*^9, 3.8812424950309677`*^9, {3.881242528865363*^9, 
   3.8812425345635405`*^9}, {3.881242579969435*^9, 3.881242697442633*^9}, 
   3.8812489281468043`*^9, 3.881248962661623*^9, 3.881252510543561*^9, 
   3.8822007001348343`*^9, 3.8890584981049194`*^9, 3.8890605895369253`*^9, 
   3.889060713878621*^9, 3.889060794184311*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"890fef5b-bced-4691-8843-8faf04393a5d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
  RowBox[{"\[Alpha]", " ", 
   TemplateBox[{
     RowBox[{"Cos", "[", 
       RowBox[{"\[Alpha]", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}], "x"},
    "InactiveIntegrate",
    DisplayFunction->(RowBox[{
       StyleBox["\[Integral]", "Inactive"], 
       RowBox[{#, 
         RowBox[{
           StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
    InterpretationFunction->(RowBox[{
       RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
       RowBox[{#, ",", #2}], "]"}]& )]}]}]], "Output",
 CellChangeTimes->{{3.881241096158072*^9, 3.881241103671297*^9}, {
   3.88124146574174*^9, 3.881241471108597*^9}, {3.881241689332575*^9, 
   3.8812416945595427`*^9}, {3.881241854792668*^9, 3.881241877430534*^9}, 
   3.881242445668012*^9, 3.8812424950309677`*^9, {3.881242528865363*^9, 
   3.8812425345635405`*^9}, {3.881242579969435*^9, 3.881242697442633*^9}, 
   3.8812489281468043`*^9, 3.881248962661623*^9, 3.881252510543561*^9, 
   3.8822007001348343`*^9, 3.8890584981049194`*^9, 3.8890605895369253`*^9, 
   3.889060713878621*^9, 3.88906079418931*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"1e500dc7-b054-4386-b34d-c9791aaead1f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["IBS", "Section",
 CellChangeTimes->{{3.881248913047449*^9, 
  3.8812489142694426`*^9}},ExpressionUUID->"23a1a542-50f0-42ff-bd50-\
712fb6e1df74"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "IBS", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "IBS", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"Assumptions", "\[Rule]", "$Assumptions"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"ex_", "\[Rule]", "et_"}], ",", "x_Symbol", ",", "t_Symbol", 
      ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"ex", ",", "t"}], "]"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"assum", "=", 
        RowBox[{"OptionValue", "[", "Assumptions", "]"}]}], ",", "u"}], "}"}],
      ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CheckVersion", "[", "13.1", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ex", "===", "x"}], ",", "\[IndentingNewLine]", 
            RowBox[{"f", "/.", 
             RowBox[{"x", "->", "et"}]}], "\[IndentingNewLine]", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"IntegrateChangeVariables", "[", 
               RowBox[{
                TemplateBox[{"f", "x"},
                 "InactiveIntegrate",
                 DisplayFunction->(RowBox[{
                    StyleBox["\[Integral]", "Inactive"], 
                    RowBox[{#, 
                    RowBox[{
                    StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
                 InterpretationFunction->(RowBox[{
                    RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
                    RowBox[{#, ",", #2}], "]"}]& )], ",", "u", ",", 
                RowBox[{"u", "\[Equal]", "ex"}], ",", 
                RowBox[{"Assumptions", "->", "assum"}]}], "]"}], 
              "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "/.", 
             RowBox[{"u", "->", "et"}]}]}], "\[IndentingNewLine]", "]"}], 
          RowBox[{"D", "[", 
           RowBox[{"et", ",", "t"}], "]"}]}], "/.", 
         RowBox[{
          RowBox[{"C", "[", "_", "]"}], "->", "0"}]}], "\[IndentingNewLine]", 
        ",", "assum"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"x_Symbol", "\[Rule]", "et_"}], ",", "t_Symbol", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", 
   RowBox[{"IBS", "[", 
    RowBox[{"f", ",", 
     RowBox[{"x", "->", "et"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"IBS", "[", 
      RowBox[{"f_", ",", 
       RowBox[{"ex_", "\[Rule]", "t_Symbol"}], ",", "x_Symbol", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
     RowBox[{
      RowBox[{"x", "=!=", "t"}], "&&", 
      RowBox[{"FreeQ", "[", 
       RowBox[{"ex", ",", "t"}], "]"}]}]}], ":=", 
    RowBox[{"IBS", "[", 
     RowBox[{"f", ",", 
      RowBox[{"ex", "->", "t"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], ",", 
      RowBox[{"ex_", "\[Rule]", "et_"}], ",", "x_Symbol", ",", "t_Symbol", 
      ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"ex", ",", "t"}], "]"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"assum", "=", 
        RowBox[{"OptionValue", "[", "Assumptions", "]"}]}], ",", "u", ",", 
       "temp"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CheckVersion", "[", "13.1", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"temp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"ex", "===", "x"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          TemplateBox[{"f", "x", "a", "b"},
           "InactiveIntegrate",
           DisplayFunction->(RowBox[{
              SubsuperscriptBox[
               StyleBox["\[Integral]", "Inactive"], #3, #4], 
              RowBox[{#, 
                RowBox[{
                  StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
           InterpretationFunction->(RowBox[{
              RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
              RowBox[{#, ",", 
                RowBox[{"{", 
                  RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], "/.", 
          RowBox[{"x", "->", "u"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"IntegrateChangeVariables", "[", 
          RowBox[{
           TemplateBox[{"f", "x", "a", "b"},
            "InactiveIntegrate",
            DisplayFunction->(RowBox[{
               SubsuperscriptBox[
                StyleBox["\[Integral]", "Inactive"], #3, #4], 
               RowBox[{#, 
                 RowBox[{
                   StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
            InterpretationFunction->(RowBox[{
               RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
               RowBox[{#, ",", 
                 RowBox[{"{", 
                   RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )], ",", 
           "u", ",", 
           RowBox[{"u", "\[Equal]", "ex"}], ",", 
           RowBox[{"Assumptions", "->", "assum"}]}], "]"}]}], 
        "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"et", "===", "t"}], ",", "\[IndentingNewLine]", 
          RowBox[{"temp", "/.", 
           RowBox[{"u", "->", "t"}]}], "\[IndentingNewLine]", ",", 
          RowBox[{"IntegrateChangeVariables", "[", 
           RowBox[{"temp", ",", "t", ",", 
            RowBox[{"u", "==", "et"}], ",", 
            RowBox[{"Assumptions", "->", "assum"}]}], "]"}]}], 
         "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", "assum"}], 
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IBS", "[", 
     RowBox[{"f_", ",", 
      RowBox[{"{", 
       RowBox[{"a_", ",", "b_"}], "}"}], ",", 
      RowBox[{"x_Symbol", "\[Rule]", "et_"}], ",", "t_Symbol", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{
     RowBox[{"x", "=!=", "t"}], "&&", 
     RowBox[{"FreeQ", "[", 
      RowBox[{"et", ",", "x"}], "]"}]}]}], ":=", 
   RowBox[{"IBS", "[", 
    RowBox[{"f", ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"x", "->", "et"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"IBS", "[", 
      RowBox[{"f_", ",", 
       RowBox[{"{", 
        RowBox[{"a_", ",", "b_"}], "}"}], ",", 
       RowBox[{"ex_", "\[Rule]", "t_Symbol"}], ",", "x_Symbol", ",", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
     RowBox[{
      RowBox[{"x", "=!=", "t"}], "&&", 
      RowBox[{"FreeQ", "[", 
       RowBox[{"ex", ",", "t"}], "]"}]}]}], ":=", 
    RowBox[{"IBS", "[", 
     RowBox[{"f", ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"ex", "->", "t"}], ",", "x", ",", "t", ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"IBS", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{
    SuperscriptBox["E", "x"], "\[Rule]", 
    SuperscriptBox["E", "t"]}], ",", "x", ",", "t", ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"x", ">", "0"}], "&&", 
     RowBox[{"t", ">", "0"}]}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"IBS", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{
    RowBox[{"2", "x"}], "\[Rule]", 
    SuperscriptBox["E", "t"]}], ",", "x", ",", "t"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8812501185982747`*^9, 3.8812501595253873`*^9}, {
   3.881250441863079*^9, 3.8812504509665236`*^9}, 3.88125049736209*^9, {
   3.8812505361095486`*^9, 3.88125057562376*^9}, {3.8812506367271*^9, 
   3.881250720217284*^9}, {3.881250982739813*^9, 3.8812510539273024`*^9}, {
   3.88125108999737*^9, 3.881251136919894*^9}, {3.8812511747547426`*^9, 
   3.8812511782688627`*^9}, {3.881251237859644*^9, 3.881251242551485*^9}, {
   3.881251291751128*^9, 3.8812514159179325`*^9}, {3.8812517291469507`*^9, 
   3.881251756013675*^9}, {3.8812519373876343`*^9, 3.881252062230215*^9}, {
   3.8812521740826983`*^9, 3.881252246766799*^9}, {3.8812522894637136`*^9, 
   3.8812522916847997`*^9}, {3.8812523308504343`*^9, 3.881252354906809*^9}, {
   3.8812524346601243`*^9, 3.8812524850068884`*^9}, {3.8812525167804737`*^9, 
   3.8812526299537115`*^9}, {3.8812526683656545`*^9, 3.881252707045879*^9}, {
   3.8812527597048073`*^9, 3.881252793251134*^9}, {3.88125283145623*^9, 
   3.881252888075912*^9}, {3.881253001656077*^9, 3.8812530215196753`*^9}, {
   3.881253062374042*^9, 3.881253081762101*^9}, {3.8812532995850477`*^9, 
   3.8812533421694384`*^9}, {3.881253382453553*^9, 3.8812534757402163`*^9}, {
   3.881253553975247*^9, 3.8812535672880754`*^9}, {3.88125361042743*^9, 
   3.881253756248664*^9}, {3.881253794219369*^9, 3.8812538359813766`*^9}, {
   3.8812538716807528`*^9, 3.8812539531971455`*^9}, {3.8812539990572057`*^9, 
   3.881254087631789*^9}, {3.881254127972443*^9, 3.8812541530296288`*^9}, {
   3.8812542721658278`*^9, 3.8812544258280554`*^9}, {3.8812545072004304`*^9, 
   3.881254519974309*^9}, {3.881254655234125*^9, 3.8812546796198215`*^9}, {
   3.881254723708355*^9, 3.8812547386305695`*^9}, {3.88125481230455*^9, 
   3.881254812729741*^9}, {3.8812548850784864`*^9, 3.8812550107871747`*^9}, {
   3.8812551285847874`*^9, 3.881255165137235*^9}, {3.881255195355729*^9, 
   3.8812552068693247`*^9}, {3.8812552442616286`*^9, 
   3.8812552682985454`*^9}, {3.88125530242895*^9, 3.8812553024692345`*^9}, {
   3.8812553354878483`*^9, 3.881255362908206*^9}, {3.8812555215499744`*^9, 
   3.88125552359336*^9}, {3.881255555356881*^9, 3.88125566324966*^9}, {
   3.881255864832225*^9, 3.8812559721619787`*^9}, {3.8812560566197586`*^9, 
   3.8812561051948843`*^9}, {3.8812562057198954`*^9, 
   3.8812562710189867`*^9}, {3.881256631753805*^9, 3.881256655584632*^9}, {
   3.881256686995875*^9, 3.881257196404513*^9}, {3.8812572436486535`*^9, 
   3.8812572681068573`*^9}, {3.881257318711217*^9, 3.881257361327052*^9}, {
   3.881257434474887*^9, 3.8812574358273134`*^9}, {3.8812575497527356`*^9, 
   3.8812576029089355`*^9}, 3.8812579159987116`*^9, {3.882200489881076*^9, 
   3.8822004954928846`*^9}, {3.8822007138779793`*^9, 3.882200739319167*^9}, {
   3.889058870032848*^9, 3.8890588783356028`*^9}, 3.889060789071501*^9, {
   3.889061717177822*^9, 3.8890617910826645`*^9}, {3.889061867179408*^9, 
   3.889061878100355*^9}, {3.8890619675131736`*^9, 3.8890620899489784`*^9}, {
   3.889062164549316*^9, 3.88906216492441*^9}, {3.889062949346699*^9, 
   3.889062960534238*^9}, {3.8890631525855865`*^9, 
   3.889063155083607*^9}},ExpressionUUID->"3a78e23b-afa1-4afd-b071-\
1979d220226b"],

Cell[BoxData[
 SuperscriptBox["t", "2"]], "Output",
 CellChangeTimes->{{3.8812570375264273`*^9, 3.8812570711812725`*^9}, {
   3.881257110046982*^9, 3.8812571158040648`*^9}, {3.8812571883470535`*^9, 
   3.8812571971375866`*^9}, {3.8812572445727463`*^9, 
   3.8812572684852047`*^9}, {3.8812573228156233`*^9, 3.8812573616958375`*^9}, 
   3.881257436343524*^9, {3.8812575507605095`*^9, 3.881257559200346*^9}, 
   3.881257595417079*^9, 3.8812579163155446`*^9, 3.882200718021447*^9, 
   3.889061735760664*^9, 3.889061791669753*^9, 3.8890619291115685`*^9, 
   3.8890620057909803`*^9, 3.889062135615346*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"cd03747e-6abb-4d83-a05d-6823343737e0"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"3", " ", "t"}]], "8"], "t", 
   RowBox[{"-", "\[Infinity]"}], 
   RowBox[{"Log", "[", "2", "]"}]},
  "InactiveIntegrate",
  DisplayFunction->(RowBox[{
     SubsuperscriptBox[
      StyleBox["\[Integral]", "Inactive"], #3, #4], 
     RowBox[{#, 
       RowBox[{
         StyleBox["\[DifferentialD]", "Inactive"], #2}]}]}]& ),
  InterpretationFunction->(RowBox[{
     RowBox[{"Inactive", "[", "Integrate", "]"}], "[", 
     RowBox[{#, ",", 
       RowBox[{"{", 
         RowBox[{#2, ",", #3, ",", #4}], "}"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8812570375264273`*^9, 3.8812570711812725`*^9}, {
   3.881257110046982*^9, 3.8812571158040648`*^9}, {3.8812571883470535`*^9, 
   3.8812571971375866`*^9}, {3.8812572445727463`*^9, 
   3.8812572684852047`*^9}, {3.8812573228156233`*^9, 3.8812573616958375`*^9}, 
   3.881257436343524*^9, {3.8812575507605095`*^9, 3.881257559200346*^9}, 
   3.881257595417079*^9, 3.8812579163155446`*^9, 3.882200718021447*^9, 
   3.889061735760664*^9, 3.889061791669753*^9, 3.8890619291115685`*^9, 
   3.8890620057909803`*^9, 3.88906213569696*^9},
 CellLabel->
  "Out[403]=",ExpressionUUID->"85e292da-5e89-43f2-9f41-09bc7235e962"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["ApartArcTan", "Section",
 CellChangeTimes->{
  3.8812490891049585`*^9},ExpressionUUID->"87fd259e-20f9-4879-89a8-\
14ec4ecb826d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "ApartArcTan", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "ApartArcTan", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ApartArcTan", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"GenerateConstant", "\[Rule]", "False"}], ",", 
     RowBox[{"SimplifyFunction", "\[Rule]", "Simplify"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ApartArcTan", "[", 
     RowBox[{"expr_", ",", "x_Symbol", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{"RationalExpressionQ", "[", 
     RowBox[{"expr", ",", "x"}], "]"}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"simp", "=", 
        RowBox[{"OptionValue", "[", "SimplifyFunction", "]"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"gene", "=", 
        RowBox[{"OptionValue", "[", "GenerateConstant", "]"}]}], ",", 
       "\[IndentingNewLine]", "roots", ",", "result", ",", "zeros", ",", 
       "offset"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"roots", "=", 
       RowBox[{"x", "/.", "\[VeryThinSpace]", 
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{"expr", "\[Equal]", "\[ImaginaryI]"}], ",", "x"}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "=", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"ArcTan", "@", 
          RowBox[{"simp", "@", 
           FractionBox[
            RowBox[{"x", "-", 
             RowBox[{"Re", "@", "r"}]}], 
            RowBox[{"Im", "@", "r"}]]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", "roots"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", "gene"}], ",", 
        RowBox[{"Return", "@", "result"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"zeros", "=", 
       RowBox[{"x", "/.", 
        RowBox[{"DeleteDuplicates", "@", "\[VeryThinSpace]", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Denominator", "@", 
             RowBox[{"Together", "@", "expr"}]}], "\[Equal]", "0"}], ",", 
           "x"}], "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"result", "+=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", "zeros"}], "===", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"ArcTan", "@", "expr"}], "-", "result"}], "/.", 
          "\[VeryThinSpace]", 
          RowBox[{"x", "\[Rule]", "0"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"offset", "=", 
           RowBox[{"Append", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 UnderscriptBox["\[Limit]", 
                  TagBox[
                   RowBox[{"x", "\[Rule]", 
                    SuperscriptBox["i", "-"]}],
                   "AlternateLimitDirection"]], 
                 RowBox[{"ArcTan", "[", "expr", "]"}]}], "-", 
                RowBox[{"(", 
                 RowBox[{"result", "/.", "\[VeryThinSpace]", 
                  RowBox[{"x", "\[Rule]", "i"}]}], ")"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "zeros"}], "}"}]}], "]"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               UnderscriptBox["\[Limit]", 
                TagBox[
                 RowBox[{"x", "\[Rule]", 
                  SuperscriptBox[
                   RowBox[{"Last", "[", "zeros", "]"}], "+"]}],
                 "AlternateLimitDirection"]], 
               RowBox[{"ArcTan", "[", "expr", "]"}]}], "-", 
              RowBox[{"(", 
               RowBox[{"result", "/.", "\[VeryThinSpace]", 
                RowBox[{"x", "\[Rule]", 
                 RowBox[{"Last", "@", "zeros"}]}]}], ")"}]}]}], 
            "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Piecewise", "[", "\[IndentingNewLine]", 
           RowBox[{"Append", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"offset", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{
                    "zeros", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], "<", "x", "<", 
                    RowBox[{"zeros", "\[LeftDoubleBracket]", 
                    RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}]}]}], 
                  "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{
                    RowBox[{"Length", "@", "zeros"}], "-", "1"}]}], "}"}]}], 
                "]"}], "\[IndentingNewLine]", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"First", "[", "offset", "]"}], ",", 
                 RowBox[{"x", "<", 
                  RowBox[{"First", "[", "zeros", "]"}]}]}], "}"}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Last", "[", "offset", "]"}], ",", 
               RowBox[{"x", ">", 
                RowBox[{"Last", "[", "zeros", "]"}]}]}], "}"}]}], "]"}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"result", "//", "Simplify"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ApartArcTan", "[", 
     RowBox[{"expr_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"ApartArcTan", "[", 
     RowBox[{"expr", ",", 
      RowBox[{"ExpressionPivot", "@", "expr"}], ",", "opts"}], "]"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ApartArcTan", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SuperscriptBox["x", "2"], ",", 
      RowBox[{"t", "+", 
       FractionBox["1", "t"]}], ",", 
      RowBox[{"u", "-", 
       FractionBox["1", "u"]}]}], "}"}], ",", 
    RowBox[{"GenerateConstant", "->", "True"}]}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{{3.8812579937599535`*^9, 3.8812580454554296`*^9}, {
   3.881258091123928*^9, 3.8812581000331306`*^9}, {3.881258400107002*^9, 
   3.88125848916411*^9}, 3.881258529716839*^9, {3.8812586543925095`*^9, 
   3.881258656763394*^9}, {3.8812587169615717`*^9, 3.881258751283495*^9}, {
   3.881258915069893*^9, 3.881259002964484*^9}, {3.8812591023158693`*^9, 
   3.881259106912133*^9}, {3.881259256232505*^9, 3.881259263718057*^9}, {
   3.881260942875499*^9, 3.8812609745674343`*^9}, {3.881261018392753*^9, 
   3.8812610442157116`*^9}, {3.881261083960019*^9, 3.8812612191590977`*^9}, {
   3.881261252393591*^9, 3.881261329037558*^9}, {3.8812613846207304`*^9, 
   3.8812614082953234`*^9}, {3.881261442822*^9, 3.881261442881712*^9}, {
   3.881263409387904*^9, 3.881263469837472*^9}, {3.88126353175771*^9, 
   3.8812635350046625`*^9}, {3.88126358216722*^9, 3.88126371509764*^9}, {
   3.881264007939382*^9, 3.8812640089345365`*^9}, {3.882200625076586*^9, 
   3.882200633522716*^9}, {3.8822008204125423`*^9, 3.882200846872743*^9}, {
   3.8822008821188498`*^9, 3.8822008827757382`*^9}, {3.889062190097275*^9, 
   3.8890622143260984`*^9}, {3.889062410071129*^9, 3.8890624174009476`*^9}, {
   3.8890624944307275`*^9, 3.8890625160054226`*^9}, {3.889062555743532*^9, 
   3.88906268127707*^9}, {3.8890627619787054`*^9, 3.8890627801673503`*^9}, {
   3.889062896028719*^9, 3.889062933833395*^9}, {3.8890631712916107`*^9, 
   3.8890631812766867`*^9}, {3.8890736824513035`*^9, 3.8890736960214252`*^9}},
 CellLabel->
  "In[1149]:=",ExpressionUUID->"c6911c1f-5536-4bac-aab2-4c6f9b5462be"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"1", "-", 
           RowBox[{
            SqrtBox["2"], " ", "x"}]}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"1", "+", 
           RowBox[{
            SqrtBox["2"], " ", "x"}]}], "]"}]}]}], ")"}]}]},
    {
     RowBox[{
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        RowBox[{"1", "-", 
         SqrtBox["5"]}]], "]"}], "+", 
      RowBox[{"ArcTan", "[", 
       FractionBox[
        RowBox[{"2", " ", "t"}], 
        RowBox[{"1", "+", 
         SqrtBox["5"]}]], "]"}], "+", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"-", 
               FractionBox["\[Pi]", "2"]}], 
              RowBox[{"t", "<", "0"}]},
             {
              FractionBox["\[Pi]", "2"], 
              RowBox[{"t", ">", "0"}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}},
            Selectable->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True], ")"}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         SqrtBox["3"], "-", 
         RowBox[{"2", " ", "u"}]}], "]"}]}], "+", 
      RowBox[{"ArcTan", "[", 
       RowBox[{
        SqrtBox["3"], "+", 
        RowBox[{"2", " ", "u"}]}], "]"}], "+", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              FractionBox["\[Pi]", "2"], 
              RowBox[{"u", "<", "0"}]},
             {
              RowBox[{"-", 
               FractionBox["\[Pi]", "2"]}], 
              RowBox[{"u", ">", "0"}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}},
            Selectable->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True], ")"}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.881261290454566*^9, {3.881261385796606*^9, 3.881261408824586*^9}, 
   3.8812614433943033`*^9, {3.8812634435957384`*^9, 3.881263470177644*^9}, 
   3.881263535313285*^9, {3.8812635835554004`*^9, 3.881263630943241*^9}, 
   3.8812636688401675`*^9, {3.8812637031068983`*^9, 3.881263715439636*^9}, {
   3.882200824540231*^9, 3.8822008472341485`*^9}, 3.8822008837525187`*^9, {
   3.8890621964116263`*^9, 3.8890622169243155`*^9}, 3.889062618282593*^9, 
   3.889062730276738*^9, 3.8890627806631584`*^9, 3.8890631935298014`*^9, 
   3.8890719329844265`*^9, 3.889073698808498*^9},
 CellLabel->
  "Out[1154]=",ExpressionUUID->"cf381d1d-02bf-4545-aa3e-8cf4deadde7c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RealFactor", "Section",
 CellChangeTimes->{
  3.8812491058477163`*^9},ExpressionUUID->"11e84cdc-6ae0-4d8f-ad5f-\
74b77672d2dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "RealFactor", "]"}], ";"}], 
  "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "RealFactor", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RealFactor", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{"SimplifyFunction", "\[Rule]", 
     RowBox[{"(", 
      RowBox[{"RootReduce", "/*", "ToRadicals", "/*", "Simplify"}], ")"}]}], 
    "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealFactor", "[", 
     RowBox[{"poly_", ",", "x_Symbol", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "/;", 
    RowBox[{"PolynomialQ", "[", 
     RowBox[{"poly", ",", "x"}], "]"}]}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"simp", "=", 
        RowBox[{"OptionValue", "[", "SimplifyFunction", "]"}]}], ",", "roots",
        ",", 
       RowBox[{"result", "=", "1"}]}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FreeQ", "[", 
         RowBox[{"poly", ",", "x"}], "]"}], ",", 
        RowBox[{"Return", "@", "poly"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"roots", "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{
         RowBox[{"x", "/.", "\[VeryThinSpace]", 
          RowBox[{"Solve", "[", 
           RowBox[{
            RowBox[{"poly", "\[Equal]", "0"}], ",", "x"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"N", "[", 
           RowBox[{
            RowBox[{"#1", "\[Conjugate]"}], "==", "#2"}], "]"}], "&"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Coefficient", "[", 
        RowBox[{"poly", ",", "x", ",", 
         RowBox[{"Exponent", "[", 
          RowBox[{"poly", ",", "x"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
       RowBox[{"Times", "@@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           TagBox[GridBox[{
              {"\[Piecewise]", GridBox[{
                 {
                  RowBox[{"x", "-", "root"}], 
                  RowBox[{"root", "\[Element]", 
                   TemplateBox[{},
                    "Reals"]}]},
                 {
                  RowBox[{
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"x", "-", 
                    RowBox[{"Re", "@", "root"}]}], ")"}], "2"], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{"Im", "@", "root"}], ")"}], "2"]}], "True"}
                },
                AllowedDimensions->{2, Automatic},
                Editable->True,
                
                GridBoxAlignment->{
                 "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                
                GridBoxItemSize->{
                 "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                  "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                Selectable->True]}
             },
             
             GridBoxAlignment->{
              "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
               "Rows" -> {{1.}}, "RowsIndexed" -> {}},
             GridBoxSpacings->{"Columns" -> {
                 Offset[0.27999999999999997`], {
                  Offset[0.35]}, 
                 Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
               "Rows" -> {
                 Offset[0.2], {
                  Offset[0.4]}, 
                 Offset[0.2]}, "RowsIndexed" -> {}}],
            "Piecewise",
            DeleteWithContents->True,
            Editable->False,
            SelectWithContents->True,
            Selectable->False,
            StripWrapperBoxes->True], "//", "simp"}], ",", 
          RowBox[{"{", 
           RowBox[{"root", ",", "roots"}], "}"}]}], "]"}]}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealFactor", "[", 
     RowBox[{"poly_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"RealFactor", "[", 
     RowBox[{"poly", ",", 
      RowBox[{"ExpressionPivot", "[", "poly", "]"}], ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RealFactor", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "4"], "-", 
      SuperscriptBox["x", "2"], "+", "x", "-", "1"}], ",", 
     RowBox[{
      SuperscriptBox["x", "4"], "+", "1"}], ",", 
     RowBox[{
      SuperscriptBox["x", "5"], "-", "1"}]}], "}"}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{
  3.8812580491683607`*^9, {3.881263966627664*^9, 3.881263969261916*^9}, 
   3.8812640734317923`*^9, {3.881264231738807*^9, 3.8812642858785086`*^9}, {
   3.8812643224956493`*^9, 3.8812643747459936`*^9}, {3.8812645412010183`*^9, 
   3.8812645532896304`*^9}, {3.8812646007263856`*^9, 
   3.8812646645781016`*^9}, {3.8812654068297653`*^9, 
   3.8812654805697947`*^9}, {3.881265515385543*^9, 3.8812656484654913`*^9}, {
   3.881265684440327*^9, 3.8812657084259996`*^9}, {3.8812657541001334`*^9, 
   3.8812658204188547`*^9}, {3.8812658768175325`*^9, 
   3.8812658814140096`*^9}, {3.8812659535759387`*^9, 
   3.8812660192784824`*^9}, {3.8812660870251684`*^9, 3.8812663212734404`*^9}, 
   3.8812663617997694`*^9, {3.8812667388641176`*^9, 3.8812668408070326`*^9}, {
   3.8812669414644504`*^9, 3.881266952569973*^9}, {3.8812670371818304`*^9, 
   3.8812673389672956`*^9}, {3.8812673760999093`*^9, 
   3.8812674060054393`*^9}, {3.8812674786771097`*^9, 3.88126758441547*^9}, {
   3.8813888028648195`*^9, 3.8813888047747216`*^9}, {3.8821882642438083`*^9, 
   3.8821882644274273`*^9}, {3.8822008519990673`*^9, 
   3.8822008755694294`*^9}, {3.8890622700363526`*^9, 
   3.8890622809350915`*^9}, {3.889063406169979*^9, 3.889063556769661*^9}, {
   3.889064390693195*^9, 3.889064440554367*^9}, {3.889067113605857*^9, 
   3.8890671237570047`*^9}, 3.889067172800167*^9, {3.8890672595806823`*^9, 
   3.889067330322604*^9}, {3.889067367207037*^9, 3.889067387381624*^9}, {
   3.8890674420354147`*^9, 3.8890674692047625`*^9}, {3.8890684150220013`*^9, 
   3.889068544281705*^9}, {3.889068587627345*^9, 3.8890686291851873`*^9}, {
   3.8890687802315445`*^9, 3.889068789160838*^9}, {3.889069643192693*^9, 
   3.8890697419813986`*^9}, {3.8890698602418704`*^9, 3.889069867443205*^9}, {
   3.8890700155417075`*^9, 3.8890701923329983`*^9}, {3.8890702260309925`*^9, 
   3.889070267033826*^9}, {3.8890703146105804`*^9, 3.8890703306473455`*^9}, {
   3.8890703747003484`*^9, 3.8890704668172913`*^9}, {3.8890705393665533`*^9, 
   3.8890706275687304`*^9}, {3.889070787525052*^9, 3.8890707959442616`*^9}, {
   3.8890708276563687`*^9, 3.88907086774119*^9}, {3.8890709153327303`*^9, 
   3.889071043488144*^9}, {3.889071284711914*^9, 3.8890715435927467`*^9}, {
   3.889071589413921*^9, 3.889071589563225*^9}, {3.8890719717316427`*^9, 
   3.889072000978933*^9}, {3.889072066333835*^9, 3.889072080233167*^9}, {
   3.889072740583477*^9, 3.889072878573455*^9}, {3.8890729350417075`*^9, 
   3.8890729834793925`*^9}, {3.889073671626507*^9, 3.8890736750053225`*^9}, {
   3.8890740869936304`*^9, 3.8890740970854273`*^9}},
 CellLabel->
  "In[1143]:=",ExpressionUUID->"4c9516ba-7077-4b96-8726-f5628ebd60bf"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      FractionBox["1", "72"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"2", "/", "3"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"839", "-", 
               RowBox[{"87", " ", 
                SqrtBox["93"]}]}], ")"}], 
             RowBox[{"1", "/", "3"}]]}], "+", 
           RowBox[{
            SuperscriptBox["2", 
             RowBox[{"2", "/", "3"}]], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"839", "+", 
               RowBox[{"87", " ", 
                SqrtBox["93"]}]}], ")"}], 
             RowBox[{"1", "/", "3"}]]}]}], ")"}]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"29", "-", 
                 RowBox[{"3", " ", 
                  SqrtBox["93"]}]}], ")"}]}], ")"}], 
             RowBox[{"1", "/", "3"}]], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               FractionBox["1", "2"], " ", 
               RowBox[{"(", 
                RowBox[{"29", "+", 
                 RowBox[{"3", " ", 
                  SqrtBox["93"]}]}], ")"}]}], ")"}], 
             RowBox[{"1", "/", "3"}]], "-", 
            RowBox[{"6", " ", "x"}]}], ")"}], "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         FractionBox["1", "3"], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"29", "-", 
                RowBox[{"3", " ", 
                 SqrtBox["93"]}]}], ")"}]}], ")"}], 
            RowBox[{"1", "/", "3"}]], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              FractionBox["1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"29", "+", 
                RowBox[{"3", " ", 
                 SqrtBox["93"]}]}], ")"}]}], ")"}], 
            RowBox[{"1", "/", "3"}]]}], ")"}]}], "+", "x"}], ")"}]}]},
    {
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{
         SqrtBox["2"], " ", "x"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         SqrtBox["2"], " ", "x"}], "+", 
        SuperscriptBox["x", "2"]}], ")"}]}]},
    {
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "x"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "x", "-", 
        RowBox[{
         SqrtBox["5"], " ", "x"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "2"]}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "x", "+", 
        RowBox[{
         SqrtBox["5"], " ", "x"}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "2"]}]}], ")"}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.8890706438581524`*^9, 3.8890707975343037`*^9, {3.8890708340388536`*^9, 
   3.889070868233267*^9}, {3.8890709158507566`*^9, 3.8890709648381386`*^9}, {
   3.889070996889553*^9, 3.8890710329881725`*^9}, 3.8890712924997516`*^9, {
   3.889071460363001*^9, 3.8890714864727182`*^9}, {3.8890715226589894`*^9, 
   3.889071543868573*^9}, 3.889071589850163*^9, 3.889071940954754*^9, {
   3.8890719762681513`*^9, 3.8890720014376287`*^9}, {3.889072862923274*^9, 
   3.889072884239982*^9}, {3.8890729383780093`*^9, 3.8890729838492856`*^9}, 
   3.8890736767645307`*^9},
 CellLabel->
  "Out[1148]=",ExpressionUUID->"42ae4c69-ff9e-4437-87a0-0e4ea0a4206e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["RealApart", "Section",
 CellChangeTimes->{
  3.881249117933973*^9},ExpressionUUID->"090ecfcf-eec3-4fc4-a926-\
55581966e032"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "RealApart", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Attributes", "[", "RealApart", "]"}], ":=", 
   RowBox[{"{", "Listable", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RealApart", "]"}], ":=", 
   RowBox[{"Options", "[", "RealFactor", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealApart", "[", 
     RowBox[{"poly_", ",", "x_Symbol", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], "/;", 
    RowBox[{"RationalExpressionQ", "[", 
     RowBox[{"poly", ",", "x"}], "]"}]}], ":=", 
   RowBox[{
    FractionBox[
     RowBox[{"Numerator", "@", "poly"}], 
     RowBox[{"RealFactor", "[", 
      RowBox[{
       RowBox[{"Denominator", "@", "poly"}], ",", "opts"}], "]"}]], "//", 
    "Apart"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"RealApart", "[", 
     RowBox[{"poly_", ",", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
    RowBox[{"RealApart", "[", 
     RowBox[{"poly", ",", 
      RowBox[{"ExpressionPivot", "[", "poly", "]"}], ",", "opts"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RealApart", "[", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "4"], "+", "1"}]], ",", 
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "2"], "-", "5"}]], ",", 
     FractionBox["1", 
      RowBox[{
       SuperscriptBox["x", "4"], "+", 
       SuperscriptBox["x", "2"], "-", "1"}]]}], "}"}], "]"}], "//", 
  "Column"}]}], "Input",
 CellChangeTimes->{
  3.8812580521312733`*^9, {3.881263971472271*^9, 3.881263973162546*^9}, {
   3.881264076293928*^9, 3.8812640770577106`*^9}, {3.881267635295848*^9, 
   3.881267740411018*^9}, {3.882200901044587*^9, 3.88220091575585*^9}, {
   3.889071592387395*^9, 3.889071593135217*^9}, {3.889071656958829*^9, 
   3.889071659757134*^9}},
 CellLabel->
  "In[1104]:=",ExpressionUUID->"ad4da761-711f-4c1e-b169-b98f33f3076e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         SqrtBox["2"]}], "+", "x"}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SqrtBox["2"], " ", "x"}], "-", 
          SuperscriptBox["x", "2"]}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        SqrtBox["2"], "+", "x"}], 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          RowBox[{
           SqrtBox["2"], " ", "x"}], "+", 
          SuperscriptBox["x", "2"]}], ")"}]}]]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"2", " ", 
         SqrtBox["5"], " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox["5"], "-", "x"}], ")"}]}]]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SqrtBox["5"], " ", 
        RowBox[{"(", 
         RowBox[{
          SqrtBox["5"], "+", "x"}], ")"}]}]]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SqrtBox[
         FractionBox["2", 
          RowBox[{"5", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["5"]}], ")"}]}]]], 
        RowBox[{
         SqrtBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SqrtBox["5"]}], ")"}]}]], "-", 
         RowBox[{"2", " ", "x"}]}]]}], "-", 
      FractionBox[
       SqrtBox[
        FractionBox["2", 
         RowBox[{"5", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["5"]}], ")"}]}]]], 
       RowBox[{
        SqrtBox[
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SqrtBox["5"]}], ")"}]}]], "+", 
        RowBox[{"2", " ", "x"}]}]], "-", 
      FractionBox["2", 
       RowBox[{
        SqrtBox["5"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SqrtBox["5"], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["x", "2"]}]}], ")"}]}]]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.88907299101025*^9},
 CellLabel->
  "Out[1109]=",ExpressionUUID->"e78fd9e1-2801-4fbf-80e5-c346b2513034"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CorrectionTest", "Section",
 CellChangeTimes->{
  3.881249142658318*^9},ExpressionUUID->"bf1f2ecb-cd6e-4229-9641-\
c2b700125777"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "CorrectionTest", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    StyleBox[
     RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], "=", 
    "\"\<`` \:8ba1\:7b97\:8d85\:65f6\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "CorrectionTest", "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Skip", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"TimeConstraint", "\[Rule]", "\[Infinity]"}], ",", 
     RowBox[{"VerifyDiscontinuities", "\[Rule]", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"WorkingPrecision", "\[Rule]", "$MinPrecision"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CorrectionTest", "[", 
     RowBox[{"org_", ",", "res_", ",", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "xmin_", ",", "xmax_"}], "}"}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"table", "=", GridBox[{
           {
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\:5b9a\:4e49\:57df\>\"", ",", "Bold"}], "]"}], 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\:95f4\:65ad\:70b9\>\"", ",", "Bold"}], "]"}]},
           {
            RowBox[{"Style", "[", 
             RowBox[{"True", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}], 
            RowBox[{"Style", "[", 
             RowBox[{"False", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}]},
           {
            RowBox[{"Style", "[", 
             RowBox[{"True", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}], 
            RowBox[{"Style", "[", 
             RowBox[{"False", ",", "Bold", ",", 
              RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}]},
           {
            RowBox[{"Style", "[", 
             RowBox[{"\"\<\:56fe\:50cf\>\"", ",", "Bold"}], "]"}], 
            "\[SpanFromLeft]"},
           {"Null", "\[SpanFromLeft]"}
          }]}], ",", "\[IndentingNewLine]", 
        RowBox[{"skip", "=", 
         RowBox[{"OptionValue", "[", "Skip", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"cons", "=", 
         RowBox[{"OptionValue", "[", "TimeConstraint", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"veri", "=", 
         RowBox[{"OptionValue", "[", "VerifyDiscontinuities", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"prec", "=", 
         RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"dom", "=", "True"}]}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"CheckVersion", "[", "12.2", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "[", "skip", "]"}]}], ",", 
         RowBox[{"skip", "=", 
          RowBox[{"{", "skip", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "[", "veri", "]"}]}], ",", 
         RowBox[{"veri", "=", 
          RowBox[{"{", "veri", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"AssociationQ", "[", "cons", "]"}]}], ",", 
         RowBox[{"cons", "=", 
          RowBox[{"Association", "[", 
           RowBox[{
            RowBox[{"\"\<\:5b9a\:4e49\:57df\>\"", "\[Rule]", "cons"}], ",", 
            RowBox[{"\"\<\:95f4\:65ad\:70b9\>\"", "\[Rule]", "cons"}], ",", 
            RowBox[{"\"\<\:56fe\:50cf\>\"", "\[Rule]", "cons"}]}], "]"}]}]}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"skip", ",", "\"\<\:5b9a\:4e49\:57df\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"dom", "=", 
                   RowBox[{"Reduce", "[", 
                    RowBox[{
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{"org", ",", "x"}], "]"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}]}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Reduce", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FunctionDomain", "[", 
                    RowBox[{"res", ",", "x"}], "]"}], "&&", "dom"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], 
             ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"cons", "[", "\"\<\:5b9a\:4e49\:57df\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], 
               ",", "\"\<\:5b9a\:4e49\:57df\>\""}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"skip", ",", "\"\<\:95f4\:65ad\:70b9\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Reduce", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FunctionDiscontinuities", "[", 
                    RowBox[{"org", ",", "x"}], "]"}], "&&", "dom"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#4081ff\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"table", "\[LeftDoubleBracket]", 
               RowBox[{"3", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
              RowBox[{"Item", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"Reduce", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"FunctionDiscontinuities", "[", 
                    RowBox[{"res", ",", "x"}], "]"}], "&&", "dom"}], ",", 
                    RowBox[{"x", "\[Element]", 
                    TemplateBox[{},
                    "Reals"]}]}], "]"}], ",", "Bold", ",", 
                  RowBox[{"RGBColor", "[", "\"\<#eb7100\>\"", "]"}]}], "]"}], 
                ",", 
                RowBox[{"ItemSize", "\[Rule]", "Automatic"}]}], "]"}]}], 
             ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"cons", "[", "\"\<\:95f4\:65ad\:70b9\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], 
               ",", "\"\<\:95f4\:65ad\:70b9\>\""}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"skip", ",", "\"\<\:56fe\:50cf\>\""}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"TimeConstrained", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"table", "\[LeftDoubleBracket]", 
              RowBox[{"5", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
             RowBox[{"Plot", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"org", ",", "res", ",", 
                 RowBox[{"Evaluate", "[", 
                  RowBox[{
                   SubscriptBox["\[PartialD]", "x"], 
                   RowBox[{"(", 
                    RowBox[{"res", "/.", "\[VeryThinSpace]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", "p_", "]"}], "\[Rule]", 
                    TagBox[GridBox[{
                    {"\[Piecewise]", GridBox[{
                    {"p", 
                    RowBox[{"p", ">", "0"}]},
                    {
                    RowBox[{"-", "p"}], 
                    RowBox[{"p", "<", "0"}]}
                    },
                    AllowedDimensions->{2, Automatic},
                    Editable->True,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                    Selectable->True]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
                    "Piecewise",
                    DeleteWithContents->True,
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False,
                    StripWrapperBoxes->True]}], ",", 
                    RowBox[{
                    RowBox[{"Sign", "[", "p_", "]"}], "\[Rule]", 
                    TagBox[GridBox[{
                    {"\[Piecewise]", GridBox[{
                    {"1", 
                    RowBox[{"p", ">", "0"}]},
                    {
                    RowBox[{"-", "1"}], 
                    RowBox[{"p", "<", "0"}]}
                    },
                    AllowedDimensions->{2, Automatic},
                    Editable->True,
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}},
                    Selectable->True]}
                    },
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{1.}}, "RowsIndexed" -> {}},
                    GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.35]}, 
                    Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}, "RowsIndexed" -> {}}],
                    "Piecewise",
                    DeleteWithContents->True,
                    Editable->False,
                    SelectWithContents->True,
                    Selectable->False,
                    StripWrapperBoxes->True]}]}], "}"}]}], ")"}]}], "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "xmin", ",", "xmax"}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"PlotStyle", "\[Rule]", "96"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Epilog", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"Black", ",", 
                  RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
                  RowBox[{"Point", "[", "\[IndentingNewLine]", 
                   RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"$MinPrecision", "=", "prec"}], "}"}], ",", 
                    RowBox[{"N", "@", 
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"res", "/.", "\[VeryThinSpace]", 
                    RowBox[{"x", "\[Rule]", "i"}]}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "veri"}], "}"}]}], "]"}]}]}], "]"}], 
                   "\[IndentingNewLine]", "]"}]}], "}"}]}]}], 
              "\[IndentingNewLine]", "]"}]}], ",", 
            RowBox[{"cons", "[", "\"\<\:56fe\:50cf\>\"", "]"}], ",", 
            RowBox[{
             RowBox[{"Message", "[", 
              RowBox[{
               StyleBox[
                RowBox[{"CorrectionTest", "::", "overtime"}], "MessageName"], 
               ",", "\"\<\:56fe\:50cf\>\""}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{"Grid", "[", 
         RowBox[{"table", ",", 
          RowBox[{"Alignment", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Center", ",", "Center"}], "}"}]}], ",", 
          RowBox[{"Spacings", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"1", ",", "1"}], "}"}]}], ",", 
          RowBox[{"ItemSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", "0.5", "]"}], ",", "Automatic"}], "}"}]}],
           ",", 
          RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CorrectionTest", "[", 
  RowBox[{"x", ",", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.8812580555141573`*^9, 3.8812638517804313`*^9, 3.881264079722681*^9, {
   3.8812678234642253`*^9, 3.8812678299343767`*^9}, 3.8812681404165487`*^9, {
   3.881268229655447*^9, 3.881268398341589*^9}, {3.8812684529980655`*^9, 
   3.881268759114216*^9}, {3.882200925828741*^9, 3.8822009319937315`*^9}, {
   3.889058870052693*^9, 3.889058878347475*^9}},
 CellLabel->
  "In[991]:=",ExpressionUUID->"b0d91778-42e8-4862-8bdb-9a37ac55d0ba"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"\:5b9a\:4e49\:57df\"\>",
      StripOnInput->False,
      FontWeight->Bold], 
     StyleBox["\<\"\:95f4\:65ad\:70b9\"\>",
      StripOnInput->False,
      FontWeight->Bold]},
    {
     ItemBox[
      StyleBox[
       RowBox[{"x", "\[Element]", 
        TemplateBox[{},
         "Reals"]}],
       StripOnInput->False,
       LineColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FrontFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       BackFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       GraphicsColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FontWeight->Bold,
       FontColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.]],
      ItemSize->Automatic,
      StripOnInput->False], 
     ItemBox[
      StyleBox["False",
       StripOnInput->False,
       LineColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FrontFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       BackFaceColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       GraphicsColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.],
       FontWeight->Bold,
       FontColor->RGBColor[0.25098039215686274`, 0.5058823529411764, 1.]],
      ItemSize->Automatic,
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox[
       RowBox[{"x", "\[Element]", 
        TemplateBox[{},
         "Reals"]}],
       StripOnInput->False,
       LineColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FrontFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       BackFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       GraphicsColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FontWeight->Bold,
       FontColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.]],
      ItemSize->Automatic,
      StripOnInput->False], 
     ItemBox[
      StyleBox["False",
       StripOnInput->False,
       LineColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FrontFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       BackFaceColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       GraphicsColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.],
       FontWeight->Bold,
       FontColor->RGBColor[0.9215686274509803, 0.44313725490196076`, 0.]],
      ItemSize->Automatic,
      StripOnInput->False]},
    {
     StyleBox["\<\"\:56fe\:50cf\"\>",
      StripOnInput->False,
      FontWeight->Bold], "\[SpanFromLeft]"},
    {
     GraphicsBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.23780781740448254`, 0.6887454706969063, 1.], 
          AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF1O0vFAAcwPG74xhxL7rO1tku7nba0fQwT3MqTDFjxSHWVbccye6mmTw1
mkZcoZuhOi21PBNJWapDXDqTTrFMGi4x5yHGdWd3nGrrfr8X333+g6/zxZTI
BBKBQAj/2z/j26SrOzvWvWb3GOku3C1UcbKWn76Jukx1DS6voYt2s08m1OiV
ZM/Yjn40l/2tN7EQlVWxyoYpaPV0UUqEjRXoMMI7xaGRQeVpXtAQ2xIM4bDT
WEwL0LeVX6c6SAINtxKpRzhE8Le+puL8fgKoYJZ5dItNPWa55OsdbsItsNzf
2zsgxwDGP4idW6zeBFX1DBuiTAcy7J4d7unUgrZO8ypN0zooiiq419CwBgr6
p4cYZSsg86gp4n2eBmxM6lC/6ZwDkzfa+bdlatA9lxxnxZoEqVljuyqrRsFx
oci1bXYAzMh2LR2saAWb7vj41xx6etxs6eW8r4IbH0B7bRi3JWIUnEkb8EjP
nwR/dYX3ZSjVYF3hY4FQMgeydc3UzCoNOPV8n5ybtAJG350pWpKugQ9ri+Vh
leug5VnxCjlLC34SNNZH5uvAl/b0c3rRJugic16wDjOAhvT87WbeFrhkcKQ0
+JjAR5cKxxxZBH+z0oCPxXvZRJCS0hzYTyOB3UGv5J10C3BbfMErhmIJEq2/
3HfbRr1CUvtCCVag4XvLAm0dDRIppeE6tMQ461NgQJ3ojhItyRoMPiPhjFLR
8s8JyVJP1H2AsWybhWZG+5YH5qDvfkb7ZeehURYlxRoJes3feEApQ5Wvx8UF
b9HdoRs0eS/Kn6B0axXoqv4ERTiMOni+aA2cQgUKVUz2D7SRt2Rqn0f9Upmn
nFfRm8Rj+tgNdEQaVy3Vo3Snq8FKI/r/W+AfYipULQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$77847#1"]& ], 
        TagBox[
         {RGBColor[1., 0.519599248047801, 0.3096774660909407], 
          AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
h/wPW9xgsw==
           "]]},
         Annotation[#, "Charting`Private`Tag$77847#2"]& ], 
        TagBox[
         {RGBColor[0., 0.7904116386138192, 0.7051174262187454], 
          AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJxF1O0vFAAcwPG74xhxL7rO1tku7nba0fQwT3MqTDFjxSHWVbccye6mmTw1
mkZcoZuhOi21PBNJWapDXDqTTrFMGi4x5yHGdWd3nGrrfr8X333+g6/zxZTI
BBKBQAj/2z/j26SrOzvWvWb3GOku3C1UcbKWn76Jukx1DS6voYt2s08m1OiV
ZM/Yjn40l/2tN7EQlVWxyoYpaPV0UUqEjRXoMMI7xaGRQeVpXtAQ2xIM4bDT
WEwL0LeVX6c6SAINtxKpRzhE8Le+puL8fgKoYJZ5dItNPWa55OsdbsItsNzf
2zsgxwDGP4idW6zeBFX1DBuiTAcy7J4d7unUgrZO8ypN0zooiiq419CwBgr6
p4cYZSsg86gp4n2eBmxM6lC/6ZwDkzfa+bdlatA9lxxnxZoEqVljuyqrRsFx
oci1bXYAzMh2LR2saAWb7vj41xx6etxs6eW8r4IbH0B7bRi3JWIUnEkb8EjP
nwR/dYX3ZSjVYF3hY4FQMgeydc3UzCoNOPV8n5ybtAJG350pWpKugQ9ri+Vh
leug5VnxCjlLC34SNNZH5uvAl/b0c3rRJugic16wDjOAhvT87WbeFrhkcKQ0
+JjAR5cKxxxZBH+z0oCPxXvZRJCS0hzYTyOB3UGv5J10C3BbfMErhmIJEq2/
3HfbRr1CUvtCCVag4XvLAm0dDRIppeE6tMQ461NgQJ3ojhItyRoMPiPhjFLR
8s8JyVJP1H2AsWybhWZG+5YH5qDvfkb7ZeehURYlxRoJes3feEApQ5Wvx8UF
b9HdoRs0eS/Kn6B0axXoqv4ERTiMOni+aA2cQgUKVUz2D7SRt2Rqn0f9Upmn
nFfRm8Rj+tgNdEQaVy3Vo3Snq8FKI/r/W+AfYipULQ==
           "]]},
         Annotation[#, "Charting`Private`Tag$77847#3"]& ]}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Epilog->{
        GrayLevel[0], 
        PointSize[Medium], 
        PointBox[{}]},
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      ImageSize->Medium,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->{{-3, 3}, {-2.9999998775510206`, 4.499999632653069}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], "\[SpanFromLeft]"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{
        Scaled[0.5]}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{1}}}],
  "Grid"]], "Print",
 CellChangeTimes->{
  3.881268572352216*^9, {3.8812686075001817`*^9, 3.881268621485462*^9}, 
   3.8812687669116983`*^9, 3.8822009391160803`*^9, 3.8890716299821095`*^9},
 CellLabel->
  "During evaluation of \
In[991]:=",ExpressionUUID->"afb8b7c5-32f9-4f90-914a-909d23f110e4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["FindIdentities", "Section",
 CellChangeTimes->{{3.888798203493131*^9, 
  3.8887982076011333`*^9}},ExpressionUUID->"6a80edf5-fc8e-4cd2-ba32-\
96d03eb74cf4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", "FindIdentities", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"FindIdentities", "[", 
      RowBox[{"expr1_", ",", "expr2_", ",", "x_Symbol"}], "]"}], "/;", 
     RowBox[{
      RowBox[{"RationalExpressionQ", "[", 
       RowBox[{"expr1", ",", "x"}], "]"}], "&&", 
      RowBox[{"RationalExpressionQ", "[", 
       RowBox[{"expr2", ",", "x"}], "]"}]}]}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"p1", ",", "p2", ",", "roots", ",", "limit"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p1", "=", 
        RowBox[{
         RowBox[{"Numerator", "@", 
          RowBox[{"Simplify", "@", "expr1"}]}], " ", 
         RowBox[{"Denominator", "@", 
          RowBox[{"Simplify", "@", "expr2"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p2", "=", 
        RowBox[{
         RowBox[{"Numerator", "@", 
          RowBox[{"Simplify", "@", "expr2"}]}], " ", 
         RowBox[{"Denominator", "@", 
          RowBox[{"Simplify", "@", "expr1"}]}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"roots", "=", 
        RowBox[{"x", "/.", " ", 
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             SubscriptBox["\[PartialD]", "x"], 
             FractionBox["p1", "p2"]}], "==", "0"}], ",", "x"}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"ListQ", "@", "roots"}]}], ",", 
         RowBox[{"Return", "@", 
          RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"DeleteDuplicates", "@", 
        RowBox[{"Flatten", "@", 
         RowBox[{
          RowBox[{"Reap", "[", "\[IndentingNewLine]", 
           RowBox[{"Do", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"limit", "=", 
               RowBox[{
                RowBox[{
                 UnderscriptBox["\[Limit]", 
                  RowBox[{"x", "->", "i"}]], 
                 FractionBox["p1", "p2"]}], "//", "Simplify"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"limit", "=!=", "0"}], "&&", 
                 RowBox[{"limit", "\[Element]", 
                  TemplateBox[{},
                   "Rationals"]}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"Sow", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Defer", "@", 
                    RowBox[{"Evaluate", "@", "p1"}]}], "-", 
                   RowBox[{"limit", " ", "p2"}]}], "==", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p1", "-", 
                    RowBox[{"limit", " ", "p2"}]}], "//", "Factor"}], ")"}]}],
                  "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "roots"}], "}"}]}], "\[IndentingNewLine]", 
            "]"}], "\[IndentingNewLine]", "]"}], "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "-", "1"}], ",", 
   RowBox[{"x", "+", "1"}], ",", "x"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    RowBox[{"2", "x"}], "+", "5"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", "x"}], "+", "3"}], ")"}], "2"], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "3"], "-", 
    RowBox[{"3", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"21", "x"}], "-", "25"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "+", "3"}], ")"}], "3"], ",", "x"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"FindIdentities", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"4", 
     SuperscriptBox["x", "3"]}], "-", 
    RowBox[{"9", "x"}], "+", "3"}], ",", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SuperscriptBox["x", "2"], "-", "3"}], 
      RowBox[{"x", "+", "1"}]], ")"}], "3"], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8887981841090336`*^9, 3.888798223317091*^9}, {
   3.888798570490137*^9, 3.8887985957897587`*^9}, {3.8887986438360105`*^9, 
   3.8887986832512817`*^9}, {3.8887987454163723`*^9, 
   3.8887989180634303`*^9}, {3.8887989769969673`*^9, 3.888799150112078*^9}, 
   3.888799202522771*^9, {3.8887992327924194`*^9, 3.888799254345852*^9}, {
   3.888799290638255*^9, 3.8887994517706633`*^9}, {3.8888382143889923`*^9, 
   3.8888382399266505`*^9}, {3.888838309087253*^9, 3.8888383099609127`*^9}, {
   3.88883835504439*^9, 3.8888384084622993`*^9}, {3.8888384766580877`*^9, 
   3.888838495081313*^9}, {3.888838546855976*^9, 3.888838708369732*^9}, {
   3.889073741170879*^9, 3.8890738298097725`*^9}, {3.8893039813168144`*^9, 
   3.8893040438246555`*^9}, {3.889304075577129*^9, 3.8893040797270985`*^9}, 
   3.8893041765234394`*^9, {3.8893042188123226`*^9, 3.8893042719908457`*^9}, {
   3.889304316898409*^9, 3.8893043636930833`*^9}, {3.8893044267763233`*^9, 
   3.889304505887692*^9}, {3.8893045624883966`*^9, 3.8893045650004816`*^9}, {
   3.8893046184274554`*^9, 3.8893047078716707`*^9}, {3.88930474633215*^9, 
   3.889304802754823*^9}},
 CellLabel->
  "In[258]:=",ExpressionUUID->"14fe0ea8-b87a-4d7c-8dca-4496bba5ab9e"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.88930480310003*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"5720f030-a941-4960-be8c-5fee8b5f4d82"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["4", "17"]}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        RowBox[{"2", " ", "x"}]}], ")"}], "2"]}], "+", 
    RowBox[{"(", 
     RowBox[{"5", "+", 
      RowBox[{"2", " ", "x"}], "+", 
      SuperscriptBox["x", "2"]}], ")"}]}], "\[Equal]", 
   RowBox[{
    FractionBox["1", "17"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "7"}], "+", "x"}], ")"}], "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.889304803106553*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"dacbedb0-7b1c-41b5-b248-a105f5cffcd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"3", "+", "x"}], ")"}], "3"], "+", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "25"}], "-", 
      RowBox[{"21", " ", "x"}], "-", 
      RowBox[{"3", " ", 
       SuperscriptBox["x", "2"]}], "+", 
      SuperscriptBox["x", "3"]}], ")"}]}], "\[Equal]", 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "x"}], ")"}], "3"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.8893048031125603`*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"25012b3c-48fb-45b4-b28a-91a97d6cdb00"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "9"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SuperscriptBox["x", "2"]}], ")"}], "3"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"9", " ", "x"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"]}]}], ")"}]}]}], "\[Equal]", 
    RowBox[{
     FractionBox["1", "9"], " ", 
     SuperscriptBox["x", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "135"}], "-", 
       RowBox[{"180", " ", "x"}], "+", 
       RowBox[{"18", " ", 
        SuperscriptBox["x", "2"]}], "+", 
       RowBox[{"108", " ", 
        SuperscriptBox["x", "3"]}], "+", 
       RowBox[{"37", " ", 
        SuperscriptBox["x", "4"]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       FractionBox["8", "3"]}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         SuperscriptBox["x", "2"]}], ")"}], "3"]}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", "x"}], ")"}], "3"], " ", 
      RowBox[{"(", 
       RowBox[{"3", "-", 
        RowBox[{"9", " ", "x"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "3"]}]}], ")"}]}]}], "\[Equal]", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "15"}], "+", 
        RowBox[{"9", " ", 
         SuperscriptBox["x", "2"]}], "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "3"]}]}], ")"}], "2"]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.889304631866764*^9, 3.8893046824028206`*^9}, {
   3.889304735691364*^9, 3.889304762062064*^9}, 3.8893048031180716`*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"25306060-4b30-41e0-a320-8799a3ddc420"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Li2Transform", "Section",
 CellChangeTimes->{
  3.890209886147686*^9},ExpressionUUID->"c90c1727-4a52-4082-8bb7-\
c975e7ea6866"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"PolynomialQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{"ft", ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       RowBox[{"1", "-", "z"}]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", "z", "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", "1", "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       FractionBox["1", "z"]}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}], " ", 
     RowBox[{"Log", "[", "z", "]"}]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", "z", "]"}], "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "3"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      RowBox[{"1", "-", 
       FractionBox["1", "z"]}]}], "]"}], "+", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", 
       FractionBox["1", "z"]}], "]"}], " ", 
     RowBox[{"Log", "[", 
      FractionBox["1", "z"], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}], " ", 
     RowBox[{"Log", "[", "z", "]"}]}], "+", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"Log", "[", "z", "]"}], "2"], "2"], "+", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", "1", "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"PolyLog", "[", 
     RowBox[{"2", ",", 
      FractionBox["1", 
       RowBox[{"1", "-", "z"}]]}], "]"}], "+", 
    RowBox[{
     FractionBox["1", "2"], 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "z"}], "]"}], "2"]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], "-", 
    FractionBox[
     SuperscriptBox["\[Pi]", "2"], "6"]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Li2Transform", "[", 
     RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t", ",", "ft"}], "}"}], ",", 
      RowBox[{
       RowBox[{"ft", "=", 
        RowBox[{
         RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
       RowBox[{
        RowBox[{"RationalExpressionQ", "[", 
         RowBox[{"ft", ",", "t"}], "]"}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "&&", 
        RowBox[{
         RowBox[{"CoefficientList", "[", 
          RowBox[{
           RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}]}]}]}], "]"}]}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       FractionBox["z", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "z"}]]}], "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "z"}], "]"}], "2"]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "z"}], "]"}], " ", 
     RowBox[{"Log", "[", 
      RowBox[{"-", "z"}], "]"}]}], "-", 
    RowBox[{
     RowBox[{"Log", "[", 
      FractionBox["1", 
       RowBox[{"1", "-", "z"}]], "]"}], " ", 
     RowBox[{"Log", "[", 
      FractionBox["z", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "z"}]], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Li2Transform", "[", 
      RowBox[{"z1_", ",", "z2_"}], "]"}], "/;", 
     RowBox[{"PossibleZeroQ", "[", 
      RowBox[{"z1", "+", "z2"}], "]"}]}], ":=", 
    RowBox[{
     FractionBox["1", "2"], 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       SuperscriptBox["z1", "2"]}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ComplexPlot3D", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", "z"}], "]"}], "+", 
     RowBox[{"PolyLog", "[", 
      RowBox[{"2", ",", 
       RowBox[{"-", "z"}]}], "]"}], "-", 
     RowBox[{"Li2Transform", "[", 
      RowBox[{"z", ",", 
       RowBox[{"-", "z"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{
      RowBox[{"-", "10"}], "-", 
      RowBox[{"10", "I"}]}], ",", 
     RowBox[{"10", "+", 
      RowBox[{"10", "I"}]}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8902098971128583`*^9, 3.8902098981641135`*^9}, {
  3.8902099720471773`*^9, 3.890209976902581*^9}, {3.8902100525519133`*^9, 
  3.890210067512229*^9}, {3.890210234874273*^9, 3.8902102495922394`*^9}, {
  3.890210285902672*^9, 3.8902103735788965`*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"9a461511-9375-49c5-824c-113359620a0c"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJx1nHmUVcW1hxtwjBMITo/3EMThBQQHTBQ8TZcvPgUHNHEIiTyjOGGMwzJL
jZoEjK7gLIrLtFGxI4MQE2jUGKa2bwP2EyFZDTKJooiRhUMcQZKg+LrvOb9d
b3+1jv/0uj83u6p2fWdX3XOrdp/R137vss41NTVjd6qp6dL+t3bz65u//rpv
RX//cuLYyyc1rM5uuuzNa96ddIjp07f85rGb3lmezd64YcsrtX1Mr6n+V8lW
NbduvWjuwYn9sHlLOx257d9hX1Mz//m2vbYd92+JPnDWqoMWXn9A0p/fzVh3
2H2NPZJ2e0x565iRH3VL/Oxdu+TWU0buDX1DtuWYVye+8epuprfNu7huw8Eb
snWHr3/m+rO6wP7lbNzxfx3f7ZHtzRzXGX02/rn2vk+avf2cbPSRa598uttq
05sf6L/7XResyH6S63XSm869pe3ZY9qyEbmfOu9ncfarvF3oK7PX834Grzdm
W/NxBY53nzwOgeMt4hYYtyLOgXEu5iVwXop5TPwU857oBSehhKuk3YLDxL74
nPRHn8Vv7qfNeKYunqXLv3j29jYu07/86JIrB616X3FI/Itn+hfP9C+evV7J
xDN18ez1l41n6bv+fdbl+/yyzXj29o3Gs/Shg/e79/uL2oxnbz/HePb6IuNZ
es5bm/FMXTwzbuKZ4xXPHK94pr14ZpzFM+dFPLM/4pnzLp7pXzzTv3imf/Fc
olfEKXmmrs9et+cOesXyM/2IZ9qLZ+nkmX7EM+3FM+3FM3XxzP6IZ69HnqWL
f/Es/boe536wtVub8Sz98/rnXnl/UszP0if3mDl9/P7LjWfGWTyzn+KZ4xLP
Xl9pPJfEOfEjnmkvnkvmPfEjnmkvnjle8Uw/4rlEr4hH8ixd+Vz/nro+6y/3
G/Qvnr0e9xtet7yR+BfPtBfPXm80nr2+0nhmf8SzdOVJ8UxdPEsnz9LFv3im
H/EsXZyLZ/oRz4yPeOa4xHNJnBM/4pn24pn+xTPnXTzTv3gmV+KZunimf/Es
7vBcmJ63+7bx7O03GM/St/zg4pP7r33DePb2kWfq4tnra41n2otnr0eeOS7x
THvxTHvxTHvx7PW4f/b6OOPZ69ONZ683GM9ebzSeGQfxzH6KZ45LPNNePJfM
S+C8iGfai2fq4pmciGdyJZ7JoXjmuMSz+IIf05mfpcu/ePZ+4v7Z29s6Bfu4
3/B6m/FMe/HMdsUz2xXP3r7ReKZ/8Sz9pPGjW499c4XxTD/iWfqezwx7qrbv
q8az9F1+O2Xmwb1WGM9sVzxzXOKZ8RHP0pW3xTPtxTP9i+eSeUn8iGfai2fG
XzyzXfFMrsQzORTP5FY8iyP1UzxTF8/UxTN18ex1W6cSe332usU58SOepXP/
TP/imX7EM/2IZ/oRz9TFs/T8/cZC49nbzzOepXO/IV18imfq4pnjEs8cl3im
Lp7pRzxzXsRzybwnfsRzCVeJLp6pi+cSvSJeyLN05mfai2evx/xMXTxL17qj
/tFen9mueJZOnulHPHs95mc/3lbj2dvH/Yb0nKuK8eztFxvP0odvviBMfGKx
8Ux78cz+i2fpn782fcqYu1cZzxyXeOa4xDPjJp4ZZ/FcMo+B8yieaS+eqYvn
Eg4DORTPtBfP4kL+xbN07p9pL55pL55pL56pi2evx/2GdMwL7OP+mfbimfbi
mfbi2Y+rxXj2fuL+WfrHew3/9PNBS41n6fn7vYrx7P3E/TPbFc+Mj3jmuMQz
4yyeaS+eGQfxzHbFM/2L5xJOQglXib14pr14pr141vyTZ+riWTrfb1AXz9TF
s/cf989sVzxL5/sN+tFn+hHPtBfPXm80nqmLZ683GM9+vK3Gs7efYDzTv3j2
4408e/uXjWeOSzyzP+KZ9uKZcRbPjKd4ph/xXMJJootn6uKZ7YrnEr2iecY+
3PTcOu6fvR7zs3TyTHvxTHvx7O3j+zrq4tn3P+43vP+Yn+lHPHs/LcYz/Yhn
7yfmZ69PMJ693mg8S9e+RTyzXfFMP+KZcRbPjI94pi6eGR/xTF08l8x70h/x
THvxTHvxTA7FM7kVz5pP2Ytn6dw/e/vIs9fj7ym0F89sVzxLz/eH7xrP0pmf
2a54Zrsav3R9n9Jnbx/zs9dfNp59f2Ybz94+8kx78ezj3Go8sz/i2ftpMZ6p
i+eSuAXGTTzTXjxzXsQz51E8l3CStCueaS+eyaF4ZrviWfMGP6bz/IZ07je8
n/h+w+vx/Qb9iGdvv8F4Zn/Es/fTajx7P/H3FOqKC/3rs/f/gvEsnd8HGU/x
7O1jfvb2cf/s9ZeNZ8ZTPPv+R57pRzwzbuKZcRDPnBfxzHkUz+yneCYn4pl+
xDP7I54ZZ/Gs+VG74lk6vw96+/h+g37Es3Tun6mLZ1vPi+/L4pntimevNxrP
3n/cb3j7BuOZ/Ve8vD7dePbxiflZ+jkXrBsy8oy5lp+9n3rjmX7Es3R9rxTP
0vUciWfz//WTjy57fInxzHGJZ8ZNPDPO4pnzIp45j+KZunhmf8Qz2xXP5FA8
04941jyQZ+laX8SzdOZn+hHPXo+/D1IXz16Pvw96PZ5H8nrkWbrylXj2/W81
nr2fBuPZ63G/4fXFxrP+XnL6+s1vv/G48Sz9o8Pr9p96ykTjmX7Es+//bONZ
+rd63zXtL0tWGM/Oz7j4vk56/p4wnt9g3MQz4yyeOS/imfMonqmLZ3IinsmV
eCaH4pl+xLPiTZ69vtZ49nrcP0vn+Q1vH3mmf/FMe/HMdsWz198wnqXrPa14
lj5gxo0nvNm63HiWfuM/ljfe8dEq49n7X2Y8S39s4IQ+Y65baDxL/26vygc/
veFh41l/8/Oi8f2G97PCeOa8iGfp+e8vMT9LH3XYth07rom/D0rv+tz/LLno
1Pj7IOMmnhln8Vwyj4HzKJ5pL57JiXhmu+KZ/sUz4yOeFVfyLJ37DenMz94+
8uz9R57pRzzb937sN+hHPHs95meOSzxL13otnmkvnn1/FhjPfrwtxrPXHzSe
pX/yzb5n3HXQ88azb3e68ezj84Lx7O0bjGevLzaevZ/4vo5xE8+Ms3jmvIhn
zqN4ph/xTE7EM/2IZ3Ionjlf4lnxw3MB3dYF08kz/Yhn+hHPtBfP0vP953vG
s3R+H6R/8ez1+H3Q6/H8M/2IZ/oRzz4O04xn388W45l+NB+012fGRzz7dluN
Z/oXz9TFM8crnhln8cx5Ec8l8574F8+0F8/kSjzTj3imH/GsOOk5Es/UxbPX
435DOvMz7cWz1+PvKV6P+2fpeTxfM57ZT/HMdsWz1+P7DenKh+KZ9uLZjzfm
Z+naD4hn6VoXxDP9aJ6o6zP7I57t/XQ1fy4znhln8cy4iWfGWTxzXsQz/Yvn
Ek4CORHPtBfP7Kd4LtErikc+j5uMZ+nk2euRZ+8n/p5CP+LZ6xuMZ6/H31Oo
i2fq4pm6eKYunqmLZz+u+HuKt4+/D1IXz16P50Wl8/cUxlnz5/XIM/svntl/
8VwS50QXz9TFM+dRPHPexTM5Ec8cr3imH/FMbsWzxg0/0CPP1MWzdPJMXTx7
PzE/UxfP7Kd4pr14pi6epSs/iGevx98HvZ+Yn70e32/48cbfu719i/Hs9fj+
mf0Xz9Q1r9T1uSRuib14pr14pr14pi6eOe/imbp4Jlfimbp4Zj9xHinhWXrJ
eSSzx3kks8d5JLPHeSTGDXpyHol5BvbJeaTA98+0x3kks8d5JOMc55EKP8l5
pFByHimUnEdKeGa7OI9k8cF5pIRnxhnnkRKeGQecR7J2cR7J/OM8EjkJJVwl
9jiPFPh9kPY4L8rnwvSS86Jmj/OiHFei47xoKDkvavY4L2rt4ryo5VucFzU/
OC9a6Ml50YRnb5+cFw0l50UL++S8aCg5L2r2OC9q/cd50VByXtTGhfOiyX6D
ccN5UYszzotyHgPnEedFE56p47woOQzkEOdFzR7n+ROeqeM8f8IzdZznNx5w
np9xg56c5zc/OM+f8Ez/OM9vfnCe3/zgPL/5wXl+03GeP5Sc5y/sk/P8oeQ8
fyg5zx9KzvPbuHCeP+C9UKLjPL/5wXn+hOeSeU/84Dw/uUp0nOcnt2W67hkV
enLfKsnP0kvuW9l4cd/K4ob7Vowb9OS+VcIz28V9K2sX960K++S+lfnHfatQ
ct/K/OC+VSi5bxVK7ltZu7hvZePCfSuLD+5bhZL7VmaP+1bmH/etEp7pB/et
zB73rSz+uG9l7eK+lXGF+1ZJfia3uA9r/nEfNtk/e/vkPizXHdgn92FNx33Y
Qk/uw3JeoCf3YW1cuA9r9rgPa/a4D2v2uA9b6Ml92EJP7sMWenIfttCT+7CF
ntyHtTjgPqz1E/dhbVy4D2v2uA/LeQmcF9yHNXvchzUd92FDyX1Y4wr3YZP9
M8eFegXWLuoVJPmZOuoVJO+f6R/1Cqw/qFfAOCf+Ua/A7FGvwHhAvYJCT+oV
JDxLL6lXEErqFYSSegWhpF5Bst+QXlKvINlvMD6oV5DwXBLnxA/qFZg96hWY
f9QrSHimf9QrCPw9hTrqFZh/1JNJeKaOejLWf9STsfGinkzCM+1RT4b7usQP
6skk+2fao56M6agnY/1BPRl7LlBPJpTUk0l4ll5ST8a4RT0ZizPqyVg/UU/G
xoV6Mvb8op5Msn+mH9ST4b4x6Q/qySQ80x71ZGy8qCdDbst01blKeKaOel/c
F8E+qfcVSup9MW6Jf9T7Mv+o92XxQb0v01Hvq9CTel+hpN5XwrP0knpfhX1S
76vQk3pfSX6mjnpfFjfU+7Lxot6XjRf1vswe9b4szqj3lfDM/qDeVyip92X+
Ue/L/KPeV8Jzia46hMzzppfUY7Q4oB5jst/w9kk9RsYt6Q/qMVq7qMdoflCP
sdCTeoyhpB6jzTvqMdq4UI/RuEU9xlBSjzGU1GMs/CT1GAs9qcdY6Ek9Rhsv
6jGGknqMFjfUY7Q4ox4jfxdL/KAeo+mox5jsN9gu6jGaPeoxWn/yedR9K9V1
jJxTLz6HEvtEh//kOaIO/4nO+ZJ/1tWEPfWEc/Tf2r13/KjT5j7dt6K/0EOJ
Lnv6CdTVP/07zYvsWJ9TduREn/Xv4Cepvwr7pD5niZ+Ezyuqz+mm5rFbjvrT
Z2u2nLh3VW3ILs/1unGF/tXXHf89meX/KgzOinaGfrbiwydOWV7oZ89VHt1R
tX/R7JVHn13d5YLrRrYV+tGDVxd5dEFN5xmdh7WZH+XRvN3HzM+CIo/e/dSN
02c2rDBdebRSzT/N8j9XefTQLQMaloxYbPbKo/V9Z704dftLanew8mhbNW5z
zF55NB/XZOu/8ui06nM61dodW+TRnar7hAbzozx6fvVczSzzozzab/D9Yxd1
q8/cufCG9naeH/F+vxn1mT9f+7cTVjeN+rz/ggczzaf+/52D/+PCiec8ZLry
7gFH7D7oioemm668+/tq/+earrz74au7vbptRMV0f25hiulF3MLmJ+oGndW2
yHTlXR/nmHcxL3OVd/081tTMK/LuXW7eRw5W3v3ScVJTU3AVPFdhrvKu5zDu
i8Ht3ILzIM7vH3N65+cGnNd0xxF5HvpOfXs/X1+aHfvIhUeeufx7TX+ojrdP
ZeMDHd9HWrPz/7z0hXNvPKtpWTX+vSsPF/2Zf0XLozt+fGrTK9W49aqM7tnx
vWZRNnPFxRN3PW9I04fVeelZqTw8ZebBkxZmZz/4j/ce7FPT9GU1/gdWLuh4
7zp5Sd7Px9YMGVOd9/0rOy1YdOj9Py/if+fsIfk8dq80PP6N1mcuXpi9vvWw
z05e88emr0Z19Kdr5aazz/z080FNWf3AjS9+dtq0plkTOtrdozK5x23t/L+Y
Ne3+wMBOrzzS9K8fdPjfpTJwn8j5OV0/O/HM6rhqKl2qnBc8fH/9iXle+aJ5
ezWe47Nf9h4+9b6Vl76457w/PN+Rb0bs2PfpTr1mZvfm+tC9cr1uyeZRl2z6
9oyqn6/PXz8/z0Nf1B3x1bub1v+s6n9ce7vzi3bD2k/63rbo6JZs8i0TOvpZ
uz3vZ7ine8e6/0L294er46r9Yz6ucNyUTu0u/pT989FDO+JQ+2Ueh/D0/OH/
/NfsIm4TZs/Ln+vuodetK+oXbf7fqj7unjXzrszjnPM/rpJNGLPt0/Z5qS3m
JRw0esigv52+NFu428aH2uex9r18HkOY1vGevDVbc2mn37bPe20x72Hs1va4
7ahkP3zpgw5OagtOwjsFn+dNGtrBVe3vc67Cmr3bOXlwSdZ6xfwODmsLDsNt
F3bsr1qz24p8rb/7tj0z6rTxj2T5fLQ2S7/hv34xeUj9b6TXSd9yyk7/Ob/P
w7YfnnT19dcf+8Q03iusPJXrdu5a+Z322idLz+3tPBX0tkz5nX6U32nfUOR3
r9t5XdP1fU353dvH731ej/eqrD8377n7aze+bftk6fk5ySW2T5ber8uHR31n
32W27zU/Xcd2+mqPtdntRf5lf5R/pW/oll391zFrbN/r49OicQX6Uf5lHJ4q
8i915d+SeQmcF+Vf2mvfy3lX/qUf5d8S3hL/w26feM4Xg/tWBkyYPHzkz6ca
h7+ueeS119f2MV3vq+f+ov5HLTf1ruzh7CvZJ1u/tfTMAb0qJzi9puaiT4as
OfCqnvDf/o3k/bp33pl+oOnaXw1/9+SPZ27az3T1f95bw7fffGj3ykno55Hr
Ruz636O7wv+cbOiMpw/vHfbw+rgFWb9Js4e+MH/nxH+3ifPPP+P4msogjGvz
PvesX3zZ1mbGZ9Oww0bf3fRFnfRtR+37o8suW5k9NGu3g456pyYcX+g6jzF5
3o6aR6/YJci/3jM0v7Rlc+cP9zD7vJ/PZdeOuWHMt+d0Db7dBdn2q68bddUt
3QPHe+dPrzq7Ids/6tV7rK9lPW6+/ORVOw4MJ2G8k3958QnfaOkZOF/H3DHq
yLrbewXO11uL+3ed91TvwDj87tRv3r2yyyHhJMTtJ68cvtPHl/aFvemVfrlu
z1fhpzICetFu+wLx//W2bFDez8TP1Hxcpmu8++VxMD/S78njBj8rFWfoc7Lr
8nmB3pBV8nmsHFfoh3x59DUbf7Za814ZWOia94IT8yNOCq6a2Z+Cw7qBiEPB
bWAc+ueca37NvjZ/Lsx+9LplfW7dsy3rnz9H4dBC1+/Xc/Pnzuz1nJ6aP6ch
c/1vy1bkz3Xw49qQFXnA/Iurj/K8ETi/c/I8EzpjXEVeMv/2e2uexxCH+H5V
6yzfR1HXOuvX5bjOcr3WOks/Wmdpr3XW63GdlY7f5WH/rK2zXo/rrNfX2Tor
neusdK6z0r97+aNLZ3RfZ+us9x/XWa8vs3XWxyfWi+C4tM4yDlpnqWudLZmX
wHnROkt7rbOcd62z9KN1lrr2dVxntf6yXa2/5Fb5sCSvVphXtV7zuVD+5Lqp
dZzPl/Iq/Wt9z/D8Kt9yPdW6z+ddeZjrkfYDzDN3F/lZ9pr304p9Qob+K29z
fSzyWOJf+dzbN9i+wvd/juV5t17XPG/7DTeP7fsN5X+u+0V+rjA/a13g/kH7
E+Z5rRfch2jfQq4qPZ8YNr3x4+aeE26/dpfOH88fMXHnX5+6c2O2MNfr+hZ6
y5UHPNt9vwZbd45Ff7T/4Tql9Yj7KO2LuN4V+7FAfrRf4rqp9Uv2Wr+0j9L6
Wz/sx513/HC1rWuy17qm/ZXv/wLtMwOfF+27uB84pVgHPT+Nth/z9m/Y+jjA
xXOD7dO4P9G6yf2Y9m/HOf9xPT0B/de+rh/stc5yP6/9HvnR+svvBdoHcv+m
dZn7Ru0PyfP/AaDDtJw=
    "], {{
      {Texture[
        GraphicsBox[
         TagBox[
          RasterBox[CompressedData["
1:eJztyMEJwkAUBNAlXjzagl14ErwEvEZSQIJr8LKBTUDsIm3aRTbgORU8ePOZ
+ed+bF5VCGE6ltN0n1vO3fdxKqNN03tI8XlPcxxivvSH8lz+2fqvvgIAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAALBjBcshkTw=
           "], {{0, 144.}, {144., 0}}, {0, 255}, ColorFunction -> RGBColor], 
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
           Selectable -> False], DefaultBaseStyle -> "ImageGraphics", 
         ImageSizeRaw -> {144., 144.}, PlotRange -> {{0, 144.}, {0, 144.}}]], 
       EdgeForm[None], GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxNnHf8TuX/x+/7nNPeu2gQQioyQikrI3slIbusjJAUISqaQklKSkMpWW1p
oL2VJKm099RO/a7n93qex/374937vsb7Gs/3dc59f855pXy/EZ2GJ4VCYcBO
hUIa/GXhP5TLBasUbMdgoalQMdgOlssXYh/6H2X7zsEq63cJVi3Y7sH2CHZs
sD2D7RVsVgiaHmxasCMdIwtWNdiuwXYLdrSe+CqOR9spwY5wbRWMY017B3sq
DLQgWO3w+YBgBwarFWx/yzWC7RNs32B1bD8o2An6g4OdGKxssEODVXdcYk6y
7rBgx7gn9lMv2CHBygSrrye+ruPRdrxz7hesoWuHX8dgNV1j40JkwZ4a2U65
iXWwP8v9M0YzucO7hYzg19r1wfs0OZKHU80lMS3tS1tzxyC+lX2J7+S6YNnU
+YlvG+w42XSRI/w625dyB/fM3k63HR5d9TDrLtMGwdqbG2LaOXYN53k65PO2
YN3kS37O1BN/huPVd779zHfPYCfLq5fM4DpAduy7v1wo9zEH8D7bdrieo4dZ
m2DPhLXcHuxcWbDeCeaGefo6BswGmQO4DtaTn4GOR9vFxvUO1s841jTMsWEz
WtawHCVryiNkzTkaYzuMz9fD5qJgPeQx3PGIGW8d6x7q3tjPBYXIGsbj9ORq
rOPRNtH1wmyma2KN1wU7z3JvecN0slzY3yTjKF8qaxhfLheYXemaYHyZ7bTd
LGuYXeJ45HBIsDUhJwuDXWGZ+GmOB/up5p75phhH+Srngff1smOvN+jhMVu+
tM0INtJ9znLftNUIN8N9gu0bbJ58WetN5oDy1c5DHq41f4x1jXWU5zgn7OcG
u9D4W9w37G+VI1x/CPZGsDeDLXSfcF1gO5xu07PvO2yH65162N+lh9m95gA2
i4JNL0SutzvGVOvWBt53BLvPvbGPe+xL/CrXPT/YYsej3+PmkrblcoTxA/Ll
HC3Vc75W2E5+VurJz4N6mD1WiNwZ9xHZwf5+1wXvh4PdaNsS65jvUfsS/4Tr
hfFq/QIZL3ctT8kUHk/aTvlp68jDZsdijLWyhvGzwe6W64tygd/zsoP9GvNE
zHP2vce4dYH3ncFesC/xzzgnMS85Hvt+Wc9e18sOZm8He0geb7on2l4Ptsx9
vmYOlmkzzdMG42D8qjmj3yvOQ3mTOSb/G+VLft7V0/aOY9DGNcA9jO+c94zL
88B556xvlQssPzAH8P5QD4N18A1s7gr2SV4O9qkell/KHU6fyx2WHzkGc3xm
X9q+liP7+8K+xP9ljt8P9pXj0e9P90Dbj/KF/XcyhfH3es7Uz8HeMie/6GG8
TQ+nP2TKuL/JFJbfuC7y8Kt9afvWOub73b7E/+16twT7Rw/LvYuFwk+u5V+Z
wmO77ZT/s26rcU+ag6QYWcM4K0Z2cN25GLnAb8diZAf7Yvj8cSHG7FCMfWlL
i3EM4ncqxr7E0/e5kM+7g+1SjOOx712L0bPXfYuRHcz2K0YPj32KcU+07VmM
90pyskcx5uAHeax2P/sXYxyMdy/GnNFvt2Kch/LBxZhj8n9gMfIlPwcVo6ft
gGIcgza+JzjXfGcfUoxx5KFMMXryUL4YOcKgXDEyonxYMeYD9kfaDuMKevhV
LkbWsKlajFxYb/1inKNsEejhLAd+i4JVKsZ8wPgoPfEVHY+2E407NNgRxrOm
ox0bNscXI3d41yhG1pSPKUa+8K5pO1xr6WFTtxg5wqOa4xFTzzrWXcU9sZ86
xcgaxifoia/teLSd5Hph1t41scZ2wapbHhfsZb6vgp0cPh/u/vAvhLp7gjUu
RtYwbioXmLVwTTBuYjttNzruhcFOcTxy2Ey+5Ke5nvhTHY+2RsWYe+ZraBzl
ls4D706yY6+d9fDoKF/a2gY7zn12cN81rdurGK/vM+TLuehqDiif5jzkoU2w
Y41rZR357OKcsD9dT/xc932Rc+/tOTizGM8QOentPuHasxi5w+ksPfvuYztc
++ph308Ps3PMAWwGyBeuvRyDOfrbl7ZB7o19nG1f4nsEa+A6Bjoe/S4I1s21
j5AjjM+VL+domJ7zNdJ28nOenvyM0sNsrNwZd4zsYD8kWGt5j7YvbUOtY77z
7Ut892AvhbO5OI2se8jymmDDXe8kOcJvotwpj7cvvCfbDtdL9DC7TL7wmB5s
sGuE04thznuDTXAMeE81B3C9VE/8FMej7WL7so7LHZucXOHY7HWGHOF3nR5+
17on2q6WO/u8ynwMkylnmXM20zhYXunY9LtQdvC6wXyQ59nmA8bX62mb5Ri0
He9v+f2C3VSM3GG5Yyh/EfyXwW6VO1zny53yPPvCbIHt8L5ND6c75Q6bRXKH
zcPFeE/h2rrZMWC5UO7wvkNP/O2OR9sjxrHeW4xjTfc4NmwekDu8l8ia8mL5
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
obJEKzYoLWnFBpuDYfaD6XDLcBlhuYvjjUpLmrCR8j7H9XW0jpjZwa5Mowat
s3HnuV50Yk/KDh3Y2DTqiPi3s/h3k9g/OrBcOzbOfrC5yLa5wa5Po54Lpui0
JsgMHdhEeaD9miIz/l+pyeaDvuPTklZskqwnOlZ/4y4xl+Od+yrHZL8zg12T
Rg3ZDPc6SM/eT5P5FX5GKzLNPV7rntFNtTE/Q2R5lePf4Bzo1NBfMU+54Oek
8d8au9a+V7umy1wPXz/XW087mjz0jWj0bjQ3rLeebV0tz3at8xz/cNc5y7Ve
J3PGvMXPl7pG1srjLT7f5DpmO9/AYDdbHuh4cxx/tm1XOt5cx+TdF++w7rX/
PM8H7wZ5b8j7QzRu6OLQx/EMkP+vleeWD3nN8twSTRa6L/Rf6JLQIKFFQqOB
Tga9DO97eYfLu9y1hahDuMv13CJHtCFoQtCGrHQunrVuLcT3/rz/570Q74N4
L8R7DN533Of6nna9xPJMmGfDPI/nOTzP499P47NX2i+XKfnk2RDPiHiGwd/S
/E3N35H8FuQ3Ib9Z+HuGv2v4fc0zNZ6t8fyGvxX5m5G/Y3g+wnMS/nbn9zq/
2/ktyXNSnpfyjI7fMfye4Tuc71e+Zw+V1xr5wWut/GAKTxjz79ORC/4dPK5t
rvGxnoWZng3YrZPlas8k9wC+w/guO9G8vmCeYUpetvqe/XlzRW6eNVf8ruM3
NL+dOSsvenbg/rJ5eNd9nOi++bsj/1sQz9/WsOR3Nm0bZXCobNb7DPMdedNG
nraE8mZ50w7zTc7TTZb83mNc8sA8PBd52dznZwSfnx0862dMnovmz7PxnO33
HHusZ4Hx8mdg+PyZIp74VzxTzLfZc0b5dc8I5+pNzwXn6svw+awsvu/4JHzu
nMV3IXWD75XFZ/ZfhPoeWXxXckLwPbP4nP6rUN87i+9Hjgn+9zS+X6gRPnfI
4nuD44PvlMX3BnWC757F9wacXXLDWf4cDll8L/NZ+HxGFt/fvO0ZX+N+WXsr
c0fdR3JmH5ebXzwxXJMvybdmGK9LFt9FfBrqTs/iu6FawXfN4ruL2sF3y+J7
iX2z+P8A8Mw+H/dhzxRna5XnjnfAvNvkbK5TV8J5/9+/b+X9A90YZc4A7954
F8QZp2/Bex7v3RuYa74vz/Ds004b1yLavune/9D15v+mIB7NI7ne4tl9wLwv
s26p9e/r83rOxZL/17bZ65vxmA9+7G+c9zDWzj12k2vMf5Pi89/pZb0GWCf3
P+4P6z3Ty7xuOOvLveaIedw1sqYlnlPO6wpzTu5Xei1yjT1mzsn9Q55lzvSD
Xous7wnPCGeF+98L3ie4z6zzXnKXDLmfsVa4zZcL67lVNjDhXtja7xDuhYPN
L2NM8/uEexX3Lq5XcrnaPDLnf35v0M7c1cL5+i2N7+b+DH5SFp+FHRv8H2l8
JrZ/+Nwyi+9DywX/dRrfPx6RxWuP6+4vzkAW3+ntHXyzLL6bKmbxeuNaOyyL
1zDX737h82lZ/HcJymbxeuNaOySL1z/XPgL32l4L/6TxeuZaPiD4D9L4LnV7
Gq9truuDgt+axvewB4fPH6fxXep/abzGuL7+Dp+rZ/G9YpksXodcgweyljS+
o02yeH/h3rJb8I2y+I7uyOC/S+P71F3C51Oy+E5vz+CbZvE9YeXgf07j+9Eq
4fMvaXwfunP4fHIW3wfuFfypWXzfWCH479P43vbQLN6DuP8cnsV7IvfDLHyu
l8V3gxWD/yGN72p3DZ8bZvE9YaXgf0zj+9ndw+fGWXxPeFTwP6XxXe0O4XP9
LL5LTLN4b+W+ukfwTbL4TrJq8NvS+B733zTes7hf8VuBa4/7OWsf5/p/DXUX
ZPE9LwzGyoF9j87i3jlfF2bxjLGuUa6N83VxFs8Y5+Uiz8zRWRyXMVnXGNfG
us7P4trYRz/3Qs7bZzHvnMHWnkPOSKssnhPOQscsngfy384z8CH3mSy+K+Zc
983i2YZ3H5lzLtpm8Wzw3TI+i98v5Pm8LOa6efATsvgOFt4jssi8QfCDsvhO
mHM00rNUPvhv0/ibkXMxxLNBPoebU87F4CyeDc7auZ438j80i2eAnA/LYt6/
CZ/7Z/H34Y7Bn5jF36f7ZHF9rO2k4M/J4t+VO2VxfayNcz0wi2f7/wB1Rde8

           "]], Polygon3DBox[CompressedData["
1:eJwt0llXT1EYx/FzOg8pUkioUJnKcN/iHaSBiDSSWSqzULySuqMysxYyVKYm
DVorc4bu8wpQfJ/1c/H999mnffaZdmZNQ3F9TBAEuWSUx08yXQ2D4BqV4pCG
8Bu6jBfRJP5BFTiiETxMu0wL+dxBKsIp1IbbqQAvNq3txwrxnygI+nAvFTOe
YTyA+ymf8S/Gr/Er2sr4d6S5fmwb4+lIc32NnYz/Rrq2r7Gd8RLTtTvoAJ7i
//dxC38PMt5C44xbGe/AS01zr9N5nENduJsq8XK6je/QSbyWnuCndBqvM/kZ
ncXZJvsazXgjPccv6BLeQD2hjjXgNfQ41JpHcRY9xI+oFq8yuZPq8GqT/ZzD
OJMehDpnH15Jd/E9uoDXm57Fr1mNV5iexedsNr0jfzdjjK/gTaZ7fUk//78z
f1d+jRN4Hn3Gn6gezzX5I53CCfQl1JyLeAF9x9+oDMeY9o7vsXM4kb7iCdqD
0+gmvkXlON1k/wZNeKFpL/qau3Eq3Qh1TgleZvqWfqwGzzY921uqwkajofZw
I04y3Zvfwxk833Qv/gx78SzTuX7OcRxvetYPdATPoff4HR3CsSb7HjuG40xz
fc5+nGH6Nr4n/wERD3rj
           "]]},
         Annotation[#, 
          "Charting`Private`Tag$1455299#1"]& ]]}, {}, {}, {}, {}}, {
      {GrayLevel[0], 
       Line3DBox[{921, 1, 917, 902, 31, 61, 91, 121, 151, 181, 211, 241, 271, 
        301, 331, 361, 391, 421, 1096}], Line3DBox[{3, 2, 909, 921}], 
       Line3DBox[{3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 927, 16, 17, 
        18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 910, 918, 30, 922, 
        904, 60, 90, 120, 150, 180, 210, 240, 270, 300, 330, 360, 390, 420, 
        450, 1017}], 
       Line3DBox[{991, 451, 481, 511, 541, 571, 601, 631, 661, 691, 721, 751, 
        781, 811, 841, 906, 923, 871, 919, 911, 872, 873, 874, 875, 876, 877, 
        878, 879, 880, 881, 882, 883, 884, 885, 958, 886, 887, 888, 889, 890, 
        891, 892, 893, 894, 895, 896, 897, 898, 899, 908, 924, 900, 920, 912, 
        870, 840, 810, 780, 750, 720, 690, 660, 630, 600, 570, 540, 510, 480, 
        1097}]}, {}, {}, {}}},
    VertexNormals->CompressedData["
1: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
LzSueL1sesDvh/Z85wJgcLok+XA9jRPifQrth5znarfMtP4a6k/2NYfwmq3b
JnL9BKwPFG+m5xoxniHyO9jzIBTPhxvHPo7itZi+URQ3swGITvhXoXMcjnNj
+iK9uf4/Y2fCU+23W3ueHwDwuU/00eoBA+ZpdrjlYkXmg/1nMR91wt9FNW9p
wnoNIKNnJ5j5XI6DZ6k/zbLUXWmeyBS9p+y60HeA7fR/Xi+Vm6S9pnIO3Lb7
lMlrAFm94HGsHvn0njctSnpF7hDe8wKLK+RvQBaHGM+sfqE4Xgd0RfuVD+HD
5z8/NF8fuPqqL6Hj8SjuA74t2Ls4IozGr3B8AcXJyHP7hxyvmS9rBcX2kvqH
OC4kaW+oXydpX4mdAfqi+TvSfWHgvmvPL5nDzTtzX3QdMo7Q0TjI8hkdd/L8
7cE20K/zutK+i6j/uVf24mXXfK5+cX6QzVPsW1SwMt9yMqwV5etsyHpdq/VH
fbnuAcX41eOcoxcfGDfuqjX1A2drT/Upi3bhyL8S5TEHlitVe43w5bynaL0c
3LJ5DRy3Z+WG87CsfDAfVi/ovA1YPfLpnQ8ndaI4sCcHV3w47CPKa47l4BaP
E++39BzNF3/ugvIpcUO62+/KCyTndBTfBAUrM+9IBdH36JT2vPwHdZNgQ+mP
EtfK6RDnC/jiPHo7D33aNM0PRN8qq1conQc+MPYZ8SdywPsm8hfY8yDcKpon
jYs+qDbqMlXREFaJ82yEj5ivFeJD/Yc5SqvywiYJwLi0nn1drSluG5W+e5eN
N4Ti3xlw8Cx8WP/6Q/tR5LmlqrpfPz314OirJkY1/YjiKDhYunCRwwsXwme3
6D3Sg3hemB5+bmVjcBdVMA99Yno7UT6lN1CL1Li4LHAM3V/E5whwBcntP+ud
yo1PzvF9Hihkx5uD1UgvOM8uGe+gesxBfuYPpHe8T/U7v6Rg4Rl3iOZD5NMF
5VNYXPHhsKDJNOZdsweci3DLrmuFaF+dDzF+xPFnABqifWU6/qY4x3Fvsd2i
8vdEeF5ZFx4ZV+jH2Y9Ch6XLXfkRwKG/ct/+MS2Snq/3aA/7VQIA9A9Tvh/r
H8CJM7DrkvR3ufvXRpRnw3R9dG6aLZoPfe9izzy45mFsAs+Kz2EcvYvlQOsE
ekUX7hJ0tANHRfnwsYSeUb9z95K37oiPHZHzasHlu1LnR4C5mioRq2ZTf/UV
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
     "],
    VertexTextureCoordinates->CompressedData["
1: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
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-10., 10.}, {-10., 10.}, {0., 2.9790409838967277`*^-15}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.890210960994906*^9},
 CellLabel->"Out[441]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJy0vQmcrUdR/v9y3nNm7n5zc+9Nbkhy78lGMAkhCSEkhCQDISsJISEQRZZh
kVUWAQUVHUFwQRHFhVVGBBUUATdUQMcdF0TBBQVlAEEgYU1CCIief32r++lT
b897Zibh95/PZ7Zz3vO+3dVPPVVdXV199WOf++TvePpjn/uUxz92fNmzH/us
Jz/l8c8ZX/rMZ9tL7V2aZvCtTXOX3x83Q/t70jT9Px7RNN/MC6/1P9sF+7HY
5K+h/xyN7ceSfa/k31zT/Pbaz/Leqj7b+s/5cb5mNdxjonv81qbu0a7E1wY9
r71jg/vkz6gtS+Hei/m18R24z0LsQ9u99+KdvU+SdVvuwdfbN3efTh+q9iz9
/9WvV/mfo0U9I/9enfXZ6rWFGfdTG7hPGeMgm+X1+h7v92r/czhupphbLbea
X47NyB/XI/tg2YFbusecbhtvz32Om7ZsofsRbw2vL+Xvl4QnvS59TMIMHytK
yXdzgvd+ZdoOtV3tV1teHG7+N9WH5jsdyg0v8v3h3k/2jWB+TeL0rxeFT797
2oFl3X3kP9vF2NG2fspCsxbTi/G1+JQ0YO2hI488stxxftralfzdjPxnV8Rr
nrwU+1K1ZqF+8tv8zxFPftSv/dqvveu7v/u7b33iE5/4n9/5nd/ZHPFN3fmt
/ucW7vzaF77whf/+9Kc/nd8X/v3f//1DfuVXfuXL9hT+3/9NPeQt0+b/wE//
9E/TfB70gle84hX5s0Metvw93/M9vM7D90wfs6DHxOcvNmsHbubzfy09n/uq
kx+07+fw/FF6/r3/9m//ludzDe/n5wtxy/Xz9azF8PwO2cXnv8n/3Er/6TP3
L/23L579zyboux5++OEyhvz9LruGf5CXX5saNdSzxQpZ1wqx5K9xbs4aXXuD
/zknNNXjntngqTZSSKSZ9nBOreI37//Pd3zHd4TRGodGiYvUWLVksFouLV8v
DI1LzDuqZUVDmy3+3nZahcz0cVoDfr5oMqR1L7aOPN8+i9yaw6fjVRSycjiW
829vU6Sz13UFFXFLr7cluWv4+I1Q+JsmfvxJT3qSoFGGkK9fCo94Tbe7t5tA
uda7uyvdn6699xnPeAb3dojYlwZB9onP354Ho3P/V0678Og3v/nNsQu8tj83
T7fjK99SPW6mo5Ju+fPTJq/RpgM99+sTwevD/dIrW/ukzGsd7UjE23YQ0HZF
4PQc7//Tqb1R+wX1pg/rSeztYhPcgFHPc4c9cvrF8NyXdYe2o/UJyS1Dq0c0
O6fPLWqcnwuiy7WjqTwdJny9Ljz3pf7nTPW+6/QxhcDXeUxHrPExP9bfPW/S
sbOeMUDS2Wa+QCrK12vDnV/S7UCtdoe6Nx93b75lKh0fYb5eE25+RXp/3ISv
+3S7Qnc/ZA98G4g4vvu0xSAaRIXI/L/cKZ5ZxBWfe1nqFM+V9yRahHvu5W/P
VALeLOALnt+6TZrzn0OR9fvNW3i33SO26lL/c8u4mfp2C1mmsvD8PqMrIMHJ
xzqrQUdNx90WLs1qYbZcfJbXRN78Xwbw1WuaW+674P+l19Rcf/Rpqf+zpDk/
bUphqQpVy6HJ8g1Ck/21oiqZMTX2/t+r1jZ73ARnps+POGUq5jVMdVpo3/HH
H78yq33JKLlyvVZifmVoy1U9zz15+tw1THXP8NyLLrpoEp4bfZRme3pN/pv/
9wv9MlisZCAny2Vzor82k73O7GlOwnkL+nRniUHu3JrmJHWcjyq40ExB78N/
wrQpUSyftCFG5Ellk4Nz9tlnT0488cTxVDid1rhwBvRhbRvm5BmJFtSepOa9
lCAJu6LQvbot9r0woy070mudgfq5Na3yqWgxf4kE+72UYBqLXp9ZNef+97//
4rQ5He9gR89A9TRHGPGvQ9OB6VPvbALKI/g6o2rRgx70oKUZLcp2mLsWDfrZ
tS1abGKYZ6m8Vr6O7AqtQ5oXVs152MMetjxtTsfNyO5IZ7xesbY542ZK4c2Q
n0esL6Xgs9NsfmeSSc26973vTbNW1m9WZ9xisx437f3rrNcfNuNTuCzJees4
S29y8ODBybnnnuvg//d///ele9zjHktnnnnmwh//8R83d6+a9LjHPW616fdY
dqfXsHHF0fyZ0KTHTAUi34Omv/JFL3rRu8qU7zAJxNXx0KFDgHfy8Ic/fPLI
Rz5yYi2b/NIv/dLkr//6ryd/93d/N3n/+9+/+rGPfWzl9ttvXzr//PMX7P8T
Q4PPOeecyZOf/OTJjAYn7M9p/oJ8acjXTV2RU2z7I7uDWdNitkAdPzbh2ENd
y+oLUr722mub4eRRj3pUs2ty5ZVXTuxpkz//8z+f/NVf/dXkb/7mbybve9/7
Jv/wD/8w+cAHPjD553/+58mHPvSh1RtvvHHZPr90xRVXLHziE584NL2199EG
l8FxDLmBdFcsdW9eJBW7Xpzm2MdHTCGzxqOcm0KwiG9rul4wWlUnH/CABxiz
08HDJ49+9KP9td/93d+d/Nmf/dnkL/7iLybvfe97J9amiclt8o//+I+TD37w
g5N/+Zd/mfzbv/3b5CMf+cjkox/96MQGdfXWW29deuhDH7p0ww03HN3T4QX7
6nY4z3c6M52Xhw7e0B1EAVCD2Mdb6TWP6Hk/zjvvPAZwGx1rjpjc9773nTzv
ec+b/NEf/dHkT/7kT3wc//Iv/zLi08fxn/7pnyb/+q//OjHtmvzHf/zHZHV1
dfLxj3988slPfnLy6U9/evW2225b2b59+5LR4sKHP/zhI6ruWiMn11xzzWLp
buXHZS7pzEJjxx/WHdmO/UjPSv7bxRdf7B0b8XN+8pjHPKY5zD3lP/zDP5y8
+93vnhgjTP70T/+0DGPEK8OY8TqxPkz+8z//k2EcTAywzRbvMi8xwiaG1c98
5jNLJs2l+9znPgvvete79oQu20veZdP6pVldzmPdmf39VOjydf1jLfbNE2Un
GciFrm7zn+PJ4uIif03uec97Tuzyye///u9PrIWT97znPZOVlRXHsQY54liD
LBzTW7DMgCMQXgfnXAcoEJp9dtXec9o94YQTFl7/+tfv7JGEcd/yLEns7UH9
y4IkHtId/Nts8N9pmPXBT3o19DG2173b9r0dGTQnTK6++urJs571rMlv//Zv
T37v935v8gd/8AcFBoK7aCvCXTCgx0Ce30iG14HJm9/85skznvEM/wyfBUpI
lPsBL5PyKk71zTffvLR79+7xSSedlDVxKhY+/4hHPCKKpeOI7+3qhM/ioliu
TvrdB5Drf/VXf1URpTxddwIwv3+ytLRk5GbimZs89rGPNRmBlvF4PHnTm940
+a3f+q3J7/zO70ze+c53usoIMVFlQExUGdCAXIQMkATCeCDyf+pTn+oy5vNZ
Nk43jAPPAJ02Nism914Zmf1bnSWjfT1K9JNBRg+aQmfNhKidQrHc76j02mKT
3Sock11ZTve73/2ctt/61rdO3v72tzumsArSLlFo1C7wgXaBK+SFbLLWuLyN
Lic/8RM/4S4CasLnwSZy557gFdwyJoyNPXfBZJKDBUlOmORnPvOZ/vkgp87k
SmG6GPL5iSCny7sq1gmw+7MGiChJZ+icc9VVV7lmPeEJTxggoO04Vs0e/vSR
R0N+/dd/ffKbv/mbk3e84x0FVVEDQUPUQJBlEmsG4MuIm9dAJ895wQteMPnB
H/zBySWXXDL52Z/92SId7skoMBo8521vexsjtGKfTUKa6wjpaU97GtO+8VRO
nbnNvh6di3K6JN1ylheVJ40dP/fIIDTY6TnPeQ6tmEdeo8njH//4gUtuPDGH
dfLiF794Yro7ectb3uI4ozeMu3AWdVLeCFhDgugmmOMz6I55pS6xH/mRH/Hf
NOANb3hDwVOQ1uSXf/mXBzzU5vU0Rl/DSoIMBCpgqjBLghlpndjcS4MEL+4i
rRMq2NmD3OxJ8LiJsag3wcQ7efazn22aaeIzyZln4eRvvXCtspEp2JOmiv2l
qUgQbQODSBIcPulJT5o8//nPn7zkJS+Z/NAP/dDkZS97mf/9/d///W5LuS/3
476/8Ru/4aP0mte8ZsCQmSm226wrue/6ru+iwYszJJf9mE7g8ceD5Ba62Kud
vzTPmVInOPve7/3eCYMw4Lk70FWTlv3phuDnfu7nfCryxje+cWIc6BpLr8BE
1Fgwh9TQWrCH9HiPydRP/uRPTn70R3908sM//MPOY0iL1wDJZZdd5thCSkiO
Z/z8z/98ywMNZ+a0lK63lbSQlA0w+hKk1ZlkJ00dKTb553na4xobpXZhF29o
NSuffw2+Tk3vuedoPrHjCp4xHJmJNGmNgFXrcjs0ufDCC53dXvva107My3Fd
Am1RX0GH9BXEIT/0FuSZYjEYk5/6qZ+a/PiP/7jLit/oPDJjPGiFTQP9ntwb
RPsiJyNlxGJ2pBaaa8bJJ59chGZQW54htPRznv/rcGlR2Ci88/3PDYPKDECO
PaZsA5QR7Jmv4d20cdzFiyZF5lNc8spXvhLdmbzuda+bLC8ve09BSNRdUIg0
0V8Qx+vAw1A0sUd20Ick+R/bwAg97GEPm1x33XWOcEbLpGtuoj3NoMf8Tl+D
SopIENUxBAcpdhg90xQfWewORnc9Js+pOwr9o0G653Wh2RcUZ6TkyDXfkkbP
xYdjBFQh+R/7sR/zOTgC3sFfA//z4ORe97qXYxp5vepVr3K5/OIv/mLRelAm
rQe9yBztx1CCVsYIeYLYl770pUW70XReZ/y4Lw16ylOe4vf/mZ/5meHk1a9+
tcnMDNOGYjawrqwvZkS8qtvkGW4nUB5Fek56zAZx+7j2m2PXKQHs7ne/uxsA
zCVqSUft/2YOqc5hH1r+ava7oprzTnddcX/hF36BXhc4R3IA0oiZ10855RS/
K9cyLHwekdoYGkvbO/YspmyIlntwb1pm8prjIc22sXFKE76KSBHnc5/7XLdW
U5F24kVZpApS+1cKgnTj/T8SRHr2FKVrXOjsLin4vHjppZfmpbv5BT6Py0xz
7HpXVAyqGVYz3CbKgYvyWO8ewn75y1/uXUcsYgehFVHAEKCWax/1qEf564hb
KOXzoBTx8pt7IWY+Cz+D4rvd7W6814z4RLN92WzZGlkCAskSMFx++eWL9kyp
eJ9AFXnn81o56MRbYwLVmVOBrvG1k7O4pUSi8H7N9q7afVY+9alPLZkHtGBs
mCb/W3wcmfwLr3QbYkTWJuEdzJ1a/jIyWFhYcKVGPIwD1yE2kBvJAbLkteuv
v97fR+S8xnAIsXwe1uF5/C8xg3JIGzOJO2uu54gHNbvHuEh9UsYiwt8GHWzD
KrM96xKQKpJOUh6OjzjiCJ+VNYl4+5ZosqBvzZ9opnls/J3owVfyiSl/JMaU
k0x3eeOOO+44h9jpp5/uZIjxwYTj+uAwmrtN0GN5586dhICI2qbZuuerufcT
IY8YzSMw6rbejaDKIX81+5xC+AQ+uiwYOBatgG0GBwFzt4c85CGOZSyl8M/7
Gf+JQbaWMeESxgS3BDcEu/zABz6QW5kxtKY1u5fNTVkzMECfgcFJhqlxsBlT
wmt2zT9cccUVbvPzwCximPnslVdeibinq1V5OG7xn3PiHS0zaM3urCS7vjkB
LorTdZp77uVyhxbDoyFiUoftwlfA48JTpenMjphDMvv+4Ac/6BE764IHKW+8
8cbcfF9GcGKu1Qg1QMLMMnYybK0P2yEHIXLBIDIsfEA6Be0wHAzfgx/8YNcr
jCtWAF3CCqBL3Fy6xLDzN0PJmGmiwZiBPcIEODNw5xCgJHO6ozNgWHriMN/3
fd/nAwZ3MGDMaqzBL3/e856Xx2uFUMG3fMu3TLKi9a3o5Xyvm9NbC01Yq8p+
jVbUaERzehrhWZOT/JGY6ZQVbp+DgrkCniEjqmUSAIj5xDtBGPjUzEWIHDBj
Y75LHIqYCrEnopBf+tKXUme2eYtx2WtFRC8YA5ZVbEi3E58a8pdNjR760Ie6
6Jj8QUqoJTwnzsSE/MAP/IDbNZxSnCWwjzrCf1JHxh41ZlzBBK/xTI0rIKUb
gJZ2ftu3fRue3IAHNrtp8rJ9ZNFus4JUGCqkwQgTlYSmaYJGGIoyZ3DFbpPH
cuRcyW3zdR5l7Fsq7Y7zSrM2rb2s8vOVp0zrLbEoGcP/SwZtv2MF8iICokHG
cjHQSBTU4y9BbkgV6YJ+JpxM0wlyEB4ieGYiWDRVzRkDWx1AEKmmAUheqovT
YKIx6vVhNqYY8tfAB/w4Fz66w0QFoKD9gIXboNRm+/1WzOUwbCgyhForMkov
AoCzNdh0hcHGcNAFMIxdxxDzLLrRTr7927/d+IUZi0aaJRnizoiEEURsrNzw
HvptROuqmEQwWuL5Gm3rGcPYuwz9ojDaIc26VQqBf929X5eVN3D8FCqTb/3W
b/VIe8uAGnI1pLQfRcNxYAiQBbJDhsiSeAIKgEzykGo4/b6ES1A+FIi+oUDc
C0Wz4TVpaSQbX65zVUAwYAntZV6EgPnfrJXjSGwqrYVc0FrUSVrLAIIfDSLX
cD2NZhAxKZAOk20bhNTxgY/grjKC6CnoITpOr88444wygkzc8CqxWU0yf8mP
Ga3wMQCH58UlvNq3eP/CjsoWWi4q6wPbk5JTJpcn+Xtp0YSJI6bdlDIOIm8x
v4QxkQW6hI4yAMgOmQBmBhEi/sAHPrBoM/7cl61u3fH8pY94jlhC5J0toc13
TAjb8JZcMU0dWSqAHfg00iCGwF0wzKgoDEKreCoQYlQw+lJL1IVR40lRLekB
8GE04Vw+ByI0mpgYBoclX0nBhrQzoPSEcD4ooH0QM1CnfaAMm2qCdPZMc6r5
8a5dHvZwO8T1jOppp502nqruMAaw8Eejhs4c3JDj1JeUe7c09jzGY6Z4ADAO
K6N19yRquSAMFKyGGGE5xAWDQcLmS5GokLu3ze+P/9WnqQwFQDHrPJ+G2Bo4
5K/WB/ugrwsTi4R/4QvUl79ZM4IXeGJUWwyn1BZOQW3hGNSWpzPg4ghaDTw1
yAwcg2zcO4hQ1wDzfO7DtTj6cYAVxGKAaZ+126kyxSLml6AMBvmss85ySQNa
DXIGAoOs5IyYnxjmfGv23DxxM0AIeVUxlfplRn85XDQNCOPwIG/WiNfQFhfB
aQwl1IXOovvoPQJF+AiG2Y81fsGoLSfT+/3xQmapOmPB+DHb31lQYLwNzzAb
gew1FYQm4W44hZB8rencrNZ0tBvoAQBAQXthBAGA+wAA6BhuveGGGxpHwcBR
cJg3BP8fFNB6VlF4MI2zix0FGBN6iK8FUmk0692NMnfnVwDHE57wBA+ucxlA
sBnAoitLGri++GBJeOArRVTm+YxmSivhbx7XPKGDjI7pniIjZdhs7Y0yNGnL
Q/HE89KBO1JMWUAKHcGyu4yG2UXBN+YijBdqoRgZqoPqMdyYeEbMpM78OKvJ
Dr85hmYWUfA5iAZisoZuw1I6abQOl4PFWmFBMRTEvIAFMzz4Amgy3MBUfIHO
iy94mMJuNACo8HBBhVkjUMHNBCo01CZerVuFPcVjBSjwOChjYgllABwyochD
QxZoDkEAZASq7Q5uF5KHvMXtAgJWMFy2zlw45JTz0Dqr2jkbYJzBsBIANG7C
HsQuOJab4M/3bS9N0bp19zZ0Jm3ZrXBM4nMR9oX8WCJ3qIwyVMBRk5cC0Bec
c0wxSori4ujj5DNiNnpjG5WsSNv95oiU6RbiVDA0sgkzQbuvOfaGhxZ9GxbE
GLdASMyYAQqjBrcxUcTai1sIEYBUUCduoVmAAl9H3EIz4EGBhccDFiahgIWE
EdBLLlUysQkxES0AjOQIwAqwWPCnmwATTcC4aKmRti4sLLhSp6y/LUu0AcTg
HTHhF2KM0LnusDRUnRSaw7vDvVD4oWkX82v8bh7fQcxivHzQ81rKJ1l3V0on
AS05I2ldCP1nRFBjHBLrjeNlwPyt2VFAgzXAz0Mi9BwJAQB4AkmaD7a8bdu2
pE4pCoKPDRXhwzBoaDf+CwOqKTdYIz+poMWAguAxOpA2zSK0g4sHA6DeDLDY
hddhF5ogdgGTkV3AuMDC+4AFkAEWBh+wMLNz8QIXt0QGYwyN0AK4SbgCsYY0
u5DLt7rl40FYGqapzHRAAp2wDvj4JK3dskJ8CnMPCpkWCjF27coUMZ2Mu7wU
ADEsN3EXbNikWpgjw+aW6fCuNtPtcLosBXlmJkzkyJ/fGD8Mq4pxwY+i8SmX
zxDSOkK2uyNDj5AAswKkgAMGRTDc6CdDbcOV2XYHUvHwcqQT9BvDwPXQEMOK
yTeDMgAeW2nKcAqUg750QPIJ3hIDSMhJjILDIEaBGWgBdxWjxHCtAEJrAQjX
ARAAJoCQbkYvbXrtGGn2uuILIgwjuCQBk3gQ2UTAgk6CS7CH2YFocOhQJeCA
aZ2ywFY3Q0iZb0w7E2V54kxpuCpnZnZsUVZzLfu4LXKTsA5OckQ+Ygta6clx
L/Gke1fggBexqnJPcGTdMxlW9IE6AHfMLz4b1h4yZxiYuNqMYtHEm7g1eSaY
qVnUgZPBqDJCH/3oRx0aRvI0B7zy36DAxSgFB4XACPeFOkilZJjgf1EKCTs1
pWBDRClx1YWm8z/sB1pgB6GF+xBAAVVXXXWVNSvBJUKFNM7PfOYznspJgJjn
M7miXzwPxsFj4R6Yaf6nD5dddllwM7a6DQIqMDdQQxNquPRlMO/JjNQER7VJ
cWP5JwtToPhtdnZpg4x80j4Vgkr77ba4ZsNtgJtBlzeCZ2K+iEfWRpk5bErm
8QM8c3pIuI+ZDozAiMMGjAB7BhIydrrNQnk2Yg18QPSWeNR2gDECD+6VGHPw
VDmqYg6uFnPw6Zo5gKmYQ5FlYIypAQf4K+AA/GDWoABMFnjFDzHdSMyxw6F4
6qmn+jB94hOfmHzxi1+cfOpTn3JY0gzcIW7DY00oA0+V2OKywb6AIORr096F
PHIr1sOUtTbvazHYzQiE008/fRy4o5NNl16b1/KPZi/63ynjCQEJ29cSRMli
9KTEcxMWXIvhTHwHTRE6wa2ChR2+3MB0HaygwnJQIUymBzio2Foz3ovXXntt
Mqk7vY0YnY1IAokyIDjFzhPzSHDIX8MpUdzVm4mIeRwDzKCi0PgKjAgDLGKo
l5BQ1hoMmBHApEA5yo7+TtGwz0mJ7t5yyy2Tr371q5PPfe5zjgpMjqYz3Iv7
a1qHz87MnqUQ2otoUVoTWZthgPuFNCMMDPeLgRM6JsTdjwEjP/Ahd2MifHUA
sKVLBXWsS1sAlYbE1zlTwnFKwFlQ8qdcT/e8DBJzGRLYRrKgiaJzDZDHGZcL
ypjnTIIVc83SY9NqMWk2cWUJnYVXGZbIEAwLHoOJbWcXEIMMCDiMRtJorBwN
AZ8KzBEK61t3ooFKc4iLoHmt2qMfPJlOmZVwQDT7y/STfn7961+f/N///Z/j
4rOf/azvdgA/fBQ8KlsQHPJY8C9c4IQxPTYuMLyD+vmysgIgFMI1VXJAhIT/
ko2c57zyHf3ryQEGc1MeWDNRzQtPCqVGDLjOglf8IaWvyrt0tSgY2OkYIADP
vlAcDIaCPgBm/CgcTQYZvSMT20xCNo67gK4v08aFJyhEgXJ0E6PLcMANOAPm
Hm6Hr4YMzGjirIo3cXTJ56a1tF5gQMVoGQOJEVPkVbFPsYOSMXBAZahgFK2b
0gIM2vnnn28jBhpSfAWgwQrf+MY3Jv/zP/8z+dKXvuSuw8c+9jE3XdgLRh54
AzBmNzUiACPJJsRxIV+kSgRN+TRCg/Vpuenf5pDBsNiEFeYIhrZrFDrBrfv7
eyk4zWNhIwYfdw2RhuBWGfsUCd3hIOZzTAi5BvHLkYT8giO5/IUvfCGPvZse
sNJHAKgskmd6gAMAL2cHYMTYj5DLsKDAOaE5xqGKeRAAYARgCwD4TasQpNa6
+I1Q8WoUiKW10BYtVjhf+WgMGtdBeSaJQcAAjAdGsAr/+7//61i47bbbHAuf
/vSnHQtadKFHYCpigdkHWACXTV6aJey6Dgby3qm4j/EzBnfcPmFhoZk6DCno
mZYgy9fjAj7uku7XG9VKCegpP4AoDE3JCeUu8RDRSvEs4SNFi4/25UYWdLiI
bz4Ey8mhVNjcdG9sE0ae5paIYOlGzIBLiBuHNb7pppuMkzroaC4osw4xhMwF
oIAhAIxSb7WazYji3gAU/idOgpYqaA4TKKMZ7CqbGfEwetpPRi8AFqPNhObW
W291dMAY2A1TCVrt74N7MYZQQk9BCboBSugLE3rQAWPU6LB++ECnRdCtgked
usybJcnW4eKZRtmJ+N8pV1A7in3EhStSTYFtzjMMK74+Q4kPiYDXxKq6WDim
LFaKl2WwGQGkLYfSxnz5xhtvdFJi3euOMAV+OhbZcLYNJhsiJ+eOgWPiGJfj
LItBa7BfGntaBEqhM2U6KHMBG0+oTYu9EAZkoV0BPMdYfeALA4ks+BjgxaAw
9LgQX/va1xwaEAavQSbcgnmothDijeAP0dkIC7YVyQ2DtSMcULBGc0Mv+KVK
Sfydo9Wd+inPTxD4uv+c7wtCreZaDHkNxCllRbvBjknwcH5npJEjDQKnPZGq
YRceKbB3tE/HSBcGHwAJbZV3iYbKuzSHzkkJjehbP5vFE0zr2YbL+tooAcQ6
MCxQcfrIKJllViBATAhMATsoDYK2KeN7I8ZQxj4+hPkVCSWHHCVcrm1x//Vf
/zXhC4cTs/LlL3/ZJyHMhCEdukPsM8bXQJAi9fzmcU2OJ4MS1A3dhfQAus1G
3GfwhKcBvNFXMuh5CR23d52JTgiqL28trq7zbXxP3hlJoHk7alrBYIwzixUH
ROGr7H2629H2w4bVC24DbLhcsfPokDJERiOraAYE0LeeRnQA2SNfJng49VAK
wUPMuQ2reT4dxDTHOgPmzSQOmNrUCLzQB8BQxiO/AQAt24hS4tYsH6iAGHqh
zW2gAbTI1Nx8881uakAIPcYhoUds0EUp4CIItI6r8GzUV5HwiBgz1Chf7yas
RAbNV/znzLSoUEunbF5LiTZzbl+YIfM7s+CygTItpWz3OQoCpTG4q3JHFNKS
u4rNGfSgJc3t7+p71Ag2KUjHbxAH+uTCMkAEB/m7b00NgSF05n3Ybuw8TUZt
sUIGp23YSCcZp5uBQ+YCb3G0RMAFwPI7Wh+5pdo9Ap8Ak424Je6DJPzIvAKp
ID2ugxcBOaRBjAtTdPvtt7sp4n/gAgQBPjva4U5mYdjZuMqDwiANuBBnoA8u
5rEsBrh09qNkuNzSpZVOyYK80NKptpFyelLQgsgqa8k0DVTbQKwawhfMjUgB
853OPtoxSqvAD62VG4vkgxvrM9wKNm2GDTaXaJhgw0eAnBxbDAMuA0YMQ7AZ
hkFn0cv//u//dnY3oc9xsxYNHBYAOecYdqCbPvsElqJNUnYS48gcAzuJL6U8
+Vk0E/cyQgGamyJF3lclBIwNTQY7UM5XvvIVd2OYC0Fp/MZAxQUgNAUDpagd
bcDbVsZujR1l4x45NUklPzMZpuZLs6mG13Ieb6eWScoEStNecr4YTNZD0Bpa
GlC+ZLdIwN0N53k0VFteaSgCkgccQ2a4QISMmBJguCoCSnPIo9x9IxArKGHn
ol8Mw5Fsd2fYBz0299IMVgdGzYUubUxjn9HitWiolHoCSpiNaY8gI7cR+2j/
Otex9CAU8XqsjADDKIqCm4PRohegGG+N+JqMFj3FaGkZkWeBNtCizP4aRXl/
Yi4D0skPfW4C0RemBLRmEpw2de1ww4S/ibozJuiClqnUGsP0qo3JgrUiZScd
tiS/BB8E3wN/hAbKMa6CbHKQnbJ7MHO08zg6ecEFFxTcaNaJvyTfiQT9OuoO
/cDb69EP0kefCa5spanDAqDWAbSjgKc2YWiDkiOVCWvgGIDd5p6OEVoEXpjR
rcc+sUpEk91XfoMncBOrj9Bi8IMF09ya8WflRhYsLiri8CAF2gDOGZaYWanE
6MxMHjo5MLVeZT9ABs9NaxmImTNRGYqLpOhqWiCTfmNGQKeWtrTEyfjkFJsl
G4Mc8DvMI72ABb9AtQr6gnUySwBKSVNrQTTIeehs3cLepbUXXtvrlgTkII9Z
y3cKzqOPyBamF+NgBdBj8tDmQY/dmZYCef4bFES1yLs5wTWWfsiuASjZNfqq
PEll2iqtmpbxm/hQ3AM+i4liLQhkpVROODSjyVpnGDFevvHGG9dMz0EUkwB6
C89i10AfDAYHM27KagE9sxAFETCqvkvLd35lHH02eTW9kTj7wnz5Fq+ECbde
LPUjK8Y7p2t2fDSlbaH7OSd41WSycOWVV6Y44h6HJQ4RTi7Nk4NUx/mAFtDV
VFjwYgZWQ2vo6koGSKb99PI+xz/4hEcZ1/VWBNFWZAz7o8mER5gAf/7zn3d5
W0O3IdxRQVRzkQtcYKrNG2ZNJk1LkjHwH8tVCFizqCnWxoLt6CeSBEgqD6Uy
Z3RATpJm8XwG5wgzx/uaxUMIkDMgpp04cyg7/ZkFJvNHxwVQlX17doLWf0/t
25pEtDwZw8EuW5FSics9bvOwM4gRnRELR5uHKJRHSuRLe37MM1iyLubsqcP9
c+iG6jjIhYpBRAWU+c2Q6bWcwgLM2gIzr6XTHPAba4IjQ4gi8PodoTAWbwAX
JgPLhTUzX36A0OfRiSF/DYGbu+bmSaEktTHUIqRWt7B22punBcdYhSfCro+z
Yu0t+I2ZDF2L1fRUhg0vCSsYI83MFaVDmv5zPZ/lGfAmxpppC9DaBNTCAmRZ
VwgLi6TUsz+jeU5667+6BrImt75MyJTstrcsSyNcmAcWQgAIBaKQ0WSiq4UW
dFZ5INaxVZv4LNgMMQdDk9tPQZZYXESeWQhZpn1vc45DxpSXRYaGxxqHvrrv
PMBCRiK8nY5FkkpQok2SnX3WnN5m5FwgY8KgUOhpR8Fh6+b0ohKlqU0okFQu
DmZTM1FtD4XFVFKshmTO5+iwHWZTYQO0RwlksRKgKh7CbGhSNKHAEM3CzeS3
ItzcizYBbVSGEYEWZsEQF8i0G2oSDh0lNsIL/JerCdWLH+8xGQG4TIgf7ydE
jzhc5O/td5ywZYcWIE08XIiIfGkIThtvZGCRnDINcG1VBSAXW1iya/O20n20
1J1AFWJAueTYKQgK6AAbjpAAKHwGIHZxmHKNjirLs3F2QMMhxo1WURhChTy5
jk7gHuAWoA1Ag7X3rQzUkJdHnl9+kTe9zwTzmsyu1vTq9XZA1lPrrgA28mFd
WRQVprcAUaU3Q3VR5z4F0vFQUQYASw8xwVzH52gDNkzlRNTrerUt7n+1IVia
gtGrAXtmRJMW4/tKYfTtZnlWAmY+DwB4i16X8p3yTHRmVDWt5h/p2GKo1XCG
DKPKa/g/MtoIWUYbblIeJU6sStlkr3DVfi+YMcl7c9JGdHDJFB0fRaWFNDGB
kWAhYVfaTJs0+w3GfS1+RfTMdGONThq03mqw6nMyuigjRkDxAVCJp4xyMrtt
we8IdhkWJLu1b04uSI4Wno5wH604yaoruAdyhU7osq9CIddHSoVEYmFVLdfU
tUVBMU6KodUMhM2wmiPcwqMhfJb5l2IlyIBnoGH0lcGEYEQss5BsAwLm0hLy
aKwJEr7V/e9/f7f0oahQmQZn5KaDd+YdGs30oBdlKzo5V/VcUIBb7PsV7MF7
oL93lJO5NjXQWs1vQAKjgdRk8uEPmXx4RTVuMDaqeEUPuZd9dsUgvWgckbuR
9k8D21BaqI4SNynhbEfHICG5GVB2tArIXkzOXFRWGljUiEjG2PWxML41o89o
49NxTe2j8TyehVwMmdsLhluaZURMI+UZ0EB5BuirvAH5I7FYhMqA9BRpLeRc
k3Bd+xihAl3VBQaSdCbXP/YwAckyOKqoDZ9lwg1Jcy3PRVUYWNrKYGqBYT34
2mA4RhN+55a4PysD4DcnVi1MIdxJu35mgvAb01sLTUiwDQcWlmS7eyT4rHeK
TinGksqnHQuBe/YjPaHl9IZhZFqVNxu4VJGwvAnIQt4EpKNibiofiE+kMBC/
7f9Vg/KSEcKCeS55andkSalRDRV5vTGKLZYGMYK4VEdeSQ/Umw7OeRHWJhZB
WgLZgTVbM7wwFvBgyPkb+Gm4aSSNRUBK7sT1tyHeSkuGgH3klSouKqGl2unA
eKuYghwNKVpM7OPhOBF4tSq8K+rmM5GiY+ln3CT0JWJcNb7xcKHjGETi2eCc
IAad5vM8i9cxU9hddVze/CycQwJTnM+vIDwSxoTzvPN0HPi642k8Yw3YV5ru
4W6LTdjz1lPGpC69p9CU/5fckPu6ErFLBssDn9IdTeOYKvG+3BDwITcEapIb
wjBqmpZrgBQg1sXS7NpVa8eSTePHX/iCR/THuR/FJqg6XwzGayVQwOc13kNB
lBnG7z4FEPQHXvfySF/2YwpIBJWln8jvQAkIABVgApyAGS4YngT9xQbxLNpD
sE3BdTJ1R/R+4DWpW28kwqAoyqBoxcC14t7FNNUOjMqXymnRTDRWjQHhoWB5
b9luuiPmV2nrGIaIVe9xr9EIoiugX/NCgsRK4Oc1ruNe3B+rABTkvJmJtl6y
/LlljVYwTKo71JSMpzETbpCEYpT9+23xY1xzEng7ufZZN/zYpvmezMkcLBOw
XEHWqQEzq5Digv88z4mZodRuAW0g0VQTP0HUpU1y8nWYSwnX4F9rA8J0rSP1
lj67z6px8hJYJO8q1EYrLr2mpHFlLeoH7eYa6WetJ2zyaaOCMA9h+ygP5GJV
i9OiFH4GDQJN/A86NSGLbiwCYm4ht9yubeaDbnBv/nOl8ZeaOZdG7Ri5TlFw
7lxvS/SFokOmcv8qao+W8Hq0H3xOdiIWxo9RkVojsBGgH5+IYB2BOzQL28Dr
uP88B/mgrUyc8QTislXfkmfUirPPPhu85pXwpb179zoOzj333FzhpJV7FE1G
xz96elAL3z40PzUexbm/29RQrFm/SCdhne96Q/AfLwbQ0FbNUxlP8AE2ADYs
IC8IgpQXhOMsLwg8oDhascBu8rdqvQr0dZIgyoNxkpGpS+SCIWXLKfoEwLmn
Cg9Gw9QPfJ/Zkusy55aBzvNAVWexh6bCnrv9mbAfbDhrnDE6EbrgjQnKnNe6
a0uOe9IC+zl08zDvHQAcwr6cJYoatsB8AN7MbijMDKqVUpCP8PC/ew608Gtl
B+LJJzH8AuLxeoR4lplBPCshLN5iD/gcI47nhA2J5pFRg7YUDUVaG6HezK+z
c4b9Cvfnc2YBmmGG/eWXX75cWYPOJu8M+zd2Sd8/EgpErObvnJbUv8pyjb93
gSsMs0GcPTwRmlTPdAkM0j3tnZdXhHcswALAPvCpLrcUoK/KDITK53CW+0qV
8h73kHgj+BGtCt6s1w6lhEP7rgMJ6a1PCUA0/w0z+uk05ge/Ao3HT1EsWEFH
XMfaryFZdy5XeszzH32PaI17RnYFnag/a9ONLb7ae1bJgsBlqc9wiaQv2PMb
VRDMY3wGmDPJrWEOubP4x8RXUOdanoEKYfiw8Lhn0RNEVJuEeq6SxQEqrjUM
wZVXXimwG+qKK5M5vuP6fGd6y8M4XkMpxzKb+hj0zkLOV2wEP5BXHK/1ty9y
rwYiBSP0g7bCQQoKMqNTNEdeDYQnrwYoyKuRh6HFGWAgjMcihsJ43DFCpIXn
x8qDcdEHyAjfWloQvpVhOUvfVIEr4NyZ3mG+1esI7yw70ekUFka8haXLTO0d
0yyW2M0cQ57ZnMHnvyFXD53Y5/wDtSdj9D3Eb2rBlBE5LhTo4jffEDCuR3Uu
UwfhIu9ZYRuIGUSTXSNEE0vXeiMGAsbiev7GLcKNivErLWfT8Y1Qba7d6qMf
/eglc5W8Cn1KBB0usiQDKzK/MqsaapS1JUAzy495WsD4tBzU2Al9sQB8S9+y
kE7a8MNIE9DdIDDdA3iABMDW012stqa7iELeDGQsbwbylTfDmMub4fPwFUM+
q2KnwE4BLsCuSjyxzLeMDO2KQI/bFAB6LBO3AeAT0LdloOOCS3M1xrym1Pe4
7Y6GMJ8d0NUhb1Vob9Mb0Lq79OVT0X+BuQfg0i7HmQbtYN8XTwceJr+fw1eF
PyBsyJ3XIOtaFXSEleaugr6iOcxdgT6pQII+AXhl23MdMOdzqBEzASKltT2T
+vbBP5a2xjjjDYfU3VUb7yVr45Ldf+GUU/wUifHrX//6hbPOOosTBAaAy+TB
gjP+ZkrN4afbAO3AArY5q/o8Y+1yFEhXOTqL++Mu8dcrTzls1CmUlhye+7vD
Q4pr3PKqejz1dJdyr0rvksMDeQuPYLnGY60jdUFqdETVIZhZxFLgui+QFR8r
1YH7SD8wLtIP9DaGpzYyDHg4A9RkqxfE3uGdVkgbNHMhN4i7D1EFUG8NnXMN
GZZZTf4eck2blUQKEn0cHIy0WGSIHKAGg3RCHykGJ7kqAH8mslgHoK6sNv6W
mkR/SBPYWi2YqKIWuPJRLfB1cO15T8v/WJo4sWd48vqyNRUDeNTM7BOpBpJi
KJWDrJ0R3CduqlEOM+qjYjHEhShqOMwFTElhG9uX4zuhHBjHU7I5yxvEd/Vj
sQkbrn0ekM+t7N3FEIJAJc/lgqZ8FEvEDXNM92x3oegGSIPN43wZ0eRjV5wh
CBIhFiVeiYhVp0aZfXKh8lkindM7pDV1uQ5QDp2o9q+KAnKtqp6IuaQxqsCg
Mz5M4waos2F/vRlMrTimMttdZbYXJw2u4Gn0Cp2lZzxZJsacaHOQiBa2xUHk
P7cyblaaLR3HSwojY21GYgDMB+jCAOAbHLEQwJ9v1ENLzbIQmB5UAwvD39HZ
QoWkLjECyrQgqItB39yogefrn+hmBiHyYbwybenTei7SQweiPVxPX5A0gKr1
RTuJGEwGDrHyP9dpyu1VYD3tLukLPvX555+/ONWXVnri9STCQT6lXsVTOoqz
kBUnVSeYFE+sfO2fbWx47Yp0mxU5X/yXor4Xo0q+E5vWgzV6OmumTXwdFgFI
csjouRwyVQQL68euNqonEQ++6SuHhfRRHVW8iwcZCPeKyyJ5qU3cmxNPaOuL
APQZRDloO7Ly5IlyZ6Tjzmb6SKCFUNIwK4/Kgaf/7OcoWyGEIeUxoaRsCd9X
4v3MajJAT+yD+FP4VZQsH+AVNXtdS/CN5HcpIiotQZPQFP6WIYqxI2mPTUHs
wbfeemuLEjVjn10zTqgd6sliRVxXpP8KH6+Xmx21hjRBnY3D+PZZmKw1g3RW
mw8xfgz7xULRwlYp0UtBczopj1lzOsU9suZ4UpAf+ba/a2M6i3HpAM+0g/LE
E0/0abbN/z13x4STwgOnuPrhDWIuwDy4pE/gWONez9QxMzhQcshCWltZJ9NC
dNQR1YOOOqKNt1hkTX5ViyWUKB4wEM0BHwpFceMOWVXpiJvuZwXKajWhmVlN
0nEWbVlQIG114IVRvapuiamhKfXoZzOUWurRXn+KH4DkP4eFJPK369fAdWm7
61KcFGGM9BtjRCyYmYRpjDXJHCffnTAA3APfrbCl7KuTqckZQq4wpkADXDTN
kkJEyv6zny2OWeuKdKIbIx6OD0h8S4vTiDYuTmtlaTPaQxwTuc3SHh3nwjAJ
AVxvDs3Q9cedNJ89GwiZkORgbmdrei5280drrcZXDbYcOM9rV02dLa+GnIrw
ktnToiycQLzAqnFKcLvGrQtoBFIwW98UHxkoSZNkKdheSXRywBRvUnIc7KOy
azp2MmpJXe6Z55NJwb1UbLfOcuIZOqJKJ4LFQjayIKhITPi7I6qiLOi4KKJV
QNXFyFnvJleqPW2d6WeoSgJqMOIOacrv90pqYz/d7NhNFDqILpteQzHTCrhB
doAmDAjQDlgyG7CC0OzytQmlu2s9ApsTvTfCW7IveGj2u+WPFoUZYnJsxqRd
ZcyG6oXqGODT7spYzUsR9PoAJODNPTeSlCpBM6rcB5c/1aZPaqKNg4bClaZz
nEnJ+nhSUpN3+8/5vkW6ksVxz6mjVr7C0djadt2k7YBDf7IpKGdGcVZUCrxd
4qrG5nNCvNAIUAS6QHRWFIBb8bmQv1+cMS1Ia9OItv1LjbjXrINQcPBYedAG
sniWCfeP6sNrOlCP56P+fF4qRBSPNbo6aWU9VQIIbBkZuMj2lRIGddhZ+5Pk
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
Oq4wXL0xPe+oFM9fffXV3vxZoeew5GpNtU6PMuXTf57VF7A56A6eou3K2erj
dZUZ1kZAfkeOrwsPxkoF6A16qRU2k7jTetNqX1Mo53Gss7Hi9MAZAc0aVCgP
hqcJSIWxUJ0kPkvXaCp2Xuc21VvO0+7Etd56ovMjy15J1SLSgUMq5KZFyRj6
0MFLovJ4cBLX5dLG9lxOsL+2fL5O9o7lh6N/vV44RhaK9tI2nouskAOUBQWj
69oLxee09xMe4J5cC8JU5YexgInqRVtoOCoUVpWxUslT7exmvOgbz1IKJ22l
7bQJk8C9dcx0DM8AN+Cps5VrWs8Lp9l9GJWc4hBvb1LttK0dWkcptfAsn70U
ZBryZ6pzd8C5WJubUFWkgpOtIjZ9q6UgOKv8HeVy2SUaqYkat1BsKidLt77f
ab9zOWMG9lSVW2ZWe9RiMTQdV8DfXAsOGC/GUWdJh5CMF3/jq3MO6WYJ3W/x
XHI++crnicLkt5566qm+4zNlnB89Nkgt4V1oJWm9cAXqzfDTZKTB3zWXrxeW
iS77cccdV7bYAuN8vMHCZDJJ0aK9nuKD36kTMsABzQOZQmm9qhJ3cIYN8nld
dZtvaicYpLNpdSaMwhLZdx1y89aTKEal6hgMmNPSA6Unl33oY6uFU99yR2Ja
mj6rcHxk81gwXmfR8z4Pqo+mzlnVnQiUIqfUVB55XHFa+Z4O78y0ztRI6e2M
lcLzirNr6UH5QlAA0OR9KAcV5TncB+1AofgclCFvtqq8tA6tX+M0qf1B61G7
clHkrfM86DkeyVTRurdFE2Tt5eF9FQRRvor28cSzj9cLwSjkgRvGsxgXPsvY
Akp0AYbA4RTF037uEc1T3O+k1dyYkwN8lIkq/YIqM7XnrPq9hdqRgzLw6Q9m
AUzRhzoso7wg7ZvC02BjYsro29WhdhGpiryhSEpqCMegg6XkuG8pDI/uAVGa
rV289iivJjWkk62T/YFSd1aJn3gqcABcorbUS6kif1X4VOLzOuQO7EXuOhSA
S4E6t5AN4dGmuQPuZ8oMiYN4RsWkO0CkzWElhKxCbSonrIgM0074ngFQZikK
dPnlly9O6V0RGU9s6dK7IigLPfS+UNF7SavZ2r3uw+PxOD/q2LGNx/9H2rs8
W3Zcd3rb+9xHvQvvBwEULlAgniQAAqREiCBREAkQhEix+QSi2+0uhxwd4YFH
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
dK7lcG6R8xaTwMZC3qCjQ77ffffdOwk5F97Loy3q3GmICHLdbL+/fFfcBC9v
L3Hz2Nx5/zuZtvn0jmKBmfVah752K31vmhnXs/Vj2Lb/My2D+C+nk7DGqB7m
9jvf+U5Fj+nBaPxHEgXig1bFQWUWHYj561//+tPf/OY3YWwiUmhrWeVYX+na
a4oXYHSt15OwzUe0zF3LM1qam5jdpxqV+0jTU0ih8hAc5JQStNb52gSVoX02
XuPy3M4ItSVNDEkeAqbLnnvWuprZ7TQBVLyO2PNdNV3GSZtHmt3FIzAtfIat
URtSAv2/1w3J1AOmgySawaXhvsCE5cUZIBkbGgDjE+23r2O4iYwAHMsyJprw
u1Yc70tM4IEIRGCZGSNziLY3mZl7N4CuZ5qrC1tZFjWmTt/1jqTHSHfc8JDn
AMnpyXhewJsPgaqMG9Wkb0My1SFed8pgGv0QY4eEnjAWlTRFMKdz8Rm1Plo8
36MX7f9392RfMv0WM5i3k49ZORef3cGOsB8oj8QQBOWRakN/rYE87203Ru7J
NCLijM+K+xEYc0X+SLw0gqMdxXlmeWzXwPaMINlPNtxbzmvmhq0GyI/tjO4F
HM0BrnlaiNeV3taN7/EM3It1Yr7Y7lyDrYcYwgDQkLIeca91Tz7LaxkPOyl3
cNrnQ2WXZtZ2Y3tsDWmYpHe0ErmD5KaH+moVMgh5uVueSM2IlGOyiVXJFXDO
n5RH+MScDIZNTbHnT1JEEmAt/KqHKyD2+d1Y2fhufe12e71arEuTcu3Km46D
g7Ea33wm3mV4FRFrsgttBpEX/iGHxcSuoPhWUHogxub9qv1lSpDxgDRzlt9c
N1QXZ322L2LKQrSyr86Ew/phfuwCRVvkeojKNNJrntY1mqmRLEDyAZNdeqb3
9FKMje+YI4X82XIUOfQsj6rgXM02sCe2XZ9AG+eF7SSSILfSAWRkZG5VB6a+
8Vzc12KWBBfNtvriKioy36wFWz4XObOFMyKydqznrtbn0tvK/ie9sMLPvEiJ
jEywb+2Nh9oakVHU4Tn4LHOHKknppDWb9Ooim5TpyEuBaKylXzZyxumISd/E
r0/GaYBnRb54Jr3q5qLlvitrjOv7wmIrhNszp/3a9fugq33kslzT7FkRCm9s
RcfXz2RCjk59Ky7MKdIryxzpwWHLsLQ67bWZpRfkJ3+7FdiebC/5QHT2cS3E
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
O5UKNuQnz3HnB2N9uZSJazlnQD4dvGwsBvKOvkCeeGh+IsfsD1xUMxcueofP
IY/sCW5rG0ROAaZCswg8aiYK1ApR3yQrpB5KNyFt78dK6cHiBkAxX7awlYcQ
NPRSobRNaWQOGJTAYZ62rSGYR23allcbmzEr87MAyK7ML8YnHwQTKsGibTHW
3FhMEG5PdwMJHJaLNwCZ1/BjjTci/F0VP2yChChJHVrV9iO9Jtmjp7TecqiM
lL0mY+QDQaYxag7qhB5HPcxr2xquH07LWO4BQ0j9YiBjLISbyXFvDMRnnbpN
sIF9rydotcbbH9W3FrlbDRbCr0XW83vvvQdE3B8v/94dpCgXcgkD6Bd9yxq7
d4MEC1p2+aO0KqQ9M+uf6yIJpvHsy8cySVgrE2gxe1Z/VFgUKLH74iNoLfO8
dyECUiOPQcqM3NQjAHv2cA8cvN6rUVuV1l4HlGELNiybnTgJpyg2AI/OFGeC
AxtJGqpESwEBMsDLjcc0uRGtt9YHYvKATqwBGjTABhQ4h+Z/LEDg/AIEnEqU
JcqQoRS9U6ajQGq5DkNiOMhzZ5N4r3sjzJjJ3QX3tdjSKzVmBq+Vq7Qi1XjS
XViQCUYxrRFw9Dj3ZWas70OoEXKNBj07npu5nklhqF49VhoUJnGtGRStUL26
ODct81bWVESFXWEranYZD8JNNBp4YERWw4HPMyAxQKvK75gZwABNrxd7baG9
7SV2fSfRHQtoPhYibj6WJxnzbXP0TFt/zR2FssaAwJ/AYUJLj4lv/dhqumyK
Jo/R8UpaILr0T0zh5uvk1ohW3bR84tH+RFYlSUfIXaWHkJbYoiE2M2Jp9dKY
b9dmddp6pmpzlKNOOmzktke0RnAgSP7tb3/7VIyD25ImrTMgV95fv379JIHD
wjP1UgKHSKy6MkBCQRtsjJrJ9aU7CM++LAvNd4TNEPMaHKD7ch79LicTuyUn
ZRGSQCDQi3dLlHKnGZ4wRddjcBO8Sb7VNSW2ZP887pjguBIeaBPWQ9wACJWk
/AsLfh4PXHfzLRmUkAnSEyvzwAGJzdGUbJ8H5tx2TFjfWFU202v1rjFXYyq+
WeyGcXLByTIFZhNzwRx1p9NBIpK31OTxFTMhTy4TgmsAoUFD0O237s8PTnmV
tRKYU+P2tpCR/X0kqjW3QojYVdFoXNyIjux0Bh1syQI0SNugwKP25Vpgsox3
cy/eZ2GMJEm/l/1bFqiwQdbMhTFE2syFw23QqwZI+V41T4jkPxUCYCEgY5DU
UFeSiGAFJ2NhHIyHZ+R1LArRgesIUTpFEZalPxXgeuZUcrroYN4UYzNvigMN
10f4s6dTyqBdbiY2NRtAc5PxM2aUE56PRbZuMhNqwlmrGPNibaAtZHEUn0eo
rNRptsGmXQ6Za/LWMKMyyGhr56xRc8DEhVy+b25jI66ZAhYiXlGUiE6ExqYz
LzFhHjCBS+dgBScMMWFkY3nnnXduJkx4q+iGf271jAtMmDYU93e4aHHyTxo6
hN/qoXjtM72r7Bj6ssTKswfSh1Rx6Mr9iZV8YUHnkZZCcx7NbIXp2U5ZyJGF
QmjObeZd7ktyQsg0RvQl6jvyqNN8R6HIbPOabUQjhqHvo+w0VHz3/w4Rhx1o
8OVTaDD2FkErq8BG1gqjDWh0nplnZw7wYxDBgxOYbBCKCn7xi198+utf/zqS
C8kM4TMYVSZHZW4oj2k5sK/ycY6ytTAyc4yh7HkFFD7TAtd7EHet9UUipzvs
nRBShv1U+VJPFuCQ+6BlzgDZLfbRuzAviKAFapY5K+ooG0AB5c4Ru7GNzFHV
eK0n9zNVbGOD2CwfetZuutxqVy0Jeo1hNf6aVbPB4GYD7BC36bluPWUHEqqS
W8gygjQxDDuEuUkZgo1S+F1IwDXJkIUGVK3RgXTE7U2PkmNvRIbRdjAVimGh
D2wY7qnall/sIRY++z5yuQXX5juYzCI1m8VoVUeG6aDfe8FsuMl0pZMAu8SI
+nUZhBlW+dRBI83IuYO8/e97P+4rXW3pTrJt1i5ql1YOF7CwadaCVQOedxpE
bOHhIFdyoKstnDMegTRNrWFg9vCy0VqfxRp1Php7Df/v/Cw3XoDEoaRifFpS
6lZwEZSheJZub8Hiq58wDfbIzMeRfAxhV+0CCxbYY9I+t5JTahou10b7cX6W
8RgNKHVGTnHiPhZ12GTb/BT9JqY+Ih32R0LIVozdKYy9TbSG2HQ2ilr+uQcl
Xl1FibHDm83KRl+SDGRysPC8pJvhYCVKBxqQLyh7PH1bYI7nJ7kgfEaPiIUg
rBnXzkVVzo99LiKEHpue7XZ+1b+k8Bl6OBmcSXsQoZ3gXlnUVmoiSE5hqrB6
ybpFsxbHLl5Ds6KOCjnPieO7adVcJ+cxoUPVmc4RctCK3cqYi4VVLf7PxKLZ
MsFaDpVrdlflOg8WkPe5sJNupfKajVAm4TCU7knMR3YeYRNyGx0+pgADTXwG
WXYPcmuhyCFie/OT4XHQEwf4nrIqDpRh1TyH5xa8z2s4wE/TmRBpLsn0M4Wa
sznr2kNHprfIHNNoVw5HLglLxPZmuLHDuoFwOg6dOavjY8zk+VXDxuo+Jr/6
7bjkw704iSEzdN1dfM8GyXpxcjxzjfKk9XWc5o4EVZUc9gppC8vqSWjFVKg5
TQb6c1xhDQvE1H7sP+rtc9t/aH1CDS8usOCviqz9rw0twIKoA2zcKfihwiZp
bqUGB7c1XTzUjpYoxxZE7yxwsM+tJC+Q9X1sA1ScafY541W2CvOWrHvNAW4P
x9Kd6omwUsBD9ZiGV63GDukHvUFcz0+rh46EBlOFg02Gg6n2Z3trkfyRXUns
m9GVZHiBZ5SSGfcQDWlI+8N4oPqYll4aEFQmYUQAFVQqM1+44FABmWrPnCWb
pbSDUecKyiSduQFwdjHtymu6tifWMEDEtNmyc15YsxS6ye0xqve6u9ZDNRle
teKFhzGDiedHBqy1yi0Tra2Uy5/jAbIhPRNrVr6zaZEkvoqIIEKgDiUaNXTy
UGjhfVm2LCfqjm2isTA6HZKxcBjg/Fz82XxHsZoEnJB6npiv2MTRDhX6acAj
dgu3FRQ4YCBRGRy4LjOGtrGHnsEws6lTV4Aq/E+dAgd+V3kxBLNTcjEsa9kC
A10gxgCzQW2uwdCTm2uKesyyCsiIhsGyxvtgEaTo1FIXe+gv9zVw6DKaLgHi
0c7jkytXWQ1va9cBXTqi/RrhiFl3LdBcj5sHDSOcanGiZskuMGK6L24LRPAY
Y4ThS1/6Umy9cVYZ5nPPPYdmb+SPZjDxc3qhYsOPt2/9VZmAsA+aM+lGw4Rw
JtW+OuduImZMFhsOqc+2Z5HwWtX6ympD8owHiMY+f5JWl5wwlNBQxMsO2JXH
yr1MLzdmpt9KhxLroincilWnSJ0s1tt4dG41AaeqJj0j9cLq4y5iuRhuCQVv
d87js/qRxsiCHePI32MqIHRiWuwzpZXAZ/gbyGC65GFnqkxEag79rvKZGq00
A/RjO5S1YrzRv6TKLzDwRCugQ3TP4k7i8svq+Gd6BtJoOEh4YnJ+AosevLEP
qEUSuyjymXI2H5/jcZgOydFRObWh0POdvM+sX6v7GZ8FhBaEMF0sKQiEyjdZ
l82SYxpr9eIsFUuGbh/tiJzK0uyITRxBKrnZ6E/iwMAhR35BLstt2Cw8Oq+x
yRgmtwWhhAmcNHgu7ZrAd4QLNuUIF0pNg4tNc3WNUIEONh8JwQdvc+Mons4m
r541xvizviSuxXBQQzr5PM+hnmQVMEeqlxAcneLRaqeQOpnnTnXA4Xftt/Je
O7njVT5ctHQC1msTSNT2pQ58+pRGmzCjRFg94VDqFsRRLLSOKSOvwVq1BIir
hA1ijsZQA+CgdI7z+O6770aooWYVbYgl9ASk5xfosJKb1HusRJF17Rzzdjws
D4oqRpo4tiNJCDPSx3F2DRqyupZ2cvQeaS7wvoXbqGyknKNvJrZby1E1UYpj
t62tLGWRaRcJNpFKug2OkIyV14dg2KKJgXZjbWJwVlz4WseFe/Ec5RgDO9cY
A3OAF435gOwve5GIMYAZ/C4RIKYV68RJi63EXDBO4NeaUKP1loSYPJEL2k22
HzFCs2E0YQsAXGjtzHlkWegvt/DDWTGDfRpcsTUHINsSjCSH76Jz4fRyL8Uf
oWMsiVhrPgZycl0+w/sMgSdnVuQIyxUAstDJ9s2T+1g8hq5k0jl4FOk6CkzU
au8Hwy+yq/JCHhg2FoE2PoOArhkWCNxB2KnPxVCyy4mDBUKCUYNg216a6zMc
HkfOV6YUKGCT8T03th2DhQqbiCIoPJpQ4TSz6k35VqvipVOpS9YM5JQlZlVf
DK+3XM0uY2NAOtMNcn2mh+mzipshGsDxeG9CkeebZSYJtuCFeJ2xuqeNaWUC
nDgeVp+ybStqHJL/P9zzl/R+GP7kdggnl9XysCvcyO6htd4c0NmRfa7rlXys
TrREo5GxDVePMYkPP/wwRHRsGsIilc8HNXxNQ9roeIq/PrvAEF4mZJ0xxMYp
NxOG3PHWVncqXpxriQ5wptWA3YUhDHuXyyk3euM1RBkMQSfKTTdmMemiNNEW
ueGYYZ8SdSNTZ6SBk5cuKw57umFyzU4Zy6KLuYe72k21/D8C2HXnZvCo2HFj
gR3joXeXm4ntaT68kQfm17llDnC97XI5YWdgd4C1YJFc7syJDU7ss8KasG9z
0btrkD2j+9xPbBxEzz1nzmkRwfMrGFLpoM7dDT+2LUmn851RiluNtgZKugaJ
yuYp5z3r8xOQVI/h9PiiImLstKt4WhAMvHNPS6d4D/GQConvSyzBVDDGmtBF
SObpeCZe555ML9dgV7LUxiNACY4Mo82R49hobY4PLDtigfgz7rGEV5tjm0B9
knObQsz5LiLC8vM9xAkxYRtwZEE8MvU/88x7HEPc4nyeMY1qmufMRkfsGpqJ
vrAohFDTZ0cP0zKmN/FTvl8TOzU6+M5aAUQmrkXKTdJNFX8xbVyP79STYDUT
1nlAa6E112R8/sto4rO408t1DuOSj/RMp7GdO1LJ7e2Tl1laxmhUZtppMxv4
EXlrqZg7VwM0uvzkppLEnRbHdOi61TrGGslgL8IgNUaEmJAf/ehHtxOCLHxU
GUFSEmzHjRtb3Hj0FvqG4aLv0EucaxFAzrkcj9BpCKmuol24oWtK+4PetbUH
36aTgQTRYTT2e+quOU5m2WZ9mNOpEG7GwkaVUZbNyffBnJWisXJv+6iJHMnS
aAGJby7i0zlGnckNx3Mvd0G213rx2HPZ4ARbli1P0MFZXvNMgazMjg3GeVq7
dICuEoFKWYdTgP3EquQY/3iKGS2Q7KXSshctTJpvTDkFICp0cI0ldDx1JtOj
0ad0q2aP7dH9Iwa73EgJSmpV6/ToooqCuUK1WxXL80lrh2QyDu5hBRzSbF8L
7mPaq7nAlbfkGzFOmYPsqc09gA4k2ApLpG9sKKLxAbywpqhs9CBqm2tpwWYn
eO5/ak/C7KdCbghiGTPg1IFc8R67ALngJIMM2KuDebFjG/KHLHJiEzZMXbWy
q0VpQ971qDCuwQAZ+x7n3CfjQvqpjI6oybjFPl8Vw2CKeSRE3uXimoiBjG6m
wK9BRs2PuthFzH9ObYaNJoLTUbM41pjT5PSw3xkio9NljcQj4wUIkcDi/KJJ
TAYNbthOc6dAo6ZB8akc12BHChhraWRT7+h4Y0ql10crnqznFlbIoslis0Jk
Up+2aPLkTawL5BiZZh9wVAJNsmeFo8uuHsHoLSZ4lzdLUkf+LoIgmOxLgUJt
ClzcSm5btgK34m9UNkNBxjhVsSVMgrQFDao95e7V8/PcEaXIiyvsv7Z55+ZG
GHCknn5fOVUPjEqRlmh0XtnUtPXo7c5BtrNGiI4s4t88h34Ing21s5YCJdsn
9+JZgRONtRQPKuq2jHR64FRZy2iM6LgbIUQfa+NKudzQBCkXTc61sDgyvAtN
kGdMkE3UslzuhKfZCGEoIjXDNCzWsunKo9QTQUKV5u16qBdc2LVVu5PXmEpU
EKvI/nL3atfKKcE0MKbeOfJaPApDzbaLDVtYCVYE5W1ilhx9Yx4tnzHIwIbD
XawrxqZsyf7YBHI/t3Beab1z1uAJuT17E8GQ0h0Tgqfi6cwPZF8iiGAH+CN+
IFycgZgNZpmhWPSun1APQuuxVvHj0in8GHOmUAs6rspl69ee6GER1nuf7wpR
NHXFSIyd4ky/zUyHY6PSmtBYLQ5ptv23BiH2WivfO6j6urbjzXlTzCKPxRZj
1uy7aHxzrMFuCXDNgNzkXrC1VGa60OtJ11KFuFbLyNnGQFq3ROLjTrfb8+OP
P17FEef1s5/97MnU+QHBkdsCwfEKYFxfYAkkHmtY0rvR1xbCV2PUbBEsAc7P
yBpeFVulouh34EiZKVqCX9jp0eIcJRlXNDsHR67FpXflT7ETvR1bg51rCaAN
9Uy6N5BjoGAsXZY1tNFgbtAYc8eTYvfKQum/uvp7cOTd7sjKxcTgnA03R0eW
TXzZvpglOO8Yrw5DfmfcfAd9zdh5Fp1aa7lT4i33sGwPDBN3mXbJBuRmXjv2
6ODiMeUgXMOQzOVMn4vjBihgzzI6cj4EeDRRBBTusWV1fDHOo5omKIHRNGEs
t1qzU0XKYJvp2qPJwk9x3gpbNjjPwfhbDmfcU4YnlAPXl+aOMUnD2wCF4Zu5
a8a26Vloak5hLCFLMVompibKYMx7iAO2uNWlPLKY1iyTKoiPnfJjAR4Yrkg/
I8aoRVqQEC4LhjEMjNTcKh4p4HWkEOnDCAl2fgr1L8UiKQDaJIzK6nnrPJt2
qkHEpxeYws+casUDWRee3WCZeEnzVDslt5hjndjvmf6Q9WTdUceZj29sKHBQ
y+4qz67pFwlJemKkVXq1DLGzqNy/szcA6yAfDku3i84DZRJ5l8WMEEr8p3LR
6afSzOGQEIHIVljBEr6cQyFM4fvvv3+qtEUs+cY3vnFziyW3Pvjgg84/27Dk
4yIPFPNlLPlR/P9QUqhc1dEqPTa9y9MWU564jeLlNMdUIf0co4xi4H9xF6zZ
JrYMWPN2qQj4nc8WIJkqqFzem4TFfaS8VVnSPKGWXF0NoDApE+XqNcA+lDe+
JY6JmVu51T7Xs+3coaX1UNajcDfD5HInQlzzc3GvFT9XK9W9vGjfwO+MEwVn
jRZjBzySz6t8tyiP6flTGVhWpnHGZG3QYlyjzVWsD8BiIvMusc3NRcwQ2QUm
1klwH+SgTNFhwxYutcSWc7Hjdrm/4qgLrFzqbOlnsVVCAZbHKFfXAN6BMtWf
f9x3HG+jFngWngHi4bnRfbGm9p309MvO7M3sq63ye/0pjJWwcEyM1CLyciF4
TJD2ypjKiyXOpsJOYVFZSPU+z8B3+C7PlXklWCidXfL/cjJj4JwesJU4jcig
wWZmTAiDkyA5DScyIC46Bg9cm8yhJAqCilnnjdk1NR+7eiq/yawsBEgzQNMB
3ao+rvEf7vvIQgVmLxenDASPOQbGOSEiyMy/xVk5uJEJegIeKhmILI1YB7U8
58IizU+LxRSsZIAdNIQZs7PYWvgk2PL8La+p2ysTvogwGiuenSou8v+LXeOo
VnZt2RrQXULNVVryBZTkeAl3gY1wjJO4Th999FHYKA1n7vCZqXWobV2axtLA
vygTgx1zGnJ+UVaQT1BAkljRl7yFFXIOb3KYQmJtO1vUf3mmovjKzkYFos53
tKKtra0PT3nEUAszaqFML3/zFRBHd5junzGvSzeSmy538mTj8Lvs0xzEcCXJ
tMFjyLSRm1626F1VjHMNzRPyPV7EUIY4SpPL1zvhrjU/a44wdPxY/yfFg4X2
johrMSOMNDvFcmQ+Z3eNGV2oG46yfJ+Z4mk1+HI0qjkQayPNh3PQq9syltSx
L3h9F8R4MNe+5O9aP1nxBi024s2uTC8kvVNcvdCjLFIQ3s2MkR29ydjdgCd+
14wzEsKjcDpgg6KwXFVTwFG6PESQq2x6z97p8XiYMcaChJoYZasSJw11L/2H
4XmkFGjgc2wsvo9yYoS1bQiNQs6FHCG5xsD0jQFfBbJmxL6oTePD2d43xMZE
NcdK5eSseShcBTbFLdLUdgDbrFSpXRrUzExjORzwtlp99IlZkCfrRtyTmOVh
T1VL0bsGNJdjDbISzH1JbalslSPrW5MyALqjRQ5mKgVZEFMxvG15Bv+/eCqp
3Ohiq+TLj1ajGjuSumykwqnRiJx+qpFwRDTzZ03q6jVQF3p8RnfQ2n61ZmnT
qXAL1PzgBz+IRK4caWG0a1AjlO+AmpsBBxVq1ioP8Yk9m6Em8odpvhF/1QL1
z4TYoRHRTmgsLAs0GxoOLbarq7kNatbyvHgqCV5w+RQsEUoMUo+chWw2znke
yNmUuZqMIaIwOZsBIziLpeiQi2eNoqMmDJT1CP98mDCNIUAISTBSUeTKAkX0
NJ/BDVZpT98KN6wbU9YyvmI0SI8YkLoWrAdI+B2gAS4BpszhI2ODsJu1iakN
GiGjhFqBx5gQfY4BjE3up4wgKkPm1oYJiAAh8qOGJkyTaHKhcePmBNvBepnm
7YH5syHthjwlBc52i3iQO3x6bjkLrli2JF83k4ZgCG1gCZOBPmOQDP+w48gm
cOTROF6PIZZM2OdBlmXIZoseMUSWUxPvs6v4TjMjynSUBZ2R/um++DBrgepC
drkBF+OohfHK2hu9kLQBBdH6yMTUbgI6KjWSjUDiZYGjJts9Fl/WgaOR4pwh
vNkgUMfaBFFnDj/l5tWyb91JqoF4fpGcseb1qg6qIlUFRJkYlpahuSwJZuLo
X8PouSmFxSWHATcXeypKBozGXjgmBzcz9tzOHC5WoOyEahGfi69JvjoS3JfL
hw/sMCDifG83sQsi8MvvxgdXA6nmLl/4whdOUXyJDzwUurw2eT04uXbtWmDJ
VMMo57fKv/OdP5NwITK6Kgnu45/Ibs/W55SPiuL0j9yitvahgf4srYu8Q/md
WSjXKJNelNvc8MADdU73RZ+r5ySKYOOZeq6u4nW+TxDHZixsNBOaxiYvrbtx
mfYytTPSGkZGO/SIA0uT4vIpMMgMejtcWFPl8H47pofNZJc3Fj5XkXFtBAJ1
klO41opHfEpTfQBrvBCiJ+qG2TLubhoXs8WsMf2Cdl4iazHtaspn8rF4RALc
jCZj29GUQ1/UaFZQYMu1NsLNxDgYASE6XRWdZ3N3diWzIQ21Blw2J+SLU8jK
7zOPMT2wExHM8ci94xAtHpaRWOuOHimjOx6U/3EPh+Rq9UZ+04KCFxe4acmo
syU5CLq4GJDlOzHqsAmKnJcZkDqEeXWdmH/pUjglyehsdz5rbENzoPCPe+Mw
/6Gr2DB4arfaf9NSrS1ryByboi0CW6PUnNzPdc3PPFlsbRpyHJrYU4c5KBxf
qdShAP3Rqfyr1vl4jsLfi2HGWszJimTFn5tbMp7DRjBoH4uad8n/Ly6qiRLP
+Fo2b6shuX9nOpb2DAvO2IQNk84tGMwRFg981V0FDlzqTC9rWy+7qBCwKCQd
IaHo5R6rZIDcWDhY8/zxkC+88MLJNuJxcAOtyBpMNcUqkrZmykAyEAxR9mog
PHTbFD70CpqZkyu6yRwpww0ZEkyVBBKGFKyZPVrmCjFHNdXIRkeE8+HmH5N5
0XPsj0ZFUL5QprNsexaKsRnW4LsYL0QJd1Ez5X73jK0sQGMeisg5uTwHscoJ
DCoWXFzFAh0SrepUN9NUu1bf6DFX9oeHgcxO5IFLobKBJGsKLoCKa8UgYAKv
YRlwOmSNQU/QjxMjOhpMQBvZu9ycNSaesaAgXCdJH0cfE/Nk48qMA7i1JNXI
wWETpZmHcEdUTOAxGy40TDhcy8mq/Uiqw+nZkHEPncy7qb0ewkYDwR5kyl1C
ilOGgwqHcSIPjB1c5ZlYX+GhHLnO9XaD2gRjKIMJNTucwXADDwT29rWZNDdB
4VuNxDmL7zGhRYDLDASDA37gB+JNpJfR2aOJlWQFLBnlgnYs4yYWP3KibdO6
aR4loJZJqKbYwiaodDDnY8494OrU8yjarMdT0MA2sZjLyF8POD3eqzHU44wi
F+qPviTkpKVgxBLyfTu7jkGOptMLyIALB11827+aAHOpP02GB37fkbUrOuzK
srIyGeHT2BCRRIbmCKpYVYDebC/919w+t/pFULUUcuCCz5YZ2iJDuVZT5p0A
RWINuKPWouLO1Pvvv39ziwu3sHG8VPnXGAkXGVVP3w0hHo/+rGhiNCuahxMq
mgotzml2rQermmeXG8mMFq5XTsBLowE1l1N0iSfoIGFXqc4s+jIWwYrxPRws
OFpwvHANVGxWY42nNLeXK6tY5jjyVcN8qE4lvZPNWNhkgJhqGu93OrcMsiKT
mbFl1k7qU5Qzdzc3QA54N54FQ3ooDQXat872zaM7CbBGqdkwBpcZbjeAQlDN
rreUNxC7EJXDLFox4xZiTDwPr1ttyTUyOKC+pDuyxaoJ0OYXMA92LmxKvdWA
bDJCFLxAh12JZ0W+eX5Du0YkLLRSwWsylDmf2WzTg13qRoxgCdx6bF3bjSNQ
nNGZLh6dgzZT3usbD7K9wGAZjEEH/XHEdWqK8NXuOrTcaKSZ4TVOMgaNzJ4r
p6FyjSKs5Sk41TCxiD46H+FiDwI2YAHizLXk0fU0wF5kGyDircdwawF2EE/G
hKN0yiRvOjRsGjRYUoG2kSdBU7hlADRoOO7hBj6ndkJTVo1I8vdRfM9utrZu
jHsCT1e64tIVjyK0OyaCZ1emtayoWuCtj6gRSm06T0r1vmAbPd1P9BkeMr3s
WlGHtYJraVMmbCJcCJXNK6x9ERsq6dEaaR3/vxSzy6PK5pHxQQoTA9vBrtvx
4WpkTnEf4wwINUp+LavZKS6ifHtrNBzekbqe773xxhsRb7iw4kxaIsSiNevL
LcjA1EiljApCJYEOuJd2oYPQuOZWcjrYFYZgB3zIGVJmDWECyKNhn0MDDNh6
bCoutY/Kb6whbye+soZx4CmLsmnxa1t+d1bK6fsL4yEbEOwi19MoFH+je82J
YpvbrkDZyi0QdCjJQs52YK1TH4pQT6w3elrnklDNkxJuwOhCrfDE6HCe2nwp
xmC+FDMARjCDupoZz5ozCVWHAYlLz9az3IN7IRBWW5rUbO8NwziyjLcDpvCQ
cnCnCPvWc+757m6W9I3xeMpkvqs6xonzSDfIJDBkzymAGSxkxcnnM56fuWSO
OI7zbKxx2DBljOuWgxEFKwZ5QjOokA7LdbL1gAQweyh1kJMVQ2ZZQczAIuvl
if7yL/9yeqgXcLM9JLFCsngaezIx49KGssqM3JUGpQEktFiYx6BEwEEMu2Y2
L+yGecs6HE9XCTzRr690x4VkcmNUQTIqZ4A1MzSVDTeLnvXoZEYbG2SrZ9Hb
5nKY8Mz7uXrNe7tPeoV4w4mWZD3V/JMnTlEOjJRnGSusf/VZ3eNj8pO0AMic
QfnaGAEM2HQWp3rijLgKb1yJGzFJXJAHkHpfATXUkDKfBiPiKsxTsVGyJZ1B
YozXNG64oJqqNX5HEWzgc/x74YUXPv3mN795c2tJYC50tpFrFRN+GP8/t+i/
Cki0bClD2ZX66oFP0LFoDw5D6Gd0sr1zTRzM0GGgYHA/VUfxZ0OgUEhjAo9F
IHiMcrqT/WxYsFwMnGMRnK34PiywkIPjfTLpFAWncmNbZQ9Jq2QtC1tENNyo
YWSUg5E+IUQsmRTVovhXCx+k1oDpHGOGk3wpDNjOUtn1ZB5+IsWOk4EMobhB
8OXLOG4wz/JGwhasB4dUJgxdw+EVDY9OAfI9yHrwNGDNBNhWHelnHGhVxgia
4JZB+vkuuglc5/rcR9vPHqrIgrlkohIaOzfMaUh4eQU9qnq+3mPVtn22zWU7
ZGUAianmUQAAq3ZsD8zf/C6Y2L1lBBBEG5WLKkZdM1Usxccff1ybgmxDEgcx
xMsxxByWyFSIRmPlDmhmRtEnRRaKucJhC1Fkq7NyxkWwF4vIzixlgUSkH+ll
ktkRAIqHJi4p9xQWCIvNImhSAlAuOovN4rCQPe5fe0XwBL1z2Fz5w8CQ84sz
qoV6YkgzzirTQnNAIbF+hh1hW6w4ihGhOeyCLv1+jf3WYk8+mh1PHF8EZbQi
n8/867lvTa7nsK/EtOk5I0SNa+z4mUX5zkBcs5rjlPmsbNApJ13OZ8JERbGg
9yzMMPULRELgmtJp1sZ9vX+riNUolrvNlo/aOWbdizVEkrkhCbxUhK3zUZYY
BTtpLVwtTCck6TEK5hkkKcu47bOx9ElFdfhMhKPmP1lxDvLcav+mQ/7fmn3f
aC+eBKZsX7sp+tSU3eBf53O3289atX4s8SIYBT79p/JMZPVGylVl8H3gNgcm
5JzF4GgLwuD9Yh+hvMZWfxmokhcsAoTFfkZZsM3kTBGstpUgT8ZrJlOxBVFI
mZNY7kBeRy8CbHDT8h2AiuIqdj7bXV3K9uUUnsvUW3rihovP9USosVNpFz/q
Rs3QX6Gz3+j4MnVKohHhAF0p0YjU3Ij6muPLyiodX0ATehyosrnjGmUB24fH
4p4e2Me8Kv0jpjPbodPDpwHQ0enFGcCaa7Sm1i063eKanKNmBCpRkC36aLZe
vIFNF1oIPWfpdovi2Xhcz79MkTZlPnuym4Wrgtp3iuTcMS2CExbvCVu74Irf
mToehcfEk4qSZ0nKSCK/+GiJVtWzdLEPQ6+NCZg8oQ1qmc2aEkUGxTOxUqwS
5x/2kDSQrI7l5mwADH02CDPOQYRZZ1WQIvYZK4oToHnQer9sDymc7jSIeN9T
G+fFbcx8i1C1CdL5rtcsGxSiNMmrWxiYut77Hqj8pbZCSlk6qYF1CxsQFtIz
zY0dVs1ftKsz17amM1craN6016ct2eBh+CMvn6ouPQM8tWqMiz20zqjGzCnb
vrfC/6nqiqP+eVbe/RjJ76DTQa4oq7Qm1MucCwDKgfMMSkECKyhN98dzg0nf
+ta3Ou0Pn7U3+MgJI/4zpy+++GLAREutjRiJqWa///u/H7OyxSWKCf8z/kb+
a7xYoEdnMtnU/4ssAXlz/H/TK9T5779YINnt9tH44OGnWyTzGv8fbW8SY9tx
pesdnXOyuS0vyXvZiF2SaihREiWRVEdKZKqhSElFqkNJgg0b6VeGG8A24JkH
NhIeePBGHnp4ZzW0AQ9cwPMg5x4aDzV4k0QBhVJVqVqUUCWpSqLjWxFfnLUj
9zmZVMkELm/ek/vsHTtixfpjdf86Gu7dkWy1gcL+X7rpMK7acaR9zu+XcUGA
Y/8vnrXYI0/sz4sETRqX1BjQQydAiwnvwIixH5xKKIwR/dzNg5dvGcTNB7Eh
2KCmyIqA5d8d/bg1G54NjQ4bm7bk6A+eP8wyEI/P+HuuXkNLIhfWN/f9iptH
lczGXitHH71uMlpYF8GmUS3kZqumimVVZyet3NxUHJfRWwan0bPX8lYn9tkc
zfSYs9988TLmNoL153tbStPINGDYjahwxsVi2XqIDcx5gZljxbDN7LEoF7T1
PiblyeOs/1Q6Jz3lAqDdq3gfgOSwAWFOMO5AeKeXiLAM3Mrj8BwQghAFCBH5
sxaoXXLWKcqDUc3hoEoHkbWyHeMIuUJmeHSzmGuxzd5gur1kK68eIbJKUdIR
FhJB0XzzlMRomTQey1tYqmSLDxYNzCLcpzejmXSBj+xAJplX45TC1rFFMgsE
PppDkk8xXAdGsnOZCsYbqUkTv19tNnb9AvJYWmEhaevsU0HxwW6hyAGWQU7D
Aem0K7xcTWYu1/blGHE34tFaNMAUk8iZBWUts/ymY2ElAE5NrBZ77TOuRRIr
o09kiOK+unGBfWEksE742Jx3N3oAyTMrWyenlrF1OEBVA52Q8UEnVkP4OOlg
urHytZQmHIA1q3Is7WHf5GrlXIrCoGvB6Gi4of21VkeAnKvy4XXefvvtQJcK
kAdnTIEA+fWvfz1GUoAyUKPmJO9T1KjhBHz8cfmTiCRngOngpH2m2SbwBWgu
J7h2vEgc+AcbTOwglnCyXzfg6Un67hx+T9jJlpvPOlFNzaSLdsD/g+2APxn/
/2AYPCwmWwudCKqxvXYB44wPM/7mXqYKD+hYa2yeCHOQy0YGaUkMLYRDS0Aj
DGbzOJQZTCyoboB1GzGApZq1tqbcfQONiy/1+DmSbFienWBRh5ws5szZbFbH
JUYnE6IaHq1CM4FHx6XpEIYFdFxmbpa5Ttmjh9sEIp7DjBmtN5xQPisbCVKg
o54+y7swPo4WXJudltgV6FYWi+PGv/zLv8Txg3/jP3N2c48wvcONz6fXfg7A
uNywlsXrATL7valwIE9RKfym8eD2hWho2wyUJ2MywTgmvUHj6bPPPnuGyuLh
ZmuySJrq5qjYil3WV04DzT48/8AHPhCgpQ5mpIHYFci1dlvj402grMbxHuuR
srHNCwtr6ZLZPbas59RiExJL3yXks6cqol3Ash4lH+/efzCUdUfuPMh4kmW9
2HTsEg40vCIbkfVrPYziURKLS3PW+rUtNlBZ2588OJFAjndm0GX/sJIp+TA7
J4Fky914KKScBWZC+JNbeLO4PCMDrJ5O7sl1PDsSXRnaYfe/6mYZTpLBRNMa
/PLN9qdGvm/3gFKmKzZ6NnZ9SCQxlaf/oV5SwztzCxPuwEL5q9lt3CqXa/I5
6pTripBu4HK1aZt2GAPKydeZK0pzs9qRd0J/ARDWb/BS9HiB0GwuhUKILGty
JkKuWgIKLANcU2b/pCPjCmTsHYEbrpBC0X2dN2cwaTnFs/sJpzQc479mUx5M
YTIuby0r/UzCNBH28PKnHqenniySVdqQcJIqWJHwi2ceadg0IhhICMyMjSu1
33IyiAlbbDCAgk26BQ17JwFAJddTGcYz3o9i5/lkfAidPBuXoCz7lmLOMRfY
wzbiDeEmJai39rgrfWdNAVll/q4WHHi8Fx/YZjd7SXnNTBOQjUR9Tfyc0z/0
sCQvaaVjWbx4qZd0zk+vsajKtfSR5dB4czfqIWXJ0ImoXKYK7yfxIWwMo6w4
o0m2YbnASMQCA9Hq3xSAqAHcGsqxxS3br1oBgmG1B9bdhmgGl4VJje+s5YtU
eMTA5EYa7bK1VH4RiuKfugCPf/RHf3Ty7rvv9usRLROWd8Ej2guxQpTI4cde
43sa9QkiF8uGkTyj4eMcRu7FFyxk5kUqLLDYD/aaVQ1KBu8eQ7g4eGRuIg4u
tikAx8veLNNWdlJlGKlp/HyxrFhlHVmykEWtApXsEhMXEREbu5UjzTICUPu9
IQ+zwTLy1lNcfOhCWzAk2dJU4wK2SDLJolFk9obZ4XwOMggm4jAk2M6HYAdS
ZXJ1l5sHOsxKJtMspwkG6kzNfQlqY/tqQ9odEixcxyH5+V78l9kudqFi5obP
OeXCIvex3pjzDILF+gnp7A6r8HPIQX2kj7VWQnEGvNEtScav0ObqpMQhvZig
JMmGuoe48Hvf+150sRmbNahNHORrr7123DHk8OiRRx6Z1PUCmIyzfPV+R6xp
6uEOcBTZtsJUA8fD6eVnG3Bc+5mgeO39PW3yWQPF3lNhA4p3TgEwNiWBeTQD
EQg0JA7JbaCYfKfLMEnuBjCATZI4z+Eit8bAsHx87GKq9Vket2Tbl9XlKG0i
PCJBAzN8TJmBAb2eo1uoFEYZKS3k2l2LpyAgOV/FeDabutYpAorfnvTa03cq
1Y1VNVKAaiKa15nbbEgKmX2n5rYAfZf5TucyZbMnxOzzbCoye7ZSbPHyfg1w
yVSyApyCCBUTb9VvygpxCsFElD2ZACWamN0t0SUaIdxw7L/9zi4pp0NLJ1y2
Vs8e+zshaeNgqBVBwApzUENDVVmCnMyRHjqex7s0qq6KikexPEw5qNjSEE4+
+clPxpQzDml8dqEi1zAVSBDCiTMVAZZ/Oi+Z7YfQK2XIqykcruOFHu+kMK1T
T48O26FHkxG5ltECYUJ+MRFNmrJcK3fqwQ6sOAj+rWPLcT1nmfJnibO1AJim
PV9nrdm8HOPQ2PakkpSbx9v6PHepK/IX55XKjfP8heMZa2O40WOSWY6GGz0B
tRbhId/IMItjAJpFYXH0sCKnrHXursHPlnWxN0EqhK6h4qIC994FlMyoaA80
oiZxNi6IY1XMLmRsSQUtg/rRniMrampDSiHHd6UlZm+Ro4bcqneYe6NExiB4
795QaVUbfoFy1zrWjjVZYmGNWEbRQcXCr33tazHNRh3pxSMWzlRAh4zrJdhg
YSTDZCwkuYZZLbMB/NzemFj/o87GG5ej09EMOp0kLLw2/VXcpkLsWuNQjNyB
hSczTzvKTzuqn00yQD8V/3/9hL5VmUxVjwsTMoeFbJ3RXWrSOVswdzXIgMjP
ErHIMzAGEN0ajIPTOuCaUwsRCDTCyD+BmzfzT7jFpUQzl8Sq1vLcvaiI+U96
yERHqf1qtjlLUVzS/jANubG3Rod8q3O1YzpLxxSa7CzdRlqcc625rzVhPFtU
Ro3bex54Gh2lTA/nV4wiAk3EYbEiQL/f/OY34ShlikFIppSdjR2DtuSeHv/V
enapQzOonIlMlmW//9xzz0VXQ7QZ74sTp1MSLVZdU+JFXVZYAQ4/2rM0DJuy
t32RnKZnhXfCw1NygiWG1bq3oG7EQ/mZkBupuHBiAP/mQCVMXNZWyvU4zvgY
Z28wlEzE+DGWDTVd3cJ3Y7lRrooUO0ZqPEbFEkpdrEnIgcXyPmx1DieEQcsS
rcIO/GBczmoyeFaSTci/WYk5/ANqCYTxCDY4j5S0xQZ8VgbYvTUCWPHyIMy1
nuZifbBxag8ZWGL10PJgSLM853JAsbNQINZb6MJVseT29aBxblhog0JbB9mZ
aoONeCjWIy4Ki/Jqlz81D3xxs9ummdJqZIFP8GjPKuuJRE9rFERHU5eZZQ41
WOmoWnUCb85qMNPGXVv9WsscfeACi58nEV5jri7NE3+3GS2s/v3f//0ANYOP
bD6ydeaycsRJj/HvvvtuCuEdTgKQ/AFv2dxI8AYsbWkXPskdYHkpfDWwvD79
1fnms/3sSRVMGfEOr+pVQXPSA/zF+P+rnQoW8OEQLZnSCJh6gkavKqvNNSid
OdDkZ5SWlciJU3oSXOSe7H/ceXw3Z9CY1saZGMDcRc/Bd9i75ic3UuQoh9kL
e/LfdEqNjJL8PedG5d1laDCzI1dYZxoO81CyG3Wuii67Uee46LcJsZ6dHGJk
DRizvk3GwbxaH8E8spbsWAmwWWfAAYDh0IS+5aCCmcK1HDq4r04us+etZLXL
plWmGmFFlR/funXrDJ2nsWVvXcYmw/ePf/zj7mQrR3nNSPaxtH68snk4PLrh
ZU9DFy9ZFiCh4NzJtWvXeutckcn0KAsfm5lfA87XY1aYESTKyzzWoRoaKVGN
Ll3v9TRZXZq97EIFuib8NB2Ff1V62Xf6kYlFNbkLwQUnBQ03xGhLYpgw2cSG
jSWyeLJB8iriK78Hb/mueDyCpklbugIxesBq/i0jJlODOrfElIVkpQTWsWFR
bgAu/YXMDFoxrLipN6ymbRHt/yXNrpVOy2jZeasLFBssG5o8D7hgTEYs2+aq
Tv7F/pyRuQlJrrrPCNlo2XqU596+QBI511dFg9MU6uCvIUn24QscsZKxcynT
zxJx0rR2w9QtBJjpZep4ZN8A4SiuvtdrHUcZ2Iih7cmVSbdmw96L2QFD6W8h
faNO0zn1kw/pmsovv/zycUOhs2pic5yq/qSMoV/5yleONjhKB/GOQNf/9Tja
oFicjOjk4fTylPMztVvnEnbeJ6BOGqJXQH3iPiDIHgIQsRjxc5IyMDY7Z095
mtcji6ybvcX+HkGVn9F4LZ2txQA/OBue5Bl8D31g5NvwpALFXpkjM2H/I4Q2
JmtuixU3X7ED99nSVbxrpxkdG6PL1cSPnACSi9DN7fNosK2cUJerEJqzcrbx
7I8uV91QBkY0OIFR8xiE1jl3K1qVFeDowTGFAO8///M/R/YHq2yPbFaYFWUu
2DNoUe7Hvz0aaECzSZECV/xP/uRP7uPHtAM07+L8ZDtO+nSDSSa2ZE5E3ld/
qqVfmZraut+EoaeoIXufZ7f5DIb2VoMcG5AcjovMrfZoripomroVdl+74KBA
adm0ph0LFzU4sd9jfta5tDjdcnOG+Gi8r3VCBiu5J2sr66ENcLMFyg7j6OuR
lV0gYxrHJJwKktCAvHyfNQZN51BT46g1Baj0vDfjcvsC5P6+iKPBdv03vVHf
3qTUHLCos8Ih9m6XkLHHLSuC1KJvGJUY3lLRY1Z02nI9EtLzwWpEWD7llj9d
4wBlIZJtmiE0UQ6uO296+7MO7P5Qb3A3Ui1v6042yof6IdeJCaMapsgumg+Z
4xShv01OYGRz01x7r2cpJKO0Uc4fxvVjHbzPL/dPeHrTdrad8YxpwZe7RQ/V
w+Rej8cCleXrx7VoqFPa701wtExuIM8DFXkm3tuayronHi8aEp4n9JpDNNHw
OAFqyoDt/y03QNmzg1Lkc7xu8t36qD0eb8XK+x5aC95qEOf7HrX7mmF7msbG
9PxvRXSi0HJJBnGNmX4h7ARJikVo9vmI0Cb4ZD8xKM3P7HH0fUZpvFnoyuzy
UY7ngqXoD5CXcaA7M20Ye8UQILqIKBGnfHQM+g2ZRNZxN0knU/kAyt0Dp/cr
W2wUJ3BG+a87iYTWhe/Gd2X63VbqL0mMzdDnSMTejyN4LpbhGTOHaawL42+b
tuZMIrSbhemsg12FCYXyH1iKHud39vwzbFP28nl57jkuBe7N2NAp4jOalXcH
H1krHMngg2cIzXXHhX6YqzXV/NcikpXSDKBE7lbpnBZPxnyLzUU2zovFF0WX
nlfQ4GZ52Q16xGZkGRllfoxgSiqVS2R6DstHeyjDTipG2KXUk8LCyuBWeNl7
zSPGTIVhZV4bsWAq9PYwXKOFDJvXwiDFR69xy1bCeG2NQGsPlKfDoWRtCaht
JwiZv+0EAdIPSBy/A/mRFB4ju7IdINj9GF3OJsNt9abV8fjpmBm9khZo5Joq
ywx5M/5tRhAbjzcfmaRtI2+QR381M2gHchYzLVQ/4LX2Oj0Vz79HjG6m+WKd
2kDqeyt/avDoWj93GVcf2yFw0q/WxqMdl82r8loxOrcKNvFIUxeB0cTNNcxS
NIerfV1zHsHq6xNXsY7DVLu56cXcEfluR2SfPIfIOefWKhzJEpi8b3zjG+ev
vfZaPeBUQOaAjdHMwMswwtxsgDzxEDdAPm2odDyDeiLcyTbUm9Z06hVO4Df9
7OH6SG9xnh9ZCQpW/XH8l0pYuvU71wA5gXovY1ke9+v6d+s417SIOS/TIMNB
Dc1+4Qhpx6nD3sZ84qjNkZuj82gUywemp9kWI2xaNquwy9/oDpv4tmjNxMOc
Q7JAM/FAlMgc2wu71q4eKAv0mVDD8VIaHtsNon7ZPCvuHri7HxWo/90kL8G/
s1+ZN5M7zo6RY6mKB08Pnfp9d7GzSUBzlRrO0a+cXZsm4/H2Gl6Zkc1OWMxS
jrwCpHBDkOYFCKOaUbnMGBufWS7b9ry8yzH/BpRTr6gYkw4olBDXoCNR9Rx+
GBtj9XpzQLLjwINJJnnQzWgjRI1/noHkMK5eHve/dOxF6AqgnRWBOeNsxvLI
OCBNEuA3h72Sc3EvlpohDpg7KViUmIcll6XQfgVW+OsdmqN4ywTRTT1N9LH2
F5vA6lA2AN+TWomf2WQsKYjK8gDCTL9eZjYt3iw2MNfxGeciNiObHJHg721I
y3XY3XzXszOfWziNIshk2NLLsJy2i8tnT+ZSGARqmTt5B4y1M4dsM8WWcfFM
qUpYQ+mizS1mDVUs1WacJsRNSbAXBxPsze7lDfZGclAMEK1RY1F3YqENWlwC
wBPQbae0Gsh4aJJcJP7mxF/eiTXmc+YiewGZV+YyWghseBRa7cHG1bzpdTMW
iLaEqtUGgx+OzF6+rtL64he/OJsCYh2cNNgoAHYKuwKGuOqAqADMzL/88sue
HCKSW13Lazng/vfy1qDQ/ga4OlAGQUFDQxEyo9zEFzwFYIE1u5OP2uUxjHt1
GAKlIFyfdjDBykU1dvsIbm/HXR9bEbd+NsHxWkgbFEdfsmDm0/H/z59L+agH
mr0rs5YNpZlJ5CF7ovkbUGYPC7rsYenWZBox1yAXyOSQLs/C9kInjKQIXIP0
IGh2mecUPkcnpF7g+VEjU24eoBuuwcUTIchZJLMT2hOEJe/b+BJkQtXJOjqh
W7ZTC+G9+L6c0PmoqZGrEzqFi3qz4Nw+wcI0HQ7Gb3E6E7v95S9/GbFcFDIL
haEKMHCeKO90Xu5/XBTuMezuZYKrm+6oM8GwIxkeUwgm8Bh0OvJikxfhlmnx
OCAUj9WzFoDrn+NvK3Z5Rku1jj4/rZMYbyrUlrPhueqJt29sF53HFvEbuYUQ
L1aRmeL2F8za/36CsngnWDw+Q1hMZJBTy8OZvUHG9myiLCgHqiGhzByIzPdU
2gxZIkMWkFfimQgG1/DKJt4iFNaAGjsCeY39NDO4e6IzonKkHlGV3QMqew8R
nH/zXZGPKcs1p6yUUQVW1UOmjIa2C7WtgY0N9WiB3MwVQgjK8jzGx3wxdxnd
fR4SZAwcydpyQmr9gA4ntWdjLDd49DZYi1SAsusarcJ7/uEY89DAeNLyKR/c
fcccmcjEdjmdN5fa8E7MkamMPC9T1KpUys+BtYv16IheNir0scrU1OXaz7qX
pj4c7AmIuOdgaPDmyvEMkZsMqFOK6cTc/f73vz8Lt4gKsFJDroeZchVWBgw+
alH/7/I3YdGhbjTZocHOkDOchOeTDe41P3S/VJT1Z+CzNbWemqGNAOJoMTWD
J99b9lvvbQfeo8UFb/OUs6EdIyaJyJ+pwHsfF5WleihSFCr/ngNerV0wib/Z
Orir7HhgrUrr8tz9SwqEjmVDv1wLPrD9c1sdE5bN4ZHtE7m4CpNRsBhZMXQY
vsrH+yHVpCP1gNnPvNwuLoaxX/tM/enCTvVXYembE/jRs5xzd05pE45z/Cc9
/QRVzjrNBXzJKCazmJA5LkjULKq0kZSFKimvAe0XgnDK45n7fB6wzZmpP/we
BENO+Jt7WJ+qTWw90Fybp9bAsydNWQ3I9SZOedjPXQmQH5G3QNsZMmqBmAai
xiVGE//OyOt5RRI244Vzhm3EaWtFKsPlIy4rK1951J8NQUFyJSUyA8aaUlzY
SKSgC9gh4awOO4UdY/ge05wZZwSmlSkwCIeCJ7i1cHIr6r3b+9sxDt6MFbYL
QAZYdsocyGoms5vKqlbf9cfick60MjlrdbY+YhOaCrPFTeiT2YENnjMr8jSx
2bm/0WymiGkx9CxvaPJrhyBw5omelmy227NruM23PAO73LH5LharetLDJ/bh
Lou5ldbYf9ezr3A7Rh9yOXTOEh6zlZFNmf/5fe7J3VjbKwfhXk+5Srn4i2zt
enbNRayt6+U6IPpu7Oof/ehH4RnWkB3RV2+b3e6NHOjcZibffPNNCCLWDXyB
LeQDBfG1r30toKtWzqwhfAB05TtfbbCoF4k2AJ44eCtm7Qm4ouLpBuN6I9jF
hg0XpHx8g4odKdfzl8bHB+f9+v5fYj7q9zjcjqyTYt2KrDdPqPPFTGSPsb84
GI/IarZumbxlcEc+GbLPvuMcyvnaFkVgUw60aN3kih4jtmx9lDR7iv3LedUU
Dh0zneQYL8r1GOlIhuRRWDKkItcr9nS0JTyIjJe3+vlY56bOY2knMvXqNl4H
M4ZyRlV2HptRZUnL+yEAzEWsOaNK57FzaOYReoeXtZH2XLSWTCoYpMhjRYcB
hiwrS8nmL/e9j+OsitHx2d27d+N9GZvjY0wy4rCm6D2ehcsfGWBO9TH5Pkba
0b9zxb4oPMmtZW6zrE8ybXvXefYXXHlm0c3nHOqsHZWnCg+x9iSCksGVOWSd
kTVwYgZUKznBCzE8nZ28mkNm+HzGbrDaC7jgdj5eZAXhmG7OfSZFSXXL0NlZ
TBGvxv1Mr5Uii2GJDUwd1zoOhl2GfBjg+pWOOAyDx1urlwAzjs1IBscuo70c
aeVEBnxZVdvpYKGPZbCsbG6yxO62eQZTYbXu3OHCUgiby3DAsJd0zoaWNF7J
Q8obJ0WG0XaCvXYVGO2uYvu4A55BbLoOX9edro62taUUSzN+mnodCSHc8dYE
So2myk2Y05R1TcFNuG5Wpz6jyuXL/7c6jPl45IAQraMt+xRC33rrrfgVggtA
zemcbCvoqDNuC3vE66+/Xu3X/ZhcYRSZL7cAoR6sAEOCUE9Gru7bZvJtdcXe
95K5hOK9DW712342/v/xAB/OiGIWB7WMWSgKo4GWLdjTjx1ozySUqJXXI01X
rqpBMrieZ4E09sBBErQ0c8yzEtZU1GKHj5xFJkgYM42DXRlEJOXvV7uQdLR1
r9pEoELe+PiN7oK9jHZBH4crPFdwisphH/027HzbXLDmHIrkxv/s0TEX6oR9
iHAnpiGfozuYJBaUdyv3Oo+2diEET0SeEc8XsQxHMk7Gwcmekzz3Qf9o7mvq
+S7GeuaadiHytXQQt9BRf09TU8wZ4/s5jcUe5Q2xYo1YLxN87E+urkQntuNL
RyyuQVD4rKGV3nKGZRU/S488qj6ZBpZNjkFuxTBG1gNbHYpW7CEcnzpLQa+c
QmepNMPk3n/QmH91IiAyiguigQpuhHsyIl7flPK+3MOLTA9jse0KBxZKuDnI
kM5nCGOEDsQiF9LoLJTAy6bKUtahH/QGsQc5QXJfDjN4a3gee1TDcg4Ox+pX
nlVrMuetvcsgqnklVi2ZCAlEjbQ/e+EWOpxtj5lwqsYs702gaS7ePTa1zVk/
ooBxhhY9rDQMFZT2enDJZPkN+fyt0d8aEmIin0jlQxqTUHW4Lh6OjYjmNydD
qBoVjffQRablx3XMZiBJLUauJBjPPfdcp6crs5Cig/vZ4QoV7l+VP3y2A7hW
9f5hU2UPKreNsOYSCHypQtQ524eTFSJm5yrsHLagHJX8bbzAvu62frUxE9fZ
0chaLdNyjBIaOWTVrSJgi2eHI1vFws9G2lbbmJWT1MgfpJ9D/qDqfSibKRq3
7jGWdbRwXfVcHJrA17aub0xCPruYEHKeiWZCpsqT+2as8RxdlWOR1UjokV2V
HsA0p5hKlDhn+W1xQQpTfv3rXwdIcYgGuDiBIFZoGN6nvMfJBz7wgXaSefII
cwpNYltux8eY+NlaTzQfz+Ogzpgs6ctgq196LFjR9Iwcd7bS7c5jgSZhv9sb
xZavnkMHfKp866/24JwN5rMlw9nJYy6P4Dqgy9bmjITdjUCCScYZ59JPJPnL
4Uw3AM92IzDLOY8VKAcH+De/z0VYdhZrKSYWiYb0KDlITeiHahsYqGmk9jc2
8LTuGcaNya46XF/riR8YUpjZ9iTd5h60MoWZMWGciWd/5MYcvCnoxn0wmEAi
UAnGS1ARlMoUxYYbs8vTslmpFVmlbUlSl+S3blprLRs2KTHtz7q2CWHbH3RC
bAEqdQ8vNyGP/t4ElUwSs/22bDFzXdm2Vap0f2MDJtbJdu65K4rAxEbij90a
s4XWgKR6KkUltLs9Lj/+8Y/H7OREGz63tEsFzLYzpYrdCQDVhJuLgMTRFl1R
PYu3ThbT/wQoIoFGBPm3/O1Rh9HQ6ivx/0lZSEeu5qQ8b2aVf443j57Sw1YT
62P3OYWjmMQvBDPjVy7kZ80Q5tzRGtxBqfJ7s1zEJ/vpMPdaJciAoQibv48d
GuXgLuu1btCFs2MX2Q/m+QpNGzzhYWTtB2P4KiSg5SA2FvE3+jl9FzWB3i3t
+nacuVBbyVb619DZbfMEalOxQ4AQhImZN7yGamL1aKoCbPE3NhaHeqaHA7c9
NLlveb/jaIzcjHBSW5jCTXe9b3foYqzWWCLAVs0bzdezJxSb45JrOXJEkvf3
uGh/R94bTcAacPrgvTM9Ne8udiFpSIg93M0q4fCO7QRQcApDGgUvxoIK5XTj
JmYeASzmMbeWBhBHnlSDD4xVPoWW2LzkBotHOzmPqZFoeMskkVJwFQk1fUtF
J7n8XLytnXgWgpf2VasLubGhWN3rTlZPG5WbHgT7RNyPZ7Kpsa+k9JJLmelj
ujJuswQSD0hQZG91EI/veeBlRyKCND0BwRATvoPikJzSZ6BA8jNMnWydmRe1
wdcqI1jrM3K4K0O0khAguaveJIdIQLAERnhg8VTv/zsCVyZXGMHKoIHJTSY7
ZeAy+y0DV7NNa0Bv3RoK642ryANm3Rz9fj2dWw67jIQRGUmA9ZGPfCSu53cA
lnXLApb6YozOtPhbXEsf4pqywvTvR7oKiyNgvfXWW0eaOzUq9WoZGpkq4lTH
phZ36v/mv7sTvDpeTNNRNni1xKaqhAZ7oBOtvbTWgp695mR+/ISsWDaVHXPQ
RyNK6QxkkRBaBJYNaaEEugMrzLnJwsicSLXIYlvfnFsojbWGCIG1hsQ/tbLQ
KdLsgHKZZofv45BeVbZ88eqAn2rg13YCi/htgypTSC+jADAQo+rN7j9Pi79N
mWF2/+Uyw+z+ky/PVk/oPiwog1WUFJJ1CQE5ZZksJWobHcGhQn457l2W8jgY
xKpsRUYI71+byPL/R2NsjeeqlxsyzcAUetnzWi4Gt+Nxrn7I/Hzolcqbhd/i
Vod+7oPocNJwn1umJUy1vIcyPvqMfbUb5owJvQkuoBeZE9N/EUHGBH7ICW6q
vTkRihAiuI1Yxh4jBg4tVbUEE13MPRDlTIiDeKPLOYixDogn82wWgAxr2yJX
shUxb3J059yQPa7eixjWYc9xZeE8I+jEjN4p4NYLIZvIPKc9/IPIz5iAmZNA
jNrYBtG+JFzHVuTdwGKOTFjf+Bmx9nl39pVHFS0+4wayd2nZ5Qaa0e9lN2Rt
iVRlyLI2qEYAyv/j2Lq4E4+0R632Uoat0eOnbdWqrJfMQwGZbV1Fc8FDyv/Y
q1X2NWRlXlQzs+asLM50Mijk+kU2R/Up9oTMmmeJ5PC8L3/5y7HKOcPDwupc
lSajFDfkOkJdr7/++gXQYrUBLXwz+u8WB9nz96snn3zy//nOd77T2340i8jf
Z9B6o/5Kr18yrlYni1x9eNIBcv2r1mRL460ZV7GP2cM27UYmkS1LoXT6IYeS
SgFr7HMZ5NjrrJyJThZe5rgVugPZNgsx98qw56xxK/0nvWzlWqg2eWxQT9pl
9kaqFdblJlWyVr3cgX9dj/+/0U2pq5bDm3WEKI2Vefz7d8H4tssbyNg0LdCL
rA+eQENUJFbglUEPoYMlA2KT8X2exUalyUIVuScjuUIiLXFH/xfvyfyz7uAT
+l1qHz6fMxFl3JtruhWbi3PH73XWGv7welK9GjLWI8jvZHbRotINmENEnLSY
Dn7PtJvvwX0RL64HPnBeQRsLvOu4Gs2LsS6csdjvw/wc2XLsOMR3Na2QRZ5p
+Sr3R627jeyH4r3HkJXHHHRxg6llI2VNeRZFmxBxu9nJGPg7R9eUnnbYC2kt
34umk4sX4wnsIgwhU5fGfItMO66G5zuALhueDWvtEW/KbjSFFsHkMMFGYkXl
E2MzGP+UvjUHyhg+KwhwM8YW55x2MzvclVqRAUuMqSGB8v91uFP2YyFzY/UW
yapZE/cu+AA1qwypm9SdGXpzVWguMmpboTy/KMK9QKuajshYE2I1x+D1SeGA
TLUjXJXv1CPf3Zgx+syQU8GvYEwFeNySfIUVy8nluU2mVhYMNAWgKlbdBrfi
yRZTlq+cbvH+AVL/4ejoCNvo2nacOt7g1DR0VfMrzhdWzm/PKSTjkU7K0Vb4
5fjs+XMwBNFjM/PziFnSgCNudq1F/FAkJnXZF90E9zGQxRZgY4ONiLo14pcF
spY1+wXUOgyXPDcAsfTl6EmM0vIymtsVtciWfn3SFOGymnFjLzmJgo2Hx4J/
/2vq2LLDzzq27PDLsSor6EELwnc4+SRo4SSLmkZNokCYfdS0CFjk6LxMSl3s
9RH2LH+as6imOjzSi5MYJbOBcKPAsc9MvGtNaC+8kZg+ZtjH7TsZxbd7Di/X
ylrLzOaOdNxLcELmbMMqIZfxIQu2WmO33hCP2bQChNfkOjlKUclWaexKJuc9
GKOVkPK+m/qWgdJnZUo0VD6rwXXMmw18jQwx1tQQa5JPEY0noiUTOQarnE9R
7ahij1qAh4SpjGQOQ3r4t35FkK0ooUWFqC/E/dhXVK2Ya+FhbyQt1Q9hPolt
ADkcYMMidcynjLjMAfOkgmY9rZLi/ZAdYEkX69B1I+BJxoExksWuuQSfanJd
JQESXGogex1OlGc6rXnuWyBQmck8Ov0y5YRcjFYrZtMq5wRmZ2Db4osAqVXk
iq167HvjDLzRnYE61U2MTCXi7pJFNPAs9hSQ9M1vfjN21e/93u9NIIrvjVlv
memjZbPErgwcCIy6Fk7BjFFl9//7l156aeLtW3W3XYMmsOPfmW8+haYJ5LRq
7UmaX4OcM8SQLYuZzxYyuGpkQBIM+fnky7doB7Wli9bcCY1cC71sk8oztsWe
TLGS47MSxybIYe+bo5R5TdgjUV1d5OQmc77HT4uvvK+S6ZxljrAjQ2yc3zU3
mEdZnXZjfIkTNpsbJx1U16RFEEBAmfLSgDSKwX6gjIN3KXvlHNpGnXaUe6Fs
69YEbB6NcQkUfJ9nshIoFN6XlWZMvNP4Ph4gxozzVu7V/K8vxGf8njEx70gQ
ysLDHvMt2BiaB2Z5L6uUeU8UHYcgJId5ZzxWPnMy5azOfHEPpAhAAARQijld
QAU7tFhYRo+EZ3qmgHw9mgMMB9wb/XVsFqaLDcNnyCTTyGaR0dz4Eq8tl1iO
LzUdW1Em0XP01hXlxKr9rRVkK1zUnHa97On6CMvdohny4qMhFexXTGhmQ9J5
Zsk9LE812lVmFVaCfcoK8Kr2/EUauQ/bbc45JP+UkMpKmSGbasRah0IU3o0J
1OyCmc4q2hJ17fhb/qxZzvCNLJ7qTBA5ZMSyDP65jiooZ1lpmA/hN7v6c91n
zvRtmmMRDru9wIbDbujbU9CqxYYwy9oOAo/c/qQsOoW4V609Ne+Ou4uPv/Od
74RN5LGPMVnjb9w/F9l6JOS7RKsytGNXMSRBht3RHWlTtsyGMKTtdRiphF2L
7wcMkYf3Svz7o2fsUnS7GGJ7RuYZ2WJubWOrTFiHwu/m3kOWVesIuY7tph/i
CpGhdU3rr/DBs+ZYOpiLiFiWl7jBXdb8tPh6bCBuzmLbz1K1PVcEnNO+TVFw
IX7XTFe5WMkJGmM/bFx87aR7owike0Yd8m5sDN6LZ0sbWXTg2R//8R/fL1B5
9PTTT59xVi12QIcQUwi0GyxYYkJRFiwcepR5Ml08Zws6j3q/hZEa94k0WFbr
2z0pCGloHCq9YagYImM4Gk1u41wTg6SgvOWvZNLY2ex2jSAGwr2RDj5HcsEe
JguNN3rV1JzikAF7xmLuuTkSJtfNedLYKQaYGLNtQGRvMPjDuO3sJ4ioKfUh
rSLy8XAIV2vo1Fv+ZGPF1Di5OHO5aY4HETGqSFLb8LFL8DSOXsbMfZUTwBEw
didrACaz65hLkhWYAwRVr01OMbaolHFjlNhmKNXzxPs0+rjFHJIgZLvS7dYN
SeQzbeXje6iqcFosnu5MABlNLHIZPWeyBXC2QA6zISfqjD2vxkrHVu+wZhGi
cWDRVubhuH6CSdss1irl41Z2OLd9tWoGC4qdu2GoiCVcpg6WeZq3yWU6uo64
LdhB1kKNvR10LLHaBAl/5513wu5oZUUW7R4lQMFcCZfXCCiLFW0J4OGYmCfc
QmoYNg7ajUkWKhAghseweQ00Niqdn9mMuVw2C11mW+Qau7S/jwjOIuHLwQUi
CrUFAcYVe+Q6z1nzUzH3GBr6ij2f3VKJ7aHxzj/Tg+XSMJi6zT6xlu93Te3U
pmhRD8qPbQ3YYGdQATu6w5gyK1cZA3sbiSrAc84SlvGcMqWARjBa9MPRI72P
Dn/0r3v4th6L8WWAETB5h2xm60qMhSoXVK7it3p/LYETcckbiD0qvrBOcuXz
7pacYmPwfdZDrmLWVRGxWww/ez/EyUQ1vg/OzDnGrFhAPM0xNwkCqbKuSWcY
J/bsDENPy3OYEwy4j30OPKwao2gRmwu8gdNGuouHehGb2brZOrEiyOiqTSRs
hJDiNweBMa/EOvL+HFKIajFm5jjPh6f0uTRu5tBuIMiKJ/cxYdgqat6XV+Bn
T6M6T5kP8YfrTKwQYzK+zDjDNr7dve5O4Kt8DTNljQCvwz/xzCxXu+Uc2ffF
uiPzrB9yOJeMMpdukNmekk8szJW9wJmDbpMbEGbQBnFWG+/L3qS2qGXfVPfM
smEMWWISPEMLwWxzsWQunBBYyczIl8/63BxkJ8lAjKE2ls/k50KSyxudJIw5
WaS0ALu0lreKTIOLGDNJw365mS/cwn5wCCLDRIkwOQgRw+Uz067BBRNi5ecb
q1uty9LZwwLxPTfrrohLE8i9DC96HuRjEJ8qvJRRXENG1lFjcjPUBOqBJ2RX
1NgMrKn6JY9dfLH3iOLjXKX2/xOP0aSTyragC+hiszcWh1dCGzBZ3M9IrOaI
O6PsxnOew+EBqS/XWbptFgdDsT4IZWI7UDYdX+WVxqRxwUEHYlCth3kfCTzs
m1cn6KoA8W76TJmPjDDyv5vObIko/0Z98J7u6tbgpJ/2TV9moAyK6+zIyjmE
QxNnkxxuyN6wzM4vdaE8D6MLzBQ6BLGsz5KjfZG2nBbAo1ka4/W2XUtRlxr4
Xk/YIXqH9ofjKoTLmPJourDbmEyNfiYRU2wmBlNOyEDMy3Gf1ri10zEAIXJ5
cy/+Nl9vzLMmDYCF4Xljh1QPyDktoOXgxcIB4ZkoSXiRFX+Mu+yItSR37nqS
W1qkcrXxXewFXNgOqkHMouYPPTYxXTTdWHgEYy7XkdW0PXSmjM7lre6GIuDr
OphInAZj1j0g1ajEWjc4zmGH/ayXK49SmwLB5Rvf+EZIEKICuEiSL3Ur75SN
mLk1MuKyDVyQhyL892fA5X4Cl0mu9RRcIDLqzjINGHxwPB4MtH0E063dhSiz
31BCc8aL/sgcRCoq+7zs2/ssj740TweI6WWxlZaWUfsJlVXg3+jVTJ1gHChC
K2XAhwjKmp8W3wwlwcMkEr0CxkyY5XXu5RYzv42PbCzj2eUj2xVqIcwy5prZ
VxO54fmMQ8RgslhAxsT4mbAOMI+F0mNoug6t5EGlsJ6GDLjdNqvMQ0ROk26Y
uqw5M2DNt+N6sQSZke8nYwy6noOHncR4dXAB9SYmSbbnq6KGwHlVmd3aZMrl
dGkJKtuHgwmYbflJjjPYJ9A0FmTcdN85D1lupUI2F0vDZ7wD+8QWCvb608rM
pagD/1BFl0c6lS6vodKxoc0cmwGv5xaSEnWIuqCZ9JehpPgIAWfk2Mjmyahc
JQYeE6SxfWwTDBgxDCMY2bufa0nsg87KICFoiRx1SQkPtWx/cWMCOFcDm9qF
VP8j1/L6RTsF0iyOYqjo28Zh1s2a7CLLXIkIB4LC68/hDa9rmoCus0wSNhSr
7iHtZaymtNTYTA36mwZao5SBP8T/173VYLvHsu4sFOJTMbU4yojy87oQwRvd
t2llNmq0djPNuAWYYAgCyTTTRZiktow5RdLOEuYcz2AOWWk9Ba1hzvfi/3uS
ueJTs2y1Ve7czFnYP//hD38YahO9blkDeGPvvaLGl1FD8eSsfWOhZjasyxve
L9fyrFAJzAozweoq7J6uthTuMNMZhdCOmSFB4YgITZGcAx6wx0+LL3e3I39z
36ugkKgjCo1tSBnE+yHoGSt0thH0aObocGrNKyeRGk6ZFpCyNFyH1LcDVO1X
exBDZjOhPxgyQ+Pycjv5lQH3R3rfkLFCB8llzphs5mc023wf5yhnQAfyiEHV
3nk3LrRjhV9gIlCqpityLlHH24WDUUtPYGUDEyzBs9Q2o73Dz7kbKELHeQeh
28YXbkkOwoiAm3GwzYNmAxe0sr27csifTYFakg98rpx0jsMdbcy1RRiiwfvi
TrdqmCYbnPA6PEbfgIp9Jliz34wcnoK4MjOMDOzBeBlR2WLSMdeZgxAzYcR2
LhowF/X3ueZnjPjDLDRSiAn2sI22JZWtG+5YlCDrIz9HalnRS8s4jD4V02eV
vH0hMuDIUo+02bZ6LvHOKh8Za3Ox31C6U9ClKJewcgJ1kictM4A01rnFslf3
LKvDAIqtdc91bVQLFXyeDJDAyBF4cv6NCbx6FKyrnGMEhdAVI0fg+da3vhXi
JfAg5RvcIUjz3iuvvPJewp1J6vMUd3Ci/X0ZIfEc/gBRi9qt8hMj0bomk2U9
/dSDRLIqljoj8OxZU5r5zPyAzMdtKz7YysrPR6B/+Q/mslCyXMs9zHcZAznJ
A17LDSsEHcTWkeVABGOA1ctWhrKPJO3xU7GCuDVHaV6HoY8ur0wskPFgxCAr
iWxCwjW/jattrLzJrrbcHmBbMAeuFYK1bJBcGcq9MqEAf4NLqFK+z5IwLpaz
LEtrawcG3euUhywXm5DjPiqWcfEMBNdiiTHzwSx2WbJb8tpiVTdRZHZylnsn
rpIN3QYVIwDxVvKvGU1skbzu6ZNmQkahXcaQipznMBsIF0ILoMijpn/J1oHM
AICUc6t3ONhiNUxFwJwY0wWYeVuejHWic8BDYUSrhVqE+lzGUepOrwAyfm92
jJlRhnJyj9cUyjHxLLfylhAWWBmZdfQ18b4ANu9mvSlD4LGZ2CQXemxLGeAd
GZYn1QRDlc7hxqRU1rDMFrq4jkAuu9PZWAPDJxJH0oJAzE7marE7rcjDDLJZ
XGrOGnMMrcyw5o5Z0Vtqccrykd+86ooGFFrPYBEKSNaQGrTpaQbrfkpu+TzL
ah9VG8gkNL4IlHiaNLE3d9dDdOZI1JDNd955J5IFPCp85jOfCYUsDQgw9IMf
/OAo2UDx3M9//vPxWePbxri53xT9FIuCFfX/Kq8SMZ9PxGf72R76961CtPOO
R1Otxd3jP/zDPzx95plnztlurANKnFfhVGApKJ8hirxe5q62kqyJ5Cmd0+PR
t+5bEsdM4OrIqWZWleZYT6WqKAPcj6nfj+2ds1f5dzCXFj12gLSs+alsW/aJ
jWS5mLuOaLADhWojic933nDbTtpU4XfJqJNdcczZtngPagAViGpk7i35NFFf
ShaeBZYjSqh2jSymhGd1DHokhsjlbgWbRvFYXpm14TFWis69EjOXccim6Bss
Wny3c/3aia91bO4MPXzGw3k/y/9xQaIrrJEcsxpaxs+V7CJ0ldxbzi+nfdRu
Jk5TvZpJ8H78cGZY8znbFxjjnIZQI0MyWec60BGG9FZZPl3GVfRSkYQlt1s8
0HnxwESjnWxGBp1jPqlYoMd89lpaAQ9jkuTBQyhNJAWTMg/pXNIzrjjbwPHs
XNWRHfIGr3PdjQT1Fu+ywGKS9Ea67zIgIUAzaWssfsWjw25X8ofbqLeam20/
zqZPdTjS4yafumUchhtZbn4eGV9NWpPyQENw7GehJ66CUZnjVRg3h90XJxZZ
ftZkell9bhEmArT2Mg5NUxCKSQQetPhNzz+10QibnhFmk8gC0Zz1xTy/8cYb
3fzkXuKQ5P7l2pMBhorcniSTaJIQ/VCCoUiIfmEDPhhE2Tjis3ZfeeLivwoa
d0LHAxAFf05/8YtfnP7qV786Kzri3IP4aANJ9EnDvCLWtfr01gnwxUwyI8zE
rlCQTbnWGxNoPy6wqlMegsCeMrf73HLNT4u3Y7D2PUeZIVXGQa+IP90qMQaE
xLG37amM7P82XrhdPDl2a5mLBeGFM22YBeEgh86wbMb0O4PynDVRoOgQxiYV
teBTz1KP9A5mLJrdk7iO3WhjDm2RuYpV0SentYXvITYRZuybvZEDOoix6bax
YMGADXvEpnz8zfo5x86vc6s1lkHoKnYR3+e5pm8jRGia3DLXRAPm76qOONxZ
pBpyUMA2Qv4ALvQz0o382PWhUooT+LjWwQc3CONjbpE3DuUt3l+uLU9dIgpl
N/Jwbp4rDVywHA5KR7gcDqp1nx/q7Lq5i7N84rw7Hl9r2pgfObOlbOd3yCd7
K3PvZyqtXXkI5hOU35X3IzfggY5DOmldT3GI7+8OB13vtiZghJwxh6wjssWe
QO7K01ZxTF11tQw0VYvzidBpNvewYVc2h3nlMVdFPh57L2oCj3U6Up00N0DR
alNMMlghLV6zjQKJwjm3bMWjua0E81KdeZVwjIQ35iWUeJzhb/esIuuCpa7f
dnZgsPF1CsIOLkBSo63J4SGwA+E6TZg0yanOmDTku310OzphKjVD62iR/mv1
hKLTOcezOpLDoyKwJ7/85S9Py+Y8Q6mZFEKGXhHgyttzM/QS78q2AcxyRIj5
GSJCexsw2ut+FOkFKo1o+fYesrPHT4u3ugbmajYtuwuN936QSNM6++FM0ESD
ce3vmgVHv99cPMjKbpszIPZ83+dk5i+QDSlDbDi28zljLjNW7cpVgiGhgbM/
MmZpv5mzZsJuC2556DMRNLaMWNSCTsKFtoz7kcmXuprnY1cg49gW3FNb0wl2
cnuj+wc7o8jooRtNItMVQCZewzS8IsRFgoo8Fe1sfJ+/UTNIGdbGVbxxaGc9
W9tSE9SurWAlxoQHDjSyWQ5IGIW7te9eud3ioVD/MiDqIgEe3AZzgSEzug0M
lYdUVreb8Wy0NTJjmz4bzcuex/hB1bIkS9Bv8fmeW41FLngjYpKSjIHvbTkK
TIHiylIofYis5A9sQxNtBCIJG2aAqCcCKQb8zfPNpJT4VTPGbl5Fa6xCazwl
IE26TPFakiDxqhrFcglmC0leU26P+uO7llVtKfVZrGrYiB+v93o2UcksGQ+c
vFdsrHL5kn3bHHZm5ppLV9O4ImSExH/sYx8Lv0d1SjzaMcl2Koxd8B2JdFgK
aE0N6QE2aKYMSEh8ed4x2j01puf6nLOwA5TIV4iGf/z3oSkoScYjKN1pT2g9
S8/KvmykpSvCPkcots1Ibp4ZL+CtUGk7Qj8I0ARtdM3KLFCZQItcrBGZ/eCW
fKs7Apk75hBxn0MbbZCs/bVXpT1lvs2tZITck7Xhs6s63a7CaqPTbVvkB83G
W3O+ZOa4PtUu9+3L85lBZlTqZ2kMaGCxzGgjSSgTwGZhOcxORK2ymViS3NZ3
LmvcRlydjze8DLiCP9Iz48wvZZKYMO5lUZyIwyZWsyLQI0OZdaIWcHPfFJ7d
6YlLBtCitjF4Pe7PONh0TBiKBTg34zN73YxL7/K6oZ6BHJKYgSOu5z1YtJyN
wDhNMgZuGBvzwBqwmVk0iWG5vx3PEX/dBeh62Tr43NT4uViQ5DotFrRqtGxM
B9MjmyWXSeXNUK1XBuTkxzbnmlc04R85Bfg8OwJ+uRGmdu5Y6pO75MiXZHmu
0IMs8510mlo2gsstqFOL1G52KjL0hAYiC+GpNlOqletWoTye7hm//A3gCBw2
DWaeWQPbT4wWUO7igCwZVthV91OGulcxZGMFoYw4IlrHzB5r+zCgZhlZDrd6
2U/CnL5X+fu73/1uAA+g044WLfPu0Zgivi87uEYri2BuCQqJMUOjw70AnRde
eCEW2K6bnhARgkWrJk3tzWOBE/BMErQb8Hy3/mrS+fzZDfBkFjjprx9OwFNW
6JjSt9qF79YJ6tOKP1ZxDOzkCu52UlkE0qwb0rBsmYSgIk0RhpCTPX5aIqiL
T4W6ZuXdceZXsRKq/l1ww9/tDB3bACnhfqyGbavZEjbivIzVhne6hNWmvEqZ
gcXjszEeDBte2z6pSJ8JAIxP6myzTJEQNI8ULFIDI1W1wVWvkrrXk8ms6mFX
8nDUG9uMxVF0t1lrWoTNP7JoDgF+/GjfB9kMEQvEHFYAJYdyYgA4rjBNuX5s
lCOJswkItv3KnVl9VsadwfG2FwXxD8VHjF2CDyb//frWynF/iWNq8Xx8DFJj
FLFezD0yjyplhIzeKlf3A5oNrcUjUOO2O7fgzSbCyBxDZGlAOvOBWC7jGTnM
k9s21HYvwMwzMZPoaQtRRypuRAEty0ogf/bgsvmPsTgDIVyXe4NZrzimIFTR
QNPd7Sulm5eV513NPdRMGOm6kZ4ZnKllBNfjFXQH6Tm1U55JeuX2QVa/qjoD
lHkinsuJAN2BKBjPzmaNP2d0kTeHuecaW3kyB1vKfhZhnqzCPLnRiwks3bb3
hrSo/B5xrokI5eurcE2uet1PZ/1qyVicXyj+IQGBGZpmdz8SD7Mrm9hi3l9m
lEFKvvKVr1zAF7QK+IIU8qblNc46vKyDEYdFefnll4Gd8JAtMU0enuDKpO/3
07tx5ZH6lftF9s5pZMJ/FVduHO3v78cbImemCm0L2iy7+SKosGqZfYByr0CR
QJa9wJOPhlx7jOIZYgsoLLZks2IbtnBtxhV9RfplpdRHgJGZS5xm1Vp97kIV
T/aZacWg+ueiNxyU1Xrm0WVrSUcEW47XYVrZFtZ+8j1EXBumosqjnaWT+1nK
YwkLE86UImQejLZVJvku7hLcAPVQ9rHMBT+r8FEVchLy/rba5uTM841wmLuu
9TimFGTEyxGjbNjkyE5LL9gPgKmRey5lKZgqydM0hmW0Zm+xNOwpk73QsCAB
IIQ9Y0Y1v+d79g+xz6uJZEwZyoTlRkMDXNhCYCrfQ9Ikt9SdxRgkudWT5pla
4lF7bzOlJtC1+E1PomMa5IphJ4zs2by7nA68IyKIMQ2QcmZFt4BsvDPoxrxw
LVpXknmDAqlwpLp77k30qcdpNpOtYgQYhpHtdKZOkyxnjRK9qehS22kzHUwL
yl4aa5M5uLd2VqMkWKxDiTwR08c0uAs1YbhfNmH4OwOM9J9cz/LYE4Pnq+SG
Op9iioU9svGZoV1ysZCke6iM1pd4xV5d3J64It1Z7lLmhOLML33pS/E157lX
rj7SrRdLaXmFscQUCT0+Pg5J4VZ8LrJgQXN28jzz9ttvn/SgyjrocRCyH/3o
RyeLnug2Sbqe2C97mcDTBLfF41O8GZOuH9/gzVlBuXTX6+d6R5BAd0UOyeSW
53ubePa+tI8TNoIge8a9vor3RUHWf/H/5zvLOjtTe4mDjEVBJlddhj2IhW1D
Mu549pOsQZzj3S5hwWmniWcvdaFZKDQGbDhHYp3yTJ4PSOniy0TWbk3mlnug
HTmLAiKthUpm3bjbkYdBoB4b40M8yKzzhlgXAjbZJ8jLRL5fmaHqfv74VgQw
osKAR8Sxa6sJXWNv6m05BDInjPvQIJHPHJLaFtWu+U9n2WakXpPKX7faWDig
24QJ5ljI+DXJ0D+eqnk/dI/Z7tyf7zLnqG4WCiIKFov7ysHJ/Jh7bv43fiyQ
2WIkqWw8vaO2cpuAFrCZcDHnnAHWnzUwlMH7ogZ5X/QnQgikAjuchMzvYH8C
SzwfvTw2jcw5BGNtdln7ykD1YHyE7DN0XRaeTbk0yzbLm/fbFHYe7IVollcw
HKaNYbDMLJXhcqHHrvZci4VT81Yf7/amNg6vx8lXz6r0+MIP92L6mDJOBCwN
JxLGwndnqn0Wq+4Oq6B8EAvCb+3cbNAHDpVqCK36uaX8KaOFSWuvJ+rrWK9B
GjZ6zTTDjwbzUsW6wwxI8YdVsNlDmZ3aT/jeJPy2qHGYqFtlTQUiZJ1J5Vqu
47YLuaJrD4OQvR/+8IeRWDCXcz2Fov+pzP3/WX6VzZvFI7uh6Ml6V1LbSHFL
d712305P8rhl7ihLdfY6DpVVkLAbtcKxQ84CqC4OkZZycPcoIubovUZu9CvY
H3VkYcs4wN/Dwb5hxu3ucso8Djx3LNYZ/GhCzi5aHG2duagNMWhei63BijLc
7ETKQVc+t/sNaI2GQHh5Rm1AKuTUvh13O3mAWaSMwN4EyBF6chvddQbRFviv
u+KhTB41iaiMgXyb2Qs7+G0YfDNyagfORyeEmDMpA90lM4c62jpm84k8myAO
z/h07Ar70djtk/Vi7kwhsnZTgjLby9tJKtdRo974HmoHbW0gR8rcbATx+hwT
WHcJ4wjasAqoMpPOXC32iynfpLEtwbnFl8JgshmO6pDvo0xYIZaE+5inwFww
N2P3cA0+FB7vY2cGxo46xfDhKAS68l48F8cKY2fMMlKZTT0mD/C+SBayiuzz
TrlGjuczN+4DYYgG2bXE5yDWU/bteQh6otNhmN3tMdGEA8QsZ2153GcH8DyD
LEayeA/T6rWCOOqWeSnjgj/3Tq8AY+5YY04GzA8ozamK+UNT6xIfyn32NgB0
o2cP2tTIxrmSs5tNVSkPUMy3Om9FAp9uCeFco9AU5DBtbuObeLKXERmttgwm
R+H4/BOf+ETMHb0MeAfkTWJDruczmXi+973vnTX0wfYJVoSyXqm5wSTT+sGJ
vw0b6H8tbxT2z70N6Fjwk9vBPVO/cvLss88ee8cGOicsWOvOPLEoU/ymgs66
8a16VrOXJStg9K+s7gFiUBQT/+RjNgbCYOQUAdCn7dFxF/YwWfkI3XGnGqi3
+mobWmaH8cUdXDmL+t3ndnLliDxzARyklZ3A7/iOMValKSOPASe0BN8nxsCO
4oWZdHGn0kE93Bn3pHxmp7G7mEie2YI+W2M3CXcWNYR5swfCci7nWOeZajA8
89qxmo06V79yheyBloJzc+LUG8FnJo16FdhTCSiNnmsFMCx1sGEUVp+V5wjE
XkP8Mp1UPqRaemUIZM4KYtZZAT4DmySy4b4STjA2A16sFHoAvYxOxeFm1x8z
OC22N3xnjRwryLRJEtBIwi40/h7pg9DDSDxSxbuApTrfWDL0KmPn3ZgTrs3Z
Ay0Avaht0h6ddKVmbOIQP1uVgG42Ec4y9VHat+POnZgfxqsJhWRnnjxEAYrm
XG0k9pT3XzKoJSMsGIbetzxxNH3EITGHa3l/5oYzBOvDGRIrlXnifbbV9XQi
4rqdbseHPNA0Xh5gFp8dnU3CYiHbYalSTL4QMpwDqGoNjB8yqtlePNtjt1U+
fGb7QsaKDEmjlitPCRjB3EOfUzEIOWCerIbgeTp6X3zxxVMx6O23345nXBmD
emb1wxsMIjpkwal1PzXVYHX8X1xopnAtVJIbThdobiNSyWR7NeNhPyzbpYgv
2+a6SMs+q1N0DgLKoYJfMQnikN5yBDq5MKo9cu0CDDH3xiVmIOizuf44Flfb
m80ylumMrNMeLLaR5SBTc8EeNrocalwjU7oHf9W6wRNeBuFgkwBfRA/Y7E0A
FwmD/ueeq2SOEv9mMPzMyZoJZJcMwDxH4d0NmdPW10ynqjg0F+nRCDL6JRCh
hTIQ5Xqbq6QUjOkEYyrbCEQWlubsYesoeS8tUx008hogAJz28T2Zv2WFYa5E
0xJiwbknCLLNIrLfIdYEi48W41msgxRnjM/WEGhMUAJBBIHMbbDvWk5psxGO
iMQ+WIZd/GT3N1p/xTUmFWQyIQTLNkT6/uRsMK/NZG60rQjNd1OSwTKIRt7O
bTx7vYuFmLk8jkciz9yS17Hthu7Xuaxpl54pt+MpU80US0yS+7kiiuxR8yFM
fzV7i20iaw5jY3nN89AfAvjYFcMSXnQQQM3SkJPBVLE8LL8tm1XaOeegbK11
HNHuxKrwK5u8GsJg6nKeL5JvRIkp4PWK5CyDBuN6zITeCDcMvDkEh/i7wU89
GO73vu8SLCCDZZFqo8tHJuVZPJiSU9xxbGcGiuhJUcLTLKOSlVx3HLEk5n1R
M96aR26SVd0A6d36K5LbOgPpg1NAGkt9Xq3gc44SZmK1wofAzwZ8KqXYtZAI
pEoJspkzGx4pqvSzZd2LccJxBKE3t5S3RzJMyWaprJJvlMrNq3Z4AYY0XZsi
Swg0ZcCoJuv1kEjGxHFtB11OVK4snt7KlqMdNBf0YV/bis12cVnnWiupfjV7
gI2KcP/0pz9dTg2gWuPy3/QSHZ7KYBkRGo3tY0fQjD5jtCdbdVKzmd7BhGYk
mEMBq1sz+nBNzi1IvrIr5RykCrpueV2GPt7byI/nP7k6UUFqYVSNTZw5Y5PT
YfA99/SQ8Cv39PDYys+szmgXyXbLZ/i3+Bs1x7rEspGP9ul4VYbHbe1LxKMx
g+h9gwllpptsDGM/Id1xudm8r8w+savZSCRk127ujSZlmGhVe0AwHWh6TEST
qVMOwqL2vtmb9CJo9ShlT8Htdb2jjizhuq2YWslwy3JWmsL1BHi6BrkbAmoV
AFpAIXWr5TomBAJlnrEnl1BGm2sG98GYcF5Kvyt4YKWxsIOs8G98qBwBmSRQ
GrRmslgoJgz4McVU3Gh7arlBgtsxNCN7ZmJYUiqEIucsqi2qY6+XG5ev89YZ
d/gZzwLa//vf/34PxGn+tINSVZF3Qu0hMoxU77ITxJNfffXVsITYXSw5E87u
bxO7jmXah3onsqgxvrjlpz71qZMN3kySqS/iTU96uz3Fm7GK5yvx68P7LrAk
Bv67HTaidcZey370XKxlbRyaGbYlS1nRvXCwPjLJ5EPrG/8DbTxzIDdWbdvj
YCQMNUXxSkhTQ3XXQhgZgJb8DIPMoqYQP7OTn9rexznaw6HIuD8iwL2zo2ks
seNnpA0VAVbxfSS+hhsxd9bdGGt/Kpf0/xHvj/ZiyAY6WCbpnRhqVujbugcZ
Oh/zd7fFfTLwcD9bl3MPgMBOLDOBmiulHljGNAc80oGMNAY63wzB8w68y0jW
aUcaOQ0506JIOMfOdUefM30MPDDfKKBsAgFoyDVVmKYeMDesFfNn/nXuZiT3
oXuB++WuqJkLCDFB2xsMko3fXJsx7WDsQASi8Ddj4/44/jjTW2kFWGIKml+d
0xAMjKG8ka+RxRM0Mm4v8vB8vouyd57wuleTbb+vf6YJ6fDz6dhlTAuPVKlm
+ivPA4iqzZFMMRCC5tqKOu2IQjZ9+Fv80afKUoI/TBUYZKIg0wYWgT9MVS7m
AXHWkQ93M8bHPaW4tQmfYqVPsXWOXQbeBFGVZIVltsrNyzk70TB3iQINCirw
2Jq6sOrcIxyuVy3wzWZHWTAbNos2p4RbiD3MCDPHYhRB3W/VMF/4whfiMvbX
O++8c7K4EuhMWljfmAcdM62P49cHE0ocXeAt8lIJLdbZwvHYzmwxkewLXon9
2/ZxWQiIsh+JvY2cs+fZ++IOsildlZ0DES6ebABsxB1ra2R0uQRzrneif5PO
thTtV9h5+lIf2xjq4b1MiQInjW+Yy5B9bOhwpIi5QhiZl+YCWfa0wWVPMKh2
zkMxehZEuOEx3MLMrXZeuqyhdiU2+bfdltR7aqgz14aOZg63FW34vlUZItOI
OPbV3JVyMKJNfu4c2oBgzqDoJ88vkjdyc6Jxx96auY4T7Z4rO0ZTJ5OFgnRc
q8mDnY5WRUVxrmcpkAy9+bw3Y+YdkR5zlu1Ryrtxb5BAe8ca0kz0L+LMZVdu
60bEzuI+0pbxvjj1eA7Hd57FnJhvrU8ipRzUIrvFYzLedxIAUJDn2cBApEGa
VeX2aQDVs3FvacEFtLnX+Z7Yq7KM6E+YUUdxC/7WYSbxpGZZLenAVHuqM0uy
fPogzWYQbQDHEW0k8BNtuI5NPjraVBYorxaRKc8ux5GiJHPnMoMWHmYQewId
Ea5aPBz3taEJ7+21HiSZD94ZMKDUh+tyLqLtLzdlPw/F9VxjD4acSv/iiy+G
w41xIDI8z23VOnbpiVg1+jMe3fxw9xfzidgZhoLq7doGfObKfL5RwSc0sexm
OazT2ZQsKFZ9e5w3xQDx4AwOjvCajZxgFUD0WAg4K6oCQEhRv0iGMAT6CkNI
nXQhc/0SdDp0RtjuJVv1azgFLDesFC/EkumAuYyUehsRjsk/Y6yHHc82Ma0h
hzZ41uhm41myDaANEXvE3105YFFZIsPNjEqDrbmDGmnWp0J4dtH7MDqeuqtd
TMaEzHUiJvD7TEGUMwRygzA9xrlNxUwGwqK+3ys7scj7iUWG4HOaG6Jr+B3F
gkghWpk006RqCTWNSLAKWo9Wmpn9ogXO2HguWMRY+D33kXIHZSXJWxnDkgEt
vt2z0AxC8zU2jLeTEJVlGlvxzNH/m/xrQAPI3Na0SC+jPPHcEwhC0NCpDFuo
QAebg20WAs9lw/C3mWNmNSBC0gTI02KU3+RSDqJyJrCz3QRboejJrv6YdTsJ
8LqZ81dSYiWWW6GCrckVVsYOC43DNfYrr1FebRn66cGOYMzILiTiTXK4K1UB
FUEmEfuBnguAqpCm1jbLmrFWmvKqyaxe1LyJG3FPWVm5ltXWxGc6+Jt8uM98
5jOtjH2vI5KECmjD5Yb399EYkEW5OhrZUSQhcCpCSfNZ7uk2ckjLkcWcE3kq
Az9f7AajRoJwtEj/PTvz2YcrFuX+2iM99mIZUaW9EcrCDHurQt195ssk9OS6
2Isw0a3YeDm9UO+JSQpyMCHIzTtXprGIdAF0ZgixEMrYPJwbhTI2DhuGjcFM
stRCmWlEsSAVqVB5LRKyWO2EsJqa/PEYHIMCMnax62Tv3Xh4nYsUgckMFvlh
VCjd7KLKrJoqZibMnB0UIXuEKV5uBbHjzlDKmI21MDbzTWUd3patwPjZR2gg
trR7KRNc5mwFvjeC0whgGbTm2uFYPbQrcyE7yLNhNgBY9KcuMpiTFCRhbJVV
k3Q55A2lXNOkSeN5oBezZZWSqwXM2LRvNsNtr1P7Y5dzgljMMFHSYCLYiLoy
QROZRv3xOSoMzYlcI4JoApdK+xJxQFsAXiYx5LS6XGDJu3KtbilJpbg/IsnB
nXFhI/K+5T6Lynl6ozuKEbe5FO6UuFDZuheHcT/mE2AE2AS1BmiVxOSBTkAg
dpkfQi4Hu2QHflVOqfIoydXZeXbSQkLbKy+DHPLm5NTFJuB2zIKOMjGs9WZY
BinpozE6XpLDi9WsVmwxeiYm45eGp/glc5aBM5UTKrvi152uN2RYZYi2p5kr
aLVjbHOtLKNd1IM9YMKlFpKZHs/EYPx89rOfDXWUU+m3whc3s3ufJAoI+oc+
9KEobWW1mBuDh6wi0+npxbwLNht6CCuOQST4Al3+ncGiBl8VvyLZIayq+H9Q
+nT0avSjAOF9P3twg3CdSLuyv+3zWW8y1H5/vJBjLlL2flIGHL2KljGcfUDO
9noZ9L5d73iCQDMXOaYXVUgo5Jtd5Yp5qHOmgDXJjWkRpSLoywC9arXZcgtJ
YrsJeZwr2WpCniYFksWBgWU1n1kzxBylZitfxWr7UI/WoDs4uTGo1np8J5n2
WKKEjDE9Bq5yIhRyxz2yfZI9iG3jt/KNetTiHkBx87Mslt1MHrBvseocbTgU
q1vxJ/2UK5NJzh2Zg3NJuGXV9GzBu9luLZcNuS0z9PEZc2Lpxja4s5wodyjd
ljZxFeizWJZ/N3d/rJPFsUZtTJFg65r1ZVJa7vaLGkr1jB3vuHdL0djjh9pL
9J34XEJ+ju/MX87YBC/AOLCFEAdywVzLzcm1dtDjXiYjoX4tJ8pp5LmhEuPU
EjGK5OdcYxMJvgeG8XzwjHfG3DAFABACW+W7y3kSPM+/5bPgvpwRwD7UIO+T
sc9iDIEO7AfsgIryvCKnSPUH58Cur7dlV1pqkuMzZ6ypDF4zzDBxT32Wwf4C
CfcHO+0cJzzgmaExHQyTy4Fwfs9UiXZaahntmKoxWMc2A4+LyCyj+GLV3YcV
wmvnWXbVTNVs36EpfF2+A6HkKq5pZS4tWf9Wz4fkzUmYR92btJ8Lp5Delm67
WDew4148W9pXdizfB+g4kfGKmPImyzNFSJB8ZTyX8bLbWY3XXnuts9I1sJtk
jd8R7E4bIEWB7fKog935AHZnXtMhsn73bLhu8tn+BhTfExTrdw8ESsFQkIzn
VmQ8/OfWyW9EQ4uoavQtWrt3zsRIjgi2KqDwY52rIMMhR/Gct4HMcFJie9ic
j61UVP3pj3/84+O//Mu/PH3zzTfv37t374ye3ECAeKg7CXXNfcyJznnV4qHB
a/vSXwqHtbrhYyFB7BuEHD2ETsw+v130RKMnM0fUeBF+5voWCJ3EjkZPpoxm
SKc8keV3MeFb8TAF157oTHTsFbRkpqidy9uwRkC3/sgtzdtvydso80izhaf7
vtBaAvlEPQmwc2PdzBOwLYeDe/ncLaTfNQHvkW5BSBqLSgCUWEjAwbSF3Hjb
6r2xntLucWXK9nluDVt/sYMdvzM9ApUgXzyaEODjGYAJIMthBkGayTSf9Exm
TICUoMd3rdtF/eiJZJwIBEvFfVX2BgcBMLt7AHT8jRrjxIlWx14ZM9N5dkGE
JROyuBe3YdOBnwxfDBT/3Lip1LVjHXgvwSAYizau5zhOel+cVMSLdwZoTMWQ
gl+s49UFHNMccvMnJE+WQpuLOEVWXzJGmz9q4gF4TIUpgXOAxxxwL52yxgxl
emEcKU+vJtbd6O7ysUIX/YiAW1sApC25ouhXi1JanUHFu3XMBm+Jdi9vXpM3
9uKOWcttYG4vnsLTtOlq640ApPeKln3vV7/61XtoWBhNMPSRM1sNsWes/+LR
vAlQ24BlLhW9o1xvXZ6QSlRK1BIHx+0zEew0X3OwFc1WJw25jmbuH9c1Wley
E39edEnu/weyfb8iWW8V2xIFNoq1GNisQCZa9yA+poQgCAiRdc6NsPbs2rVr
DZAfpEFGrIFpTwin6IVUSKLcUKpvgnR8WVwFup6P1ULW2LqIMSNjx78fjnBN
OeQvB+LQJjkFQE/dLi8mz2tUxc28W/Xj7k6zrro0rwdSGQBmUOw33ZwpBldT
/m/HsdukTwmmdIlpM5ufmYBkFWfTL3VMkeiAiQar5up853IMZY8bkZ2RX4Jf
YcVtS3IHVBAYNJrlVVK52hvSdioCV2J+7lxZtZtpGWnVEO92FJNpQhRj3TnT
I91yuzm3mDFzaRwMGK3BILlObxHqFllExRoaFM0MJeppY92AEkmB7IfE9ziI
cyDXTON+aC7UdE5zN/WD59jv12ar8s0xLqBC3rls3plwmZsgypPL88ucrDah
e1GspdW+0o+dWmyGEJlSzmDGgMwLs+TGwgx7ItriV/QyXOjxl9filXk1Pmf6
mI5tKMZ0ZQs1hxy5n8kJZpy3cpZVa5uL+ORSX412a7fd/aQZLrmi6FBp3dga
uZTNjBdUtkSKqXHQJNtjtWnxfC++ZGIYLWS5Acr117/+9Xt/93d/F0jNqYNl
lJ6AByD/7EEOWSw91r4Y1ZBMK2eKZCeL5Ihs6DNxRNZv74lk5xdRbgbBlgDe
euZuLXD3/xZ5+rdlLQJZf1jB6v4FPj5E8KFQKw0PLtDq2GmMOUc1WJaH5GPh
F+k+/9nPfnZUfq5Qdefo9ddf77zybFCkJCfWZM5/qQhSWPRqKCXqcGNQhfMo
V/M3N3y/TkerdI23oT2QOdXrSMuQnI4dqRq/zSIqV64KVZWi7+V4XYN/TDgq
0YPDaDUi6JkA4LLu2pknwpygPHCzM3iOHkdsLj1KOZDpOLRcuccwQU2PfWhr
qz+zRTIpxa68eK0HAym5dsf+lR5ic/s6eb0Qof2Ny/pWd4mNeGWNsOl6PLyZ
JOWlivZffK67DnU+SRmN5KjvmxUU7kYUaU5p4UVQIpySOc2haMAOXlJ2I9mE
LQIAm7gHChiFjYLOCfLmiIBzfI+fc+tB8JZxZQwjbAmO1XcjH+84PsvtQ8Qr
ns+1Sr1nn2x+ISC5p3cuMh5Bi11rMQ1zn0+v3MfW8YKVddGYiXyXsTA3zAFC
wvwBXGNmiMDFvGdzM7tcJQAInyNpIuveexi5DW9JxS/eLo/YEjOPaIg42yLC
QsEmtQoxbZW+rQDuRscwlLrHs53YVdsCHvQsYzNb2U/c5Kc//Wm5OVR4hzEN
LBtTxNSgR9gXPKQotegPVu7KzLz55ptnCWQm6fINvvam+BOY1Nom3U94Jc/F
bpziG93T2HCK5BHsqoilNZyKTHtbsISyrDhlCblH0oxVbPcxQYTXR48j7WUn
nv/pn/7pcdkx9XXvxMY13pzJPs2skezTJlwItkvTE+JXHWEq01WHqA93zxn3
sByUjcBr6BOZ8wVapzeSKJkOYWyMeyA2bES09hj7GWJjAhKPaQ063h9S1VjZ
TzpVD3PEWNnk5jpmA5HxogBFKjaeNdvMg0c7TyQWO2sVMQcgWLZ2TBvieca9
JJjQ3M5zqU9V/8pcegjX7kIqQ+dXyalXoaDc7CFgt2XeN3cYzaTSkrRGGUL5
xX5oolsXQMo0nC0gFRC1jDa0b4TSB2wMyDAO1BfXAwyWNKP0AQUUqmCFEcTv
+B73QNY49XotClVSWNYY1w/fywnhJkvyM3+bwwIQcn9Ai2caT5NGCOBibIxR
4MoGmG0VBSnuk1sqQlZYXTCvdRaXEai0rqQCtHGahLgSmMsIq8yO/aq4F3vb
Vm/MLXKuAYq8807MibmtYwqIQMXv5nylyBXPcBymJppH1LwGBbfwi97oDBq6
hy0f1qvAmLmGmuxVkFcFlbPBlQZT19575ZVX+l7POjDnfyR4eiQEOfu1uBBA
AJJ+/vOfh68QnyEvysIyWQiz7YgQ5iJI91lMJoeNvJjPXGzwtOyos4mBHW/w
aE9voFiV4e4iVg2W1GqDWj229lz9DKvqfmOtbai16T1S9Sf/fzD6UaljMmQh
lzvyO2J6ilyfvvHGG+1dHjhnTd3zlhFmduOcCZqPEtWAAqz2MlipJyvB3Srq
Mm7GerDJ+AOgZFa+mRLdZeM2TlVgvWAjx624HXJndGbUwXq11ME2QW+6uEZ+
N2hVQwCrbqDMZDVWJ1XIFZPCJPFzlPojri93E5H5ktzYnHMpHjykWoGcPSyG
idAJ4ItJ42IY889W4N1yfry5HFzrgTkThJiMxu9GTOfaGea/1vn58ZgME9y0
6sxf4V3QRyZ/W1aazz5mZXNqVJ7YnqkpXueaNiBb3TXl/3ux8DfiBfjyCFYc
tBCGKViRNPgxkwjjb+tR5a7jehS9fZkFAywbAARlivLnZ0uE+T3AwTUABUqY
ewA2WjUA02gp4NahmzqfmYFfFPeKHxafDx0O1hkOy9jF8KRhzYYXP4tTGG/W
mPF6uf+sXcsyVrGW2aDKjtU5nNLfkuv1Ml7xfcaU81DKz7WT8ePxK+1JHYFz
2fb8fs6WNN1FFiWGmdMGEZ/o+lBU0VhlXB2giHG0Lojv1T7d/P+B3l+W38nk
KMzpGdQZMEY+Ekw9OoEpRJTzG1jAC+IBBKr+4R/+IV6WdeOF0LXMP3ufFysv
DZac3bhxI15y0Xx8B5dg1WJP2PHP0QauDibBqwZlHbZ2BLMuha2aub8yHSOc
gjWCde/Mlo3t6I+TMFyQdndu7VI7249sWcw5uzvnYZSj2/07d+40E/HBM6YG
tSLDpFUcslHmI/EYhWxH+UZjv/bIEc8PokEA66OBcOwQpJ4Nj6YdW3aOdHo6
AkftO4asEGtWGzTalleQkUsLJijYSGVY9VaIU2tr2ZMwUgRgk6T8H8cbMGpp
VplEs5XG7AsWAL2CrEpRhH63zoFFyLFua5p5Czu15fw534bZYkZyhGnEMMYp
xKJrjLWbM8748ozZRXKOuZafc849Y8o593ajYy60tyxU1ceM3lPA7NtmPnP2
DLJyzbVdVFEZ/Srii69cFbdCqWdDBcUP/khkZPQQjQhgABR66PSwARgAgcmD
fJ/vcV9+B7Dwmd0V0cycnbkWQ2fU0NyHTGD+3Yq5ayf4g+485Bb8MQhWHl9k
rgyw2JqjPSae8bepH2xy5rZ1JG3y+nSs7ZytJbGddhZyiFyYZ4l8jo2frJsw
N2LEMAuSyzltyVmhnFo5sjHrfF2ykDn8AuXLay+Z/sXtC+5RT3+OAEmSQM1k
+mDx5tWvhxCzCYc6pl6b05K4W19Faq4fiI3CdxIxVqdp3KYJG/fgYjUAmC1Y
mTjoAVm8v/7rvw4Q+8d//Mc4xyBfqDE0MM9gQ/JaZd4i651XY0JFlIYyuOV6
nn0DsObFE5Tub4BrdZJAy2yK4wxK2/MKZ8Frks94M256NL0Ld+fvxhgViMuA
g8q99oe/Hv11G5X4OVPX7jpCW61fOJzNyWi5GOfFgK80IXfus62Zsqxz8rl5
x0Gk827UQMTDHdBYavMArQHm3MF9xybURkwGn+GiZsw+esFnmENbHNZ4pmxI
23yG/21rKs87SNXN0eyqsFb9L9+c6ALeSzYmky/5d87DYKyoLvQT+sZaKvEs
22M54s0zmDuTCRBr6/lEaMsvMk1gLimTQ8PyM7YLz/KsLfN+zsxg7rdRH87l
0bPdC7TUNt73QtJ4JV14KB6ENp+XxtZ+o+vQtLfmSijKnvPyJyYohsiOKMb5
XdNEVS/yoEnk6Je9EOUoGRNLw7XGm8xtAGbQsyAUpgWfWX4N/GD6yGmLLuba
op+LCP3Zn/1ZAWI0Vk5AKD+X35Ury/lv4JtYcrMiiQnZyqVYaSuRLXBtySDK
pPBaDBUPS+bQqVVMtfOpRJYi2SYn4/GYbot9tcKQjhzSmmncsTWNSDRjeptB
u6hZk0/0Mm+WhteeA3qmT6660Yvqu8qW4s6xu6UMLrWxR3CCs12v9U4pbCkb
eUskgShzRlpFa6R1J9ZqnCTVTLt+wdO9BczEMnPhxDI2PJLPa/zFX/zFe3/1
V38VePY3f/M3IVVIXOt0HtPHCHjNhhXxewFlLo3+gYZRRxuwOWmgFP/djf/v
aYXNAdYkjLUJct3awN57k9/WejLtMevKzjbYNYmBVVr4uyecjIrknRftePT0
009vw65QASYhziRpnJd9cVS+U8Hr9mljd++9AUyFMUgheA3O3mWj7DL81v2G
qfvyrZ4cLXfHiFpSTSUOqUWNuT5yIW3QZlWGfXc1abL/NfdETSJrLY8uPApX
Ra26DZ6J0y1CiQyj/XknJg5ZlnOLdeBUrGdf72GOdOWcjJw6yJg9/Q5t/Kob
s7Vs5Xkju0eOelkRxjX2Tee+6iIW2b6VtTquVtiPvIWyD5nwbnMQ+3lS7L+M
fgCPdYHhcyuR7ceZG4XY0EfS4ORBnE2CbSVAe/xQNJH0fBm1sKUSapUhFYVX
NJEqrznZKgo8HoDWnBK9pQcrxmWaXwKdbZ/RsACUZhariwZG46J50cKYWABR
UVWNB2ovzmpYDiAPzwHOlgFt1yYaeyRN4hngWG2x9XAgmdLEWY37jrwnhkvs
sG34250wzSZ8tMdwWsyn13LbWVuaQTu7S4pqTMtKjhn0au7bB2NJWBrdrmgf
EyrHIjDmh+udq6kder3HjH3+yHbZHIZhelaS18M+H9ZUonVSc4vgulpW1hdY
r271dk3WWm8LnrQ8jAv2Fw9ETzKZCBUvxktygvnzP//zwK2///u/j5cGltkm
bAnuyTZlghtInIFzX/7yl3NwapIU/4BoMjGVUvlWN5UaeulHNJUwo5dod5Tu
MUG57Th2IIYdtY+PGo7FmBqYGRoL92cFs4cwvjDGvN1WIDODg6W2G1rL4Dgu
IhqW4OLOCRJim9QcBRuzNsaFbNGvlKXxQj+XcI21hkg4hxAWWRa+EcvM7hjp
3m0yl/2JRsJYdEB1jqwCSTVShG5nTFpH5drl+wazquw/0bv6MQgmCo1qpx7B
DJsDNYU64swuZcq2Yi5Lmo2wSezDIuRwmEwfujLnktaTS7G8FSQYn4nPmVgW
N4fTWRzDhibLZyDLJa+tn0KojvFwLt2EvE/ImU0+DY0NPTVi1zJnGg66Ek0L
Um7LHK9Y7RXfLuosoxjzOaCY7C5LTvBFucg8aJBKr51oZSaFBOM6Co0u8Tvb
lIBUXL8xs7CSVnFOYUpoD7aKNpVf7TKZm3HZXIpzBAoMNNVfxvgcj703TJ+3
RUlmThy7NWQbjCXTC6AN5n7zLMneGgvkEOexb6+NM3kuU8uY5U22Mt+iGc9k
nHOY/XqguNmdurap5iQx5sQzB7xz2TJLoHxxWzCPJTAWab+AkZvDcuXyevuN
Mda4rRXM1spLWl459OGRu9ND2swCG45ZkituLm8t5Wxw/xkkO2cis/CAZggQ
aIa+RshYYHQHb2JxAnL9gx/8ACw4oYi6Uf9mJAunXEayA1FIG8t/B5LU9r9r
0UVkqv7HtUbUcfvq8nwDPjOgFebaiZ81wPNxR31QSzCrlicfHnN+TP8FXLHd
WYXADw7qB7PJG+XQcvrUU081FH3gmEAiCyJ9vMGJuYSNbCZPswlrsOuFDlSm
CMo3l+liM1Dxb8Fp5Io3BUo3IaMw8MXm0X2lYeDveQN+1ghBhtD1iCqfBYvS
+wWrxad6mowBOGaUzYx1z0bnHfldoz/ou8y2MCgoFIDHxZE6ke9L55CraAFp
Q1+G3SyvHqkTM1UGSLXip8rZ9GJoMcACjcN5Wr8qe85se32FOeudQWarLXuQ
TA43R0PuJRZIhujUf2PiKPScrqOQRTNnIwVv10F7frPXUG3DKQngW+pDZbta
x6/5qFlQNb/44dAU5lBo1Oim0uAyYQ+ViosLTWOHcSaTSSuwtIg+lhWn9mPq
mUX9cWBB2VjLQNvXesGu/GNKAZOVjUCekztpbSOZzMaWQVedymPvQRNDWYDs
feWe2+BJEmJJSXbBFCujRxWn5jJot26EkABVY6aGxMb83OhLy3fKT2W10fLc
h5OeLJa5BDD3vioaYK8mAFcGLbvOsT460q0hCn6p8uK1q/ztzuxhqyqTLXcF
STpAPRaPatnrZzCFobPLFJ+UJYDg4ezw8DBACrHiBIO48TpMuXwm7I/vfve7
Gi0xjKb7W7RrkvkuRkWwSUtKa4p/P1a/dLS4GnHU0RR2ztufCmQVnvp/KXTW
Yexw+lm8Ro3IrWzJlYJeN0ewip0kM9+Qs3FWDm/1dW/FgqBlMjfnthSNdusR
oFpTG7x6H4kFZRNwvL8Mnrj3yCnP9/UHmoGq45LNoeliVa/+KuuGGCO6wmg/
5kUleFjFmFDl5U9POUK9I8wz2YaRGr/4ZO+hZS07s8i+sWab36Mxjb+j4wxi
SY5kUsZcUiF7xJZGXOd50ZYaHo+1cObI6HURFkgKcFrxU33vT8aXuYmN2Zk/
b+DaGEpCiW2La/DSKFTLlbhGdnWhA3MNZbbNH5iZe/l7ptBwL1jObnQSpIxI
mkkg/8VwzwdDx6PfwB6UglwY6D10pLl+tljRfPL6fALGp2MLA/u+NmbggKZl
gyYUEOA+JO4smYPFqzGLSGbOK7UGAijSgrLtsPn19ruz6+o2C0oCt8wALjTJ
zqvlxA5CDHetLM82zXI8YGVngPDEdeVQVgNze90QlC1kgz57YUyB+M5uLWAq
PxVkkpqSM4cOdYNoubktQlpeN5oQrcPVeRgzzwq0c+iERi88gGXciwdCT8gC
wh/kD11zBWBqTsB1RqbTIlw1NeH2UZmo+42tIBaQxeaWaGAmruzZ46bY47oG
IAFES/R5S7aY4+R9fOazG5vPTjoYnXTE2Iksc88YkCr+a0yJhqkCKb+7BW3s
JM8KIWzosKIazstcHBXArmhzO1QoxxxzJ8bw0zj7Le40YM3i+UlnXL7MBkMX
XgY5cpNk0iWTzrSGDEGhysx+ZCCZzDyT4nH29HhapK+Suf6WmFMz3D/VvXfI
CmOxXw+6Dzxh0gwwsNNQIDmRPRdd5fJgeYOs+OSeltcakuI9LXKR23quUGqw
jMrmCPQJryXzsA5tmVpcVNfk8z3Oxn4Ua3Im2KiRTOw264/f2zMr92nb5rbL
rRt4sWzA83y0W6u6KatDSvR+Bx0pHACLMmnVlXY9BzC6dSSzBFjDuhRNt0TV
FbOIY3hmhjM5QlOIy1GOhAR4Y0tFWQpEwfaZBXqKxHSz6CDWgtfilfgSr9/o
HsqFtLZ7LF5PQmJp81B7c+AzsqVlpW9CnnZRqwmpdQEPTZpFW4ukOaSdm/kN
5zCnqIuapHent6HZBT3yn9qJkWll9DHzAM/d7spiZilC+tnPfhbJcgRq+Deb
iEngIMABwwObVVfISGqzsqpWEW/8eK9SZI9r9RvfbC7heHN/zrSHKCcz+3fk
TCxq9vpeP/c22T1+9dVXm4lwM6wOFo+9g2LguzyrKLqTpstPyG5fVEfbXLJ6
s36+tBUuDqylmnXd1W700yBQ9arduAAVM1kL52Wxj6knudO+w4yx6DlNYYt/
c4c18nyP0pgGaRRnF0RwnW07rcWVqs28OiM7YBmww8oYfMisO/KFo11YGRQi
x8Vqlfz2MFEQgiGbqt2cIaEI2Te2GpJHwOCBCUJ4HXKYF+HMhH0GAjyLiShj
rEf/GtMpN9KOvvCLsErWvHK8cXkLi2xbyX0/uDLROcXqMniwMJXti8aQvFXW
HrBcfTbnMLNHq2k1OUWhnWVkgGjpWocxhhEi+LvFAqpL7Okx7zp2qg53XWBo
pXIYjp8leDDao2nCIqKt0GhczyKoY1ksO8Mx4ZooZZSQJkKeiDTlBBe2XkGF
2kHh9V7BOrpSZY6V1d1KXq0DQ4VzVop9UtlFTK5WiovMZGud2H7WuI4uSbMS
EEEWEtHl4GLyveaGtqfjzxSfclrxb77PTGJ+lJWpMHEvwBdIIN/sb//2byP3
jDg+fnx47oAMJt60n9yaM1c9pQLcSii9H9l2NzopjXUqKUshtjBCyfzVSlzo
9h7qmIFGYu4uS1bIjbL5d/n9eZnXmqx9GIrYomKmm6+hWMvfJxsToOt0/tvf
mABR85qg4gvx/7VWhJDRPGIaEqKGTrSI8UTQ5Z248HqHB0GPv5mQlAtwenBw
UI2Rm2f2EB1j/3Pzsh0XDIyw9dnWHGGducuwgSdlKiEzp/RWIWVIL9Ob+QN4
1kgnavdX1Bj3r70gDC68f3BYfCb0Lq/BI9mErLQeK1lLwQY2M6dWqx3dVGxq
piRvJL3pbGjWCE3raTFz5o2xFadUCvSRiny0IrQfVj2atHgxLvYmnjGZe2tb
rwoPvJyeK35nIyatCDP41GTbPFesp+3tpR3JSSuNHnYZiWKHE3RAlfO4lAJW
M8Ce7vF+loKvaBmo8Tmrgg50gkdZafgZUNHo4HfoNpBD3wajQ/JYPraazCEF
JZYbR9a1WAbzAJBkJJXZZUZRGuXtiqyV+Vt8vXuzZPRgyblenBjbEWSDYiSw
NKlKFZAxgvGKcpYVuuK5JUjGB1Y7p6hbsesB4TKcaPxZ5/ybI4/OQ94NgIA3
7he/+EUU2/zTP/1TmZPyyeJ2gAYoblNent0qluYaTZ3zp7zzfjiYjnrJYm6C
lBMBGI4mK8s6NqC06tY23NsSAbTrE0yclaloMBHner4mYZVJROWz08Wkp0Y3
EZpFMcm4vj2BCS2HKUxMDY0P1s8m0Y3vxGfXLqCEJjxiUebhPsT4NWvu1n1P
tHMx99HMaqlciwEiak3N8/3UwOqxOy7DCHlxGFbm8eFn3UtIuu2eWd6RCS3X
7bPLkHA5WNBdF3Fiseqez+p/Mgw/hxMFIlC9wASLj3DYeUEy2hEmZHnh4JMP
2tYYWG2a+7Uz2QYac0pZ7pJhgMPAYmureZkZMULEpydtB80ttH2FSctXgQiU
BjDBlLOrgARezupPW8hmfOT32xxOJgoOofcQp7akZVGQ83Xc34ku2LpE25T1
SxnDi+pif7LXvogTWgboffwc3Ia/+TcueFwkQo7XgiVgikwPpl7wKrwGr8Ca
lLlfhyVxrTceMWNDy9OMDRxnS+Zo8djEe5+ty1bd332W2ZRgVneZEny/+W5r
jvOrIS1sZRZaCyKnkDMESeUMuWd0wMA1F9zaMzS20p0RywY6RQ2DDKe42Mp/
Ry+++OIpHfe4h11W7T7KZyA23pff/OY3YU4w66yKSZdbaOQ5uR+VVTgpvws+
7srMf723WbWiIIfh9atEZypqzR7utOP5wJwt3KsgRPn98XPPPdfq+w/C4cSQ
uTdqrZVsh9nQ8MGD/9HV8IHLrP7ka42Art8h4YPxiMCH2mfpMEZkTGCIep+X
3Vz9U9dPra3cFulusYc5q6FCwod7IFxeQw25bbAg3Yt5uDJ0a6joUjLqwHVZ
l+VWPPYqtgy+rMEqKsjWsVmsZLwUF2p61ss9PYu/Ta5hLfUn5VZ36EU93ABD
5p/M9DmZ6i1HHbhOcWcbmvUy2hi6vKWW29bGaLAdqpm0DkD4XPxytL0yp4D6
4TIwsJaEfWn9qhmuGj9yL2TuIDbGnHvJFqEmKVu1xTiYQGkC0Bs8V9TFJb61
IBJo2OsZqKiVFsVusdVHejwW1YMxYSRco8EKBm6LzAHinDS16ZBJ5FWqIyTq
Jz/5yTK5mHIQnEt5+8bYsAyu0Vc7c7ZefTuTcamRXT632nTOfMjdWzQfGJ38
vmbzmTosaQ5D8RQwNlhKwYdeICRfkA64TLSxBRw4Q6Ow69H23lHZhadFfs61
VpAVbs/tWASwACsCi8LaIsN4npjMpChyct6V63pTSLlBAyupx/B380bXgqXb
vTtwdqyzS1lVhHIu/B0cOjUGzl3LBj2C1KCBQWhs+aRQYu0cm8HgZJEKTRoY
TEpdGhi08IOpVBUa4j7nfl4rX/p/NWe49weMUspvzWAC5wakukzFeVm3o2K6
VUy4ccJSS1R7STx61kyolYwf6r3w2O9M52WgwD0RXbvrSEttBxyz3pEd+/nY
4mFOn6FDGnl+WSmcD6sQV/TRFe2FigsPdt3K0Jk5/Uhj+1MxQUNB53BVV5wE
H75QCK2hjQTmXN4c75vTDDXxjHqsa1cxFCoerDam0IMXyh1lkMrpY5cAQhlB
0UrFVuf3TCz6BYHhGjYA19kEblslzZxDSTL0nFfOTAgwCCk6qrmFqtv6oKd8
ztQZLmp5wpO9Px2/xzukBwk1hq7hu0RIjT3k1FwAg0VTCFrQIBaIYfKZKWpM
b0GCGnf4aoDCnJGJqjB4zww1LuoOn3NnB2RI7ayszFkLbCfkxZAdz7WTt+lQ
JgFpJkilqpkgtO9CA6bUbItMv9RQ4bzYd6dlihtNykNH5V3v8x2kgfGDcLJj
EmXITiMdVZ6nuGd5t7ONNj23q+SmYc+6M0y2z5ctXYmPWaCm+2pO2kOxkec4
TKw821bBb81pgQW8VzULqVZ18BQklj0LcpSdVfX1Rqd3zd3CCpP82wYBry4u
KvlUwnjqbZbx/2my06MbMOgsnW/XIb7nED1SswnLW5/cvXu3lU9ej6INZmEX
E3Ro/YsgsAoQeCFuj6ZDt2a3xi4Q8KDItZYQCgIGFJDuy/QXuweJsUGnsUn0
kUmFSHwBgytjwWd6hol7OIe153BAu0BWRyOn+axvd3D0Otcq9zmQN2bMShmN
ONpW9Ar2wR4vtAoE+MJWu0ofkclF28wBHcp8ZkNHKcdYLX6PLtBsyO9jlr2O
stFXxDikuZaJyLlDT6JnmCdL0jkyJnKQlmO5ylCwqE6kp+Kcr6rnO+gbPrNN
G2vA/XJwQZsAKOAswNyD3byzXeOQdKTXLH/WAXus2AY1TWlxHM37WAtjz5aw
Sa4gCRd/j3kJIqbtdJEX5tJeO+hr24qbiTdaB1LU8mxpoB0D49cqYD1HqyAH
mg0kcMbJQRfmmnXm84wFZTcev/fee612+aic8k9hjczqn8AykfzsDcqHB6ai
DPX+RvXfR9LQ6aj+g6roe3PKRztLL+uB/NikZ6TI0yNuUHoumIy2aqr+lHyH
puuP2tk85oojAHuJU3VS1EdZKe/Q9f9Z/dXE4f/N+qV4BK+D+LRw8GkR0Xre
vx567zIC5G1a+iO9jg5ZQV7fj6aWh8kiBfcsuoQ5llMz0/HO6Rlklv3Xuic2
P/BeCIghSTR6pVuoVdLUS6Ot8XcsuwO8arfPhnZz9bd4i7qmloPQfHqwAkkZ
NZXkC9xrrG2QoGsMBfJ8yfeZIWuornJqTy/0UI9d5L5mIwu/ULRDZdeZfTZ2
diY8trm1u585YY5y84LcZicTYejQ4X23BYLRIGgOk3/qoZyE0FWmdlrUw/wq
cxKXz9DfT4U68DCOSx+LiddkTLwm9+bwrqvfEDFjQFKQ9HzyZtcyZWgBjfVU
c7dJMF28ETtDC9BwMN9lzVFPni2YK603fTQj+SjfH5tqWnmYT/35BC9RPzLD
OJRpE+88uTPXrJUNAq6iseXnwCvG79HajONb3/pWHClbedTpM888E+/IWpEX
pJeM9URd55zZ8p71aNqOq4gfcwv78bp1dTEFuRJq206k0ixV8h8kyyZrI3du
1nYmms7p7RZJPr5+/XqlUVzsh5tGrw86m9VcNJbFIRm0qed/s/lV97e/GZ8F
T1Y86Wtf+xraLYr06vH7Ws8uk7l5Jr11MetDeb4XKNsHBdG1YukyBW0cKDem
lMMcBSzoZ8KIbRplbPNbFPWiVr7ux79z+SiqIyjod+no6oO4N9lPJomOOhq5
sRFHPkkj38j5YCm3xg1PxPXoB6toTD3IXvlcC6CTyRAgcnlFj/titTERXrqS
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
0JE5j5hzcY6BhmpQqEhXBkU+OIr4rK+L64BwSobJPVUjeW8bOR77TIsL9VQF
huPAQAt11RMkqIRWYovOoRKypNG/3H5flfI6M1XhqJrHKEl0KM6hpjep/V5T
Royc7pTL5jNtnWVzbejNOlh3VMWNeWELI3sKCoxYY3NrnVGg1fM7r6kPodri
CCiQHvZXzfVSqNqAj0Nkej0tVbwhpFLPAjiiVBZUEmm8dOlSBF13audargcA
Q3HWY9JXaxCuDuVpotAq2w6PP/74kYF4asFntsIYZBgDDAZAfadDNoNBBPe6
4PjjBsGk5hezAdnfEeIWg43SEdfc3KLaWSDHK2LJnRObgII/1iJHdU3eEb7D
gG+Bns0Yfxilu35Mk/LhwzhYgMwYUqgparEJDPBTgyoiw2VO0QyER23Uiee4
LBfvb49xcKFKJHSTkaBh56qQyRI/hAJqq4T25PrVHJpQKjH3UCs7RUNBDM09
ym3v4gik2XMEuLvms/GIIAQ2L7KXfYlNtZ9NVqFFzQPVkIicvdKPTSi/Lp9a
RXv3Eig+22kZIpIpwqM9Q2FFjZRTb10zzaesdQteT1ixGVuwHZsdPeanRgEf
hwU5HRHaGOrOGmW4XUN5ADU8dYKuTjdj7EMNcfLY/F/lp5CYy0FyLm3sqyGI
18fur4bWeTAb9gX7/laoNx3K5Bpg12jKcJwDXyj7qA9GD612DS/ntVXHt2qm
eWpxND937tz1rXFfU9bWqPn3lbc6Pd6+1l/bWir3Pe30GOQlkDLxSGTaVYtR
eNvSPgVNNtZyWIrYakC2skJMtYj5cq8DYFNh6X7woK/lsaSSvXCHa7C0Ufu9
3AAu089yz80gc/M0HZPkZhzq5qvSIa6dg5Esi/uys+ixTcuNjzgVZch9pFjZ
HsO/d1bbg8fDtUBD2ZEQvSHzHxspawiSL+3oN7rL88Vz5odizquiBzXr/3xn
pkO/XblGc2Hm6MgVcgA66vWobAjsXaQ3mv1MUakTPExzpX8mA9kQACAtAgAU
Pp+c2XfQpJLGdG6foav20QUUGIo/YlG9+OKLNf4IlTVj5uWXX/a9veTLnzgw
BeuM0dXUMBR8goKP2b5ti2RjhzVqWAVAmcL4sWpR8S1CY84GqTliJAUfIay2
k/e69xyYIaG8+o67f1Wr9vW1UPHvb9+q7v6sLOEQ8Ot1HluYVBQVv37/zjvv
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
9OYnjl8Yy/imcvFPDojXk5e3sIVceSXna4JIWhhtvn+8Xdi6ne9bysX/bXdh
zrV3rF/YvLcwn8TBHqIKurywaHRNmcuPtbdau5t9a7n6vx+QLxdtz/GetuuZ
9dbjI+m00w6th6O0T37yk6WnzHpZ/45y5V/uylXbXSGvpa4jreWAlobaR2WP
5wZU9F0wk+8vbrCW7yxX/g8tGavf+3hdSzm722U/9k0RQ33FfWePPvroD7fC
sk6Kv6vc+j8OCMtj9dYlEL9Tdzl2kf5tjfT7nFj+0Gohzff9nnLfXxkQhWJ+
duMm5eG3lwp0si1oBdF1HWuhNINZvy18b7nzstyl42o9uubO6pakiUr5zraz
/kCXzYOQ/0fKnT/V0roac29dfWfvd6dqfHU5izsvjBbft4GAfX+5838e4LJm
d+Rar7jznMMH9QLId2Z2or334eNFjPcKaZr/0j5idSceXn1zb9iqvj/55mZ9
HWxtbc03k+/Sh6D5ry23+w3oB2/O1AE12VDZFTc3FJ5dvHjxu1cLeRa1kpbe
/Ldyo471/uaVNz+xr/7q/ZvTgvy7koRL0LitAIOLlfPq5te63HbAf9PAbYt2
b9Vwom5JXaK99p3r5csvUxooNp9ur14N0yjo6bjsccel+kmkO1Lk9h0bSHTk
Iv+PcvUOfnzN6jsecqiBIKUumIeGWt+2mTCV7hPN/+zy09dz/5qbEtyHp+mm
c7Mov2W1EOWblire5jMD3IyOmB2nNW7qjTdUxs5Nf/RHf3T23HPPfdNmklsq
rJr/5dLGG/euuZVpY+3MFXX+s1deeeVDXTYOQuLfKVf63wNsfMPKO07ZaKrg
EBuhecTXbyA1JROw+Y0BBl5o6VtltxxmTCoExa2+7uid+oyLpJzm/3Sv6qp/
9+o7ebO0uBMFei9tJpc/XW722a6IOLzftfpmC0LCMep5/ulPf/rSZqJRzj6b
3xpg2R2rb+bJ9fFklLf7ZJJjcKy48s3nutzyO93evlbdkbjTnOlkcSdyf9+7
Xi78ciW+0Xx+gFuvX32ng3PnzqkPIY73uzeQwBL4ab4wwKrbVt5p7MXbdqcl
rQae3kwoSiCm+b8DfNofuNMt5TViLQiG/2/WlYhVdyr+f/P/yhU6FtUt7WvV
4YjXlh/96EcPzVj3/719M9krnmnzxa5EOJ9uXn+n+W/+5m/6/97aUn7tUXJx
n5ovDTDqptW3OvzUpz4F9vn/HtpAHorh3XylfL1jHLk54PZ38Gv+5S9/efah
DxVcfeDoxY+A0KfKxb/arreKwA39i5MC2ujPvS071olYMek8U6TPjuv71+8k
aV3YjN3/PV3/ii4jnPDX1Zu46g0Y/hlOPpOuFqW+HUvlfMuDaoM/tZ6FTsrf
SNcNZ7qjbdcMXHe2gWj8VrrutEtif//qgesmPVrHuC+kS6feR5WwV7XkqQrx
li7PVl36i+nSflzj5sOVAxd882ZC8NV0wZ0B8p4duPQD7TOtVXK/6CjdYLdL
Z//gmYEb3LsB//yCJ9LF99pV1e1laGhWMkXWJhOkFZffT3ZZ6Y99auAGd2wm
JX7N0+n6pwfIvzdw/Vs346xf88p0/TS5tVJ/6HTJAfgYN98veD5d/GxLnIpS
Q6c+N6xnrS/qtfaD5fdzA5TfHrj4+fUXb+Xm5nTx0MbO5rA1cPErL4Ott6br
B5B09odJ+0AVIM9cxvXvSNe/pstWp/x44Pp77fWPFZsL6frnB4g/Grj+dvva
2jClX/SN6QYlrWyaGVAvPN2Uow+kC5YKo5OieC48Xnch/+5D6TpFBLdZOaUa
v2p/V3LkLSElV/x/a7XPew==\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"47f2840d-bd76-47ff-b413-1437f812c9dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ti2Transform", "Section",
 CellChangeTimes->{
  3.890212943377419*^9},ExpressionUUID->"47fa7330-a06a-491f-bcb2-\
e643bcefe8b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Ti2Transform", "[", 
      RowBox[{"z_", ",", "f_Function"}], "]"}], "/;", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", ",", "ft"}], "}"}], ",", 
       RowBox[{
        RowBox[{"ft", "=", 
         RowBox[{
          RowBox[{"f", "@", "t"}], "//", "Together"}]}], ";", 
        RowBox[{
         RowBox[{"RationalExpressionQ", "[", 
          RowBox[{"ft", ",", "t"}], "]"}], "&&", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{
            RowBox[{"Denominator", "@", "ft"}], ",", "t"}], "]"}], "===", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "&&", 
         RowBox[{
          RowBox[{"CoefficientList", "[", 
           RowBox[{
            RowBox[{"Numerator", "@", "ft"}], ",", "t"}], "]"}], "===", 
          RowBox[{"{", "1", "}"}]}]}]}]}], "]"}]}], ":=", 
    RowBox[{
     RowBox[{"Defer", "@", 
      RowBox[{"Ti", "[", 
       RowBox[{"2", ",", 
        FractionBox["1", "z"]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sign", "[", "z", "]"}], 
      FractionBox["\[Pi]", "2"], 
      RowBox[{"Log", "@", 
       RowBox[{"Abs", "[", "z", "]"}]}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ReImPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Ti", "[", 
      RowBox[{"2", ",", "z"}], "]"}], ",", 
     RowBox[{
      RowBox[{"Ti", "[", 
       RowBox[{"2", ",", 
        FractionBox["1", "z"]}], "]"}], "+", 
      RowBox[{
       RowBox[{"Sign", "[", "z", "]"}], 
       FractionBox["\[Pi]", "2"], 
       RowBox[{"Log", "@", 
        RowBox[{"Abs", "[", "z", "]"}]}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "10"}], ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8902129353724527`*^9, 3.890212940841504*^9}, {
  3.890213064493428*^9, 3.8902131041930895`*^9}, {3.890213149175033*^9, 
  3.8902133292927513`*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"3a840ebf-a475-4613-94cb-a7a3a5a1500c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{}], LineBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAAfedN8v//I8BrrWnn97sNwOZ7FvXb
/CPALrwIqR66DcBOEN/3t/kjwNTdSCVFuA3AIDlw/W/zI8A8SFtNkbQNwMKK
kgjg5iPAQU6PWSatDcAILtcewM0jwIKAS1BDng3AlHRgS4CbI8Dui/QlSIAN
wKsBc6QANyPAPZB+ynhDDcAFZUcyGV0iwF8UcxGOuwzAE9jFbKKRIcCqBOHz
RDcMwFLDmmMpyiDAZrOwuhqwC8B77z1skOMfwISFp67NFgvAuHeaaq9PHsD8
NdK634AKwE6SVSD+mRzA3ZpLtyfWCcBHnb1OSOwawL0JFWNTJQnApsd51nNb
GcDjpRZGOHcIwF6ElBXPqBfAB5drkECvB8B+YAOuCxMWwARwyz3K6AbAAC0f
v0OFFMAScIJMwRkGwNqLmYer1RLAqS9DSDcpBcAcCmip9EIRwKEYKfukNwTA
azUqBdscD8DUzpgSDxwDwGM33qjDwwvAlACvH8vrAcAqeDr/bqQIwBwwAdeO
tADAod1TxHlBBcBdYOd4sn3+v+eBFTxHGALAnpJO82lx+7+6lShF6Fb9v4s4
bGMAtPe/MOnZ9C+d9r/OPvyQMHrzv0S62wn9VvC//Wzrd7TX7b9wqa/4ERPj
vwiyv1pCZ+K/VmYjodJ8yb9E18XYemDJv4jG+tBYH3q/gNBlFFEfer85ff3X

       "]], LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAiMb60Fgfej+A0GUUUR96PzotwbJQ
l+M/4OdScjje4j8CdhXcZBnwP4x6kxtvd+0/BwxQgWLu9j9EC6ac3LDzP4Pg
1kNyo/0/tHR525bg9z+wm4ZQfvIBQET5dMm7Svs/b6JkEORWBUCCg58UMJH+
P15qmh2HgQhA4jcV4UimAECJUXY5M5wLQBwt+VUN3QFABBSV5n/6DkDWs52i
YhADQNfLhfCEDxFAcN7JZngXBEBVe2I2msMSQDsOnyXAHgVAbAvrIs5aFEAY
SwhG3AIGQB+rxpYG6hVAQ4rJlwnUBkB7uENTD5sXQFUIjb64qAdAcKZstjYv
GUDxZRt0a2MIQAwCN2Iu5RpAFesZL1IiCUBFbVSVKpMcQA4zEopr0wlAGLkd
b0UkHkBbpyg0VnAKQJJyiJEw1x9Ale3htE8SC0BShk8tnbYgQBG+7LuMogtA
KluEVaR9IUC53bxZ+SkMQNbmCaKTVSJAjygufMK2DEDOYuVBEh8jQM8e9zrS
NA1A4QSn+JUiI0BcGYkZ+jYNQPSmaK8ZJiNADvXrmSE5DUAZ6+scIS0jQAch
pIBvPQ1AZHPy9y87I0CQe1npBkYNQPqD/61NVyNAtDl9QyRXDUAmpRkaiY8j
QPAGlvQZeQ1AOUfb0AyTI0DboQFKNnsNQEzpnIeQliNAHpweRVJ9DUBxLSD1
l50jQF275CyJgQ1AvLUm0KarI0DWvebF8okNQFLGM4bExyNAI0W6N7WaDUBl
aPU8SMsjQDjDLvbLnA1AeAq388vOI0BFKS5c4p4NQJ1OOmHT1SNAnxNCHw6j
DUDo1kA84uMjQHkP6oRhqw1A+ngC82XnI0Dy3+GCda0NQA0bxKnp6iNAg/NL
KYmvDUAyX0cX8fEjQC2F6W+vsw1ARQEJznT1I0D1MFYQwrUNQFijyoT4+CNA
OHunWdS3DUBqRYw7fPwjQP3X+UvmuQ1AfedN8v//I0BrrWnn97sNQOgNOgg=

       "]]},
     Annotation[#, "Charting`Private`Tag$31099#1"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{}], LineBox[CompressedData["
1:eJwBEQLu/SFib1JlAgAAACAAAAACAAAAfedN8v//I8BqrWnn97sNwOZ7FvXb
/CPALbwIqR66DcBOEN/3t/kjwNPdSCVFuA3AIDlw/W/zI8A7SFtNkbQNwMKK
kgjg5iPAQU6PWSatDcAILtcewM0jwIKAS1BDng3AlHRgS4CbI8Dti/QlSIAN
wKsBc6QANyPAPZB+ynhDDcAFZUcyGV0iwF8UcxGOuwzAE9jFbKKRIcCpBOHz
RDcMwFLDmmMpyiDAZrOwuhqwC8B77z1skOMfwIOFp67NFgvAuHeaaq9PHsD6
NdK634AKwE6SVSD+mRzA3ZpLtyfWCcBHnb1OSOwawLwJFWNTJQnApsd51nNb
GcDipRZGOHcIwF6ElBXPqBfAB5drkECvB8B+YAOuCxMWwAJwyz3K6AbAAC0f
v0OFFMATcIJMwRkGwNqLmYer1RLAqC9DSDcpBcAcCmip9EIRwKAYKfukNwTA
azUqBdscD8DUzpgSDxwDwGM33qjDwwvAlQCvH8vrAcAqeDr/bqQIwBowAdeO
tADAod1TxHlBBcBcYOd4sn3+v+eBFTxHGALAnpJO82lx+7+6lShF6Fb9v4o4
bGMAtPe/MOnZ9C+d9r/OPvyQMHrzv0S62wn9VvC//Gzrd7TX7b9wqa/4ERPj
vwiyv1pCZ+K/VmYjodJ8yb9g18XYemDJv4jG+tBYH3q/ANBlFFEfer8jzf1h

       "]], LineBox[CompressedData["
1:eJwB8QIO/SFib1JlAgAAAC4AAAACAAAAiMb60Fgfej8A0GUUUR96PzotwbJQ
l+M/4OdScjje4j8CdhXcZBnwP4p6kxtvd+0/BwxQgWLu9j9EC6ac3LDzP4Pg
1kNyo/0/snR525bg9z+wm4ZQfvIBQEL5dMm7Svs/b6JkEORWBUCAg58UMJH+
P15qmh2HgQhA4zcV4UimAECJUXY5M5wLQBot+VUN3QFABBSV5n/6DkDWs52i
YhADQNfLhfCEDxFAb97JZngXBEBVe2I2msMSQDoOnyXAHgVAbAvrIs5aFEAY
SwhG3AIGQB+rxpYG6hVAQorJlwnUBkB7uENTD5sXQFQIjb64qAdAcKZstjYv
GUDwZRt0a2MIQAwCN2Iu5RpAE+sZL1IiCUBFbVSVKpMcQAwzEopr0wlAGLkd
b0UkHkBapyg0VnAKQJJyiJEw1x9AlO3htE8SC0BShk8tnbYgQBK+7LuMogtA
KluEVaR9IUC43bxZ+SkMQNbmCaKTVSJAjSgufMK2DEDOYuVBEh8jQM4e9zrS
NA1A4QSn+JUiI0BcGYkZ+jYNQPSmaK8ZJiNADfXrmSE5DUAZ6+scIS0jQAUh
pIBvPQ1AZHPy9y87I0CRe1npBkYNQPqD/61NVyNAszl9QyRXDUAmpRkaiY8j
QPEGlvQZeQ1AOUfb0AyTI0DaoQFKNnsNQEzpnIeQliNAHJweRVJ9DUBxLSD1
l50jQFy75CyJgQ1AvLUm0KarI0DXvebF8okNQFLGM4bExyNAIkW6N7WaDUBl
aPU8SMsjQDjDLvbLnA1AeAq388vOI0BDKS5c4p4NQJ1OOmHT1SNAnhNCHw6j
DUDo1kA84uMjQHkP6oRhqw1A+ngC82XnI0Dy3+GCda0NQA0bxKnp6iNAg/NL
KYmvDUAyX0cX8fEjQC2F6W+vsw1ARQEJznT1I0D0MFYQwrUNQFijyoT4+CNA
OHunWdS3DUBqRYw7fPwjQP3X+UvmuQ1AfedN8v//I0BqrWnn97sNQEO+OWY=

       "]]},
     Annotation[#, "Charting`Private`Tag$31099#2"]& ], 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{0, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQXfvc99P//8oHGKDgWbXY19t/EHw/gfvft/9E8BUs
C/7mf0bwD3VN4njwDMHn0Lsud+Asgj+lJMG7YTaCv5qxeAmDOYLPmupuJBmr
BOcL3zias2iiIpwfdHhWsuYpBTi/+r1tzoTH8nD+jvJZWev95RDunRSq8G+m
DJzvPnevn8cbKTh/2fHKa8XRknB+XMsU0fMrxOH8ugTmddzCYnA+g678fudW
ETj/VvfM9tVXheB8Ga6MlV+cBOH8bFMt1tsy/HB+svm9FYcPc8P5WhVW//OW
cMD5C+8GH6l0ZIXznzeK2rhLMMH5u6ZquL4I+7sfxjd4efOL/txvcL7Lrtuc
f8M+wPkFK9f/EBR+DOeHpSkvvFRzEs7vOPbrQoR8FZwPABwHglQ=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQ3XHs14UI+Sp7Biiw0j24KWD6YzifqUz0TorkBzif
nSegMendNzi/+cE156LFf+H8DbPbAuo+MTrA+PmLUgSehLHC+XFZs2TbGzng
/M7AMkvjOdxwPovI1Gf1v/jg/OunWz+08AvC+aHVSWazDgvB+Tncr5XORYnA
+fKrj01jeyUK51fvcA7mny0O5xcsy9lmpi8J5/MwmSfpPZWC811zQ6ZqTZaB
8yV2yua7qsjB+ZOKOiYaXJeH84Pa/HXnblOA87WiW0KX1CrC+deecS6aHKoE
559LeuooJK8M5z9kWf5jqhKC/2VZxnpJNQRf8vVrGUVdBD+l+NN3fWsE/1fz
/7W+4Qi+2lJJqc5+BN/S/fYFnskIvs/LOe0TpiH4hboKX6fPRfD3bFW7sGw1
gh90zLjtyHEEPzXjq43HaQS/gmv759PnEPy5flaJl68i+C+uOdg8eozk3gqm
z6nPEXxe6SMrX75C8I3i3cU/fkTwXRk5z5V8RfAjFp9q+fEDwc9y7bGu+YPg
1z73/fT/P4IPACGMn7U=
       "]]},
     Annotation[#, "Charting`Private`Tag$31099#3"]& ], 
    TagBox[
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], Dashing[{0, Small}], LineBox[CompressedData["
1:eJxTTMoPSmViYGBQAGIQXfvc99P//8oHGKDgWbXY19t/EHw/gfvft/9E8BUs
C/7mf0bwD3VN4njwDMHn0Lsud+Asgj+lJMG7YTaCv5qxeAmDOYLPmupuJBmr
BOcL3zias2iiIpwfdHhWsuYpBTi/+r1tzoTH8nD+jvJZWev95RDunRSq8G+m
DJzvPnevn8cbKTh/2fHKa8XRknB+XMsU0fMrxOH8ugTmddzCYnA+g678fudW
ETj/VvfM9tVXheB8Ga6MlV+cBOH8bFMt1tsy/HB+svm9FYcPc8P5WhVW//OW
cMD5C+8GH6l0ZIXznzeK2rhLMMH5u6ZquL4I+7sfxjd4efOL/txvcL7Lrtuc
f8M+wPkFK9f/EBR+DOeHpSkvvFRzEs7vOPbrQoR8FZwPABwHglQ=
       "]], LineBox[CompressedData["
1:eJxTTMoPSmViYGDQA2IQ3XHs14UI+Sp7Biiw0j24KWD6YzifqUz0TorkBzif
nSegMendNzi/+cE156LFf+H8DbPbAuo+MTrA+PmLUgSehLHC+XFZs2TbGzng
/M7AMkvjOdxwPovI1Gf1v/jg/OunWz+08AvC+aHVSWazDgvB+Tncr5XORYnA
+fKrj01jeyUK51fvcA7mny0O5xcsy9lmpi8J5/MwmSfpPZWC811zQ6ZqTZaB
8yV2yua7qsjB+ZOKOiYaXJeH84Pa/HXnblOA87WiW0KX1CrC+deecS6aHKoE
559LeuooJK8M5z9kWf5jqhKC/2VZxnpJNQRf8vVrGUVdBD+l+NN3fWsE/1fz
/7W+4Qi+2lJJqc5+BN/S/fYFnskIvs/LOe0TpiH4hboKX6fPRfD3bFW7sGw1
gh90zLjtyHEEPzXjq43HaQS/gmv759PnEPy5flaJl68i+C+uOdg8eozk3gqm
z6nPEXxe6SMrX75C8I3i3cU/fkTwXRk5z5V8RfAjFp9q+fEDwc9y7bGu+YPg
1z73/fT/P4IPACGMn7U=
       "]]},
     Annotation[#, "Charting`Private`Tag$31099#4"]& ], {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, 
    "ClippingRange" -> {{{-9.999999591836735, 
     9.999999591836735}, {-3.71678143302204, 
     3.71678143302204}}, {{-9.999999591836735, 
     9.999999591836735}, {-3.71678143302204, 3.71678143302204}}}},
  PlotRange->{{-10, 10}, {-3.71678143302204, 3.71678143302204}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.890213223571952*^9, 3.890213231135846*^9}, {
  3.8902132673985105`*^9, 3.8902133303660574`*^9}},
 CellLabel->
  "Out[106]=",ExpressionUUID->"a594e503-e3ea-4f43-9dfb-eec6ebbd8bc5"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 609.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a163f4b3-f4d9-472b-8962-64ed1464bf9e"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 157, 3, 67, "Section",ExpressionUUID->"0acdbdfb-68ad-4f8d-93da-7584d7bec660"],
Cell[CellGroupData[{
Cell[762, 29, 1425, 34, 181, "Input",ExpressionUUID->"8802847e-0aa3-4fbe-b871-0e48b98e1472"],
Cell[2190, 65, 708, 14, 22, "Message",ExpressionUUID->"66cd9868-369a-4aea-942d-e9cb4caebf61"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2947, 85, 136, 3, 67, "Section",ExpressionUUID->"784fc19c-62f8-4bad-881c-fca2328794d0"],
Cell[CellGroupData[{
Cell[3108, 92, 2053, 41, 139, "Input",ExpressionUUID->"2cf80ff6-bf72-4d35-b1f5-f03543c34b66"],
Cell[5164, 135, 865, 14, 32, "Output",ExpressionUUID->"e149b0d4-3fc0-4f34-8565-f6cb022db2c0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6078, 155, 250, 5, 67, "Section",ExpressionUUID->"f82db896-cd4c-4cc8-84ca-4dbb44229ec2"],
Cell[CellGroupData[{
Cell[6353, 164, 3372, 77, 232, "Input",ExpressionUUID->"fcfad0f7-8d74-470f-91b3-73e347e63cc7"],
Cell[9728, 243, 1875, 44, 48, "Output",ExpressionUUID->"6cdb8a83-e535-4fc4-a454-50154dbff36a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11652, 293, 124, 3, 67, "Section",ExpressionUUID->"0870485f-1fbb-4531-ade5-39dfcfc3ddc3"],
Cell[CellGroupData[{
Cell[11801, 300, 4963, 132, 387, "Input",ExpressionUUID->"d98e5719-a905-4c40-ba62-eee6ff6ca634"],
Cell[16767, 434, 1480, 36, 47, "Output",ExpressionUUID->"890fef5b-bced-4691-8843-8faf04393a5d"],
Cell[18250, 472, 1306, 29, 47, "Output",ExpressionUUID->"1e500dc7-b054-4386-b34d-c9791aaead1f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[19605, 507, 150, 3, 67, "Section",ExpressionUUID->"23a1a542-50f0-42ff-bd50-712fb6e1df74"],
Cell[CellGroupData[{
Cell[19780, 514, 11913, 277, 820, "Input",ExpressionUUID->"3a78e23b-afa1-4afd-b071-1979d220226b"],
Cell[31696, 793, 682, 11, 32, "Output",ExpressionUUID->"cd03747e-6abb-4d83-a05d-6823343737e0"],
Cell[32381, 806, 1259, 28, 51, "Output",ExpressionUUID->"85e292da-5e89-43f2-9f41-09bc7235e962"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[33689, 840, 134, 3, 67, "Section",ExpressionUUID->"87fd259e-20f9-4879-89a8-14ec4ecb826d"],
Cell[CellGroupData[{
Cell[33848, 847, 8435, 196, 770, "Input",ExpressionUUID->"c6911c1f-5536-4bac-aab2-4c6f9b5462be"],
Cell[42286, 1045, 5111, 141, 167, "Output",ExpressionUUID->"cf381d1d-02bf-4545-aa3e-8cf4deadde7c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47446, 1192, 133, 3, 67, "Section",ExpressionUUID->"11e84cdc-6ae0-4d8f-ad5f-74b77672d2dc"],
Cell[CellGroupData[{
Cell[47604, 1199, 8022, 183, 316, "Input",ExpressionUUID->"4c9516ba-7077-4b96-8726-f5628ebd60bf"],
Cell[55629, 1384, 4293, 125, 112, "Output",ExpressionUUID->"42ae4c69-ff9e-4437-87a0-0e4ea0a4206e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59971, 1515, 130, 3, 67, "Section",ExpressionUUID->"090ecfcf-eec3-4fc4-a926-55581966e032"],
Cell[CellGroupData[{
Cell[60126, 1522, 2181, 62, 203, "Input",ExpressionUUID->"ad4da761-711f-4c1e-b169-b98f33f3076e"],
Cell[62310, 1586, 2540, 91, 122, "Output",ExpressionUUID->"e78fd9e1-2801-4fbf-80e5-c346b2513034"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64899, 1683, 135, 3, 67, "Section",ExpressionUUID->"bf1f2ecb-cd6e-4229-9641-c2b700125777"],
Cell[CellGroupData[{
Cell[65059, 1690, 17734, 410, 1144, "Input",ExpressionUUID->"b0d91778-42e8-4862-8bdb-9a37ac55d0ba"],
Cell[82796, 2102, 13247, 265, 340, "Print",ExpressionUUID->"afb8b7c5-32f9-4f90-914a-909d23f110e4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96092, 2373, 161, 3, 67, "Section",ExpressionUUID->"6a80edf5-fc8e-4cd2-ba32-96d03eb74cf4"],
Cell[CellGroupData[{
Cell[96278, 2380, 5774, 144, 576, "Input",ExpressionUUID->"14fe0ea8-b87a-4d7c-8dca-4496bba5ab9e"],
Cell[102055, 2526, 267, 5, 32, "Output",ExpressionUUID->"5720f030-a941-4960-be8c-5fee8b5f4d82"],
Cell[102325, 2533, 776, 24, 48, "Output",ExpressionUUID->"dacbedb0-7b1c-41b5-b248-a105f5cffcd9"],
Cell[103104, 2559, 717, 21, 35, "Output",ExpressionUUID->"25012b3c-48fb-45b4-b28a-91a97d6cdb00"],
Cell[103824, 2582, 2035, 66, 48, "Output",ExpressionUUID->"25306060-4b30-41e0-a320-8799a3ddc420"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[105908, 2654, 133, 3, 67, "Section",ExpressionUUID->"c90c1727-4a52-4082-8bb7-c975e7ea6866"],
Cell[CellGroupData[{
Cell[106066, 2661, 8426, 262, 460, "Input",ExpressionUUID->"9a461511-9375-49c5-824c-113359620a0c"],
Cell[114495, 2925, 202904, 3343, 280, 42242, 708, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"47f2840d-bd76-47ff-b413-1437f812c9dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[317448, 6274, 133, 3, 67, "Section",ExpressionUUID->"47fa7330-a06a-491f-bcb2-e643bcefe8b0"],
Cell[CellGroupData[{
Cell[317606, 6281, 2121, 63, 162, "Input",ExpressionUUID->"3a840ebf-a475-4613-94cb-a7a3a5a1500c"],
Cell[319730, 6346, 8387, 168, 242, "Output",ExpressionUUID->"a594e503-e3ea-4f43-9dfb-eec6ebbd8bc5"]
}, Open  ]]
}, Open  ]]
}
]
*)

